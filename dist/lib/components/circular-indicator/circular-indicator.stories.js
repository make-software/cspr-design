import { __assign } from "tslib";
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import CircularIndicator from './circular-indicator';
import FlexRow from '../flex-row/flex-row';
import FlexColumn from '../flex-column/flex-column';
import BodyText from '../body-text/body-text';
export default {
    component: CircularIndicator,
    title: 'CircularIndicator',
    args: {
        size: 'medium',
        textSize: 1,
        progress: 25,
    },
};
var Template = function (args) { return (_jsxs(FlexRow, __assign({ itemsSpacing: 20 }, { children: [_jsxs(FlexColumn, __assign({ itemsSpacing: 10 }, { children: [_jsx(BodyText, __assign({ size: 1 }, { children: "Dynamic" })), _jsx(CircularIndicator, __assign({}, args))] })), _jsxs(FlexColumn, __assign({ itemsSpacing: 10 }, { children: [_jsx(BodyText, __assign({ size: 2 }, { children: "Progress 50%" })), _jsx(CircularIndicator, { progress: 50, size: 'medium', textSize: 2 })] })), _jsxs(FlexColumn, __assign({ itemsSpacing: 10 }, { children: [_jsx(BodyText, __assign({ size: 2 }, { children: "Progress 75%" })), _jsx(CircularIndicator, { progress: 75, size: 'medium', textSize: 2 })] })), _jsxs(FlexColumn, __assign({ itemsSpacing: 10 }, { children: [_jsx(BodyText, __assign({ size: 2 }, { children: "Progress 100%" })), _jsx(CircularIndicator, { progress: 100, size: 'medium', textSize: 2 })] }))] }))); };
export var Primary = Template.bind({});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2lyY3VsYXItaW5kaWNhdG9yLnN0b3JpZXMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvbGliL2NvbXBvbmVudHMvY2lyY3VsYXItaW5kaWNhdG9yL2NpcmN1bGFyLWluZGljYXRvci5zdG9yaWVzLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUVBLE9BQU8saUJBQWlCLE1BQU0sc0JBQXNCLENBQUM7QUFDckQsT0FBTyxPQUFPLE1BQU0sc0JBQXNCLENBQUM7QUFDM0MsT0FBTyxVQUFVLE1BQU0sNEJBQTRCLENBQUM7QUFDcEQsT0FBTyxRQUFRLE1BQU0sd0JBQXdCLENBQUM7QUFFOUMsZUFBZTtJQUNYLFNBQVMsRUFBRSxpQkFBaUI7SUFDNUIsS0FBSyxFQUFFLG1CQUFtQjtJQUMxQixJQUFJLEVBQUU7UUFDRixJQUFJLEVBQUUsUUFBUTtRQUNkLFFBQVEsRUFBRSxDQUFDO1FBQ1gsUUFBUSxFQUFFLEVBQUU7S0FDZjtDQUN1QyxDQUFDO0FBRTdDLElBQU0sUUFBUSxHQUE2QyxVQUFDLElBQUksSUFBSyxPQUFBLENBQ2pFLE1BQUMsT0FBTyxhQUFDLFlBQVksRUFBRSxFQUFFLGlCQUNyQixNQUFDLFVBQVUsYUFBQyxZQUFZLEVBQUUsRUFBRSxpQkFDeEIsS0FBQyxRQUFRLGFBQUMsSUFBSSxFQUFFLENBQUMsNkJBQW9CLEVBQ3JDLEtBQUMsaUJBQWlCLGVBQUssSUFBSSxFQUFHLEtBQ3JCLEVBQ2IsTUFBQyxVQUFVLGFBQUMsWUFBWSxFQUFFLEVBQUUsaUJBQ3hCLEtBQUMsUUFBUSxhQUFDLElBQUksRUFBRSxDQUFDLGtDQUF5QixFQUMxQyxLQUFDLGlCQUFpQixJQUFDLFFBQVEsRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFDLFFBQVEsRUFBQyxRQUFRLEVBQUUsQ0FBQyxHQUFHLEtBQ3BELEVBQ2IsTUFBQyxVQUFVLGFBQUMsWUFBWSxFQUFFLEVBQUUsaUJBQ3hCLEtBQUMsUUFBUSxhQUFDLElBQUksRUFBRSxDQUFDLGtDQUF5QixFQUMxQyxLQUFDLGlCQUFpQixJQUFDLFFBQVEsRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFDLFFBQVEsRUFBQyxRQUFRLEVBQUUsQ0FBQyxHQUFHLEtBQ3BELEVBQ2IsTUFBQyxVQUFVLGFBQUMsWUFBWSxFQUFFLEVBQUUsaUJBQ3hCLEtBQUMsUUFBUSxhQUFDLElBQUksRUFBRSxDQUFDLG1DQUEwQixFQUMzQyxLQUFDLGlCQUFpQixJQUFDLFFBQVEsRUFBRSxHQUFHLEVBQUUsSUFBSSxFQUFDLFFBQVEsRUFBQyxRQUFRLEVBQUUsQ0FBQyxHQUFHLEtBQ3JELEtBQ1AsQ0FDYixFQW5Cb0UsQ0FtQnBFLENBQUM7QUFFRixNQUFNLENBQUMsSUFBTSxPQUFPLEdBQUcsUUFBUSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBDb21wb25lbnRNZXRhLCBDb21wb25lbnRTdG9yeSB9IGZyb20gJ0BzdG9yeWJvb2svcmVhY3QnO1xuaW1wb3J0IENpcmN1bGFySW5kaWNhdG9yIGZyb20gJy4vY2lyY3VsYXItaW5kaWNhdG9yJztcbmltcG9ydCBGbGV4Um93IGZyb20gJy4uL2ZsZXgtcm93L2ZsZXgtcm93JztcbmltcG9ydCBGbGV4Q29sdW1uIGZyb20gJy4uL2ZsZXgtY29sdW1uL2ZsZXgtY29sdW1uJztcbmltcG9ydCBCb2R5VGV4dCBmcm9tICcuLi9ib2R5LXRleHQvYm9keS10ZXh0JztcblxuZXhwb3J0IGRlZmF1bHQge1xuICAgIGNvbXBvbmVudDogQ2lyY3VsYXJJbmRpY2F0b3IsXG4gICAgdGl0bGU6ICdDaXJjdWxhckluZGljYXRvcicsXG4gICAgYXJnczoge1xuICAgICAgICBzaXplOiAnbWVkaXVtJyxcbiAgICAgICAgdGV4dFNpemU6IDEsXG4gICAgICAgIHByb2dyZXNzOiAyNSxcbiAgICB9LFxufSBhcyBDb21wb25lbnRNZXRhPHR5cGVvZiBDaXJjdWxhckluZGljYXRvcj47XG5cbmNvbnN0IFRlbXBsYXRlOiBDb21wb25lbnRTdG9yeTx0eXBlb2YgQ2lyY3VsYXJJbmRpY2F0b3I+ID0gKGFyZ3MpID0+IChcbiAgICA8RmxleFJvdyBpdGVtc1NwYWNpbmc9ezIwfT5cbiAgICAgICAgPEZsZXhDb2x1bW4gaXRlbXNTcGFjaW5nPXsxMH0+XG4gICAgICAgICAgICA8Qm9keVRleHQgc2l6ZT17MX0+RHluYW1pYzwvQm9keVRleHQ+XG4gICAgICAgICAgICA8Q2lyY3VsYXJJbmRpY2F0b3Igey4uLmFyZ3N9Lz5cbiAgICAgICAgPC9GbGV4Q29sdW1uPlxuICAgICAgICA8RmxleENvbHVtbiBpdGVtc1NwYWNpbmc9ezEwfT5cbiAgICAgICAgICAgIDxCb2R5VGV4dCBzaXplPXsyfT5Qcm9ncmVzcyA1MCU8L0JvZHlUZXh0PlxuICAgICAgICAgICAgPENpcmN1bGFySW5kaWNhdG9yIHByb2dyZXNzPXs1MH0gc2l6ZT0nbWVkaXVtJyB0ZXh0U2l6ZT17Mn0vPlxuICAgICAgICA8L0ZsZXhDb2x1bW4+XG4gICAgICAgIDxGbGV4Q29sdW1uIGl0ZW1zU3BhY2luZz17MTB9PlxuICAgICAgICAgICAgPEJvZHlUZXh0IHNpemU9ezJ9PlByb2dyZXNzIDc1JTwvQm9keVRleHQ+XG4gICAgICAgICAgICA8Q2lyY3VsYXJJbmRpY2F0b3IgcHJvZ3Jlc3M9ezc1fSBzaXplPSdtZWRpdW0nIHRleHRTaXplPXsyfS8+XG4gICAgICAgIDwvRmxleENvbHVtbj5cbiAgICAgICAgPEZsZXhDb2x1bW4gaXRlbXNTcGFjaW5nPXsxMH0+XG4gICAgICAgICAgICA8Qm9keVRleHQgc2l6ZT17Mn0+UHJvZ3Jlc3MgMTAwJTwvQm9keVRleHQ+XG4gICAgICAgICAgICA8Q2lyY3VsYXJJbmRpY2F0b3IgcHJvZ3Jlc3M9ezEwMH0gc2l6ZT0nbWVkaXVtJyB0ZXh0U2l6ZT17Mn0vPlxuICAgICAgICA8L0ZsZXhDb2x1bW4+XG4gICAgPC9GbGV4Um93PlxuKTtcblxuZXhwb3J0IGNvbnN0IFByaW1hcnkgPSBUZW1wbGF0ZS5iaW5kKHt9KTtcbiJdfQ==