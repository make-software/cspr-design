import { __assign } from "tslib";
import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from "react/jsx-runtime";
import styled, { useTheme } from 'styled-components';
import FlexRow from '../flex-row/flex-row';
import FlexColumn from '../flex-column/flex-column';
import Button from '../button/button';
import BodyText from '../body-text/body-text';
import ReactModal from 'react-modal';
import ModalHeader from '../modal-header/modal-header';
import SubtitleText from '../subtitle-text/subtitle-text';
export var ModalPosition;
(function (ModalPosition) {
    ModalPosition["TopRight"] = "topRight";
    ModalPosition["Center"] = "center";
})(ModalPosition || (ModalPosition = {}));
var centerModalStyles = {
    left: '50%',
    right: 'auto',
    bottom: 'auto',
    border: 'none',
    borderRadius: '12px',
    padding: '32px 24px 24px 24px',
    top: '50%',
    transform: 'translate(-50%, -50%)',
};
var topModalStyles = {
    top: '40px',
    left: 'auto',
    right: '40px',
    border: 'none',
    bottom: 'auto',
    borderRadius: '12px',
    padding: '16px 24px 24px 24px',
};
var ModalContainer = styled(FlexColumn)(function (_a) {
    var theme = _a.theme, position = _a.position;
    return theme.withMedia({
        width: position === ModalPosition.TopRight
            ? ['261px', '350px', '350px']
            : ['261px', '400px', '446px'],
        background: theme.styleguideColors.backgroundPrimary,
        borderColor: theme.styleguideColors.backgroundPrimary,
    });
});
var ImageWrapper = styled(FlexRow)(function (_a) {
    var theme = _a.theme;
    return theme.withMedia({
        margin: '15px 0 35px 0',
    });
});
var StyledCaption = styled.div(function (_a) {
    var theme = _a.theme, position = _a.position;
    return theme.withMedia({
        textAlign: position === ModalPosition.TopRight ? 'left' : 'center',
        marginBottom: '16px',
    });
});
var StyledCaptionText = styled(SubtitleText)(function (_a) {
    var theme = _a.theme;
    return theme.withMedia({
        fontWeight: [600, 600, 700],
        fontSize: ['20px', '24px', '24px'],
        color: theme.styleguideColors.contentPrimary,
    });
});
var InformationText = styled(BodyText)(function (_a) {
    var theme = _a.theme, position = _a.position;
    return theme.withMedia({
        textAlign: position === ModalPosition.TopRight ? 'left' : 'center',
        color: theme.styleguideColors.contentSecondary,
    });
});
var ButtonsContainer = styled(FlexRow)(function (_a) {
    var theme = _a.theme, position = _a.position;
    return theme.withMedia({
        marginTop: position === ModalPosition.TopRight ? '40px' : ['32px', '32px', '56px'],
        flexDirection: ['column', 'row', 'row'],
    });
});
export var ConfirmationWindow = function (_a) {
    var isOpen = _a.isOpen, position = _a.position, title = _a.title, withHeader = _a.withHeader, headerLogo = _a.headerLogo, bodyImg = _a.bodyImg, information = _a.information, confirmLabel = _a.confirmLabel, confirmColor = _a.confirmColor, onConfirm = _a.onConfirm, dismissLabel = _a.dismissLabel, onDismiss = _a.onDismiss, themeMode = _a.themeMode, _b = _a.portalClass, portalClass = _b === void 0 ? 'portal' : _b;
    var theme = useTheme();
    var modalStyle = {
        overlay: {
            backgroundColor: '#0E1126A0',
            zIndex: 15,
        },
        content: position === ModalPosition.TopRight
            ? __assign(__assign({}, topModalStyles), {
                backgroundColor: theme.styleguideColors.backgroundPrimary,
                borderColor: theme.styleguideColors.backgroundPrimary,
            }) : __assign(__assign({}, centerModalStyles), {
            backgroundColor: theme.styleguideColors.backgroundPrimary,
            borderColor: theme.styleguideColors.backgroundPrimary,
        }),
    };
    var StyledConfirmButton = styled(Button)(function (_a) {
        var theme = _a.theme;
        return theme.withMedia({
            backgroundColor: theme.styleguideColors.fillPrimaryBlue,
            ':hover': {
                background: theme.styleguideColors.fillPrimaryBlueHover,
            },
            ':active': {
                background: theme.styleguideColors.fillPrimaryBlueClick,
            },
        });
    });
    var StyledDismissButton = styled(Button)(function (_a) {
        var theme = _a.theme;
        return theme.withMedia({
            color: theme.styleguideColors.contentBlue,
            ':hover': {
                background: theme.styleguideColors.fillSecondaryBlueHover,
            },
            ':active': {
                background: theme.styleguideColors.fillSecondaryBlueClick,
            },
        });
    });
    return (_jsx(_Fragment, { children: isOpen && (_jsx(ReactModal, __assign({ isOpen: isOpen, style: modalStyle, onRequestClose: onDismiss, shouldCloseOnEsc: true, shouldCloseOnOverlayClick: true, portalClassName: portalClass }, { children: _jsxs(ModalContainer, __assign({ position: position }, { children: [withHeader && (_jsx(ModalHeader, { themeMode: themeMode, headerLogo: headerLogo, onDismiss: onDismiss })), bodyImg && _jsx(ImageWrapper, __assign({ justify: "center" }, { children: bodyImg })), _jsx(StyledCaption, __assign({ position: position }, { children: _jsx(StyledCaptionText, __assign({ size: 1, scale: "lg" }, { children: title })) })), _jsx(FlexRow, __assign({ justify: "center" }, { children: _jsx(InformationText, __assign({ position: position, size: 3, scale: "sm" }, { children: information })) })), _jsxs(ButtonsContainer, __assign({ position: position, gap: '16px', justify: 'space-between' }, { children: [dismissLabel && (_jsx(StyledDismissButton, __assign({ color: 'utility', onClick: onDismiss }, { children: dismissLabel }))), _jsx(StyledConfirmButton, __assign({ onClick: onConfirm }, { children: confirmLabel }))] }))] })) }))) }));
};
export default ConfirmationWindow;
//# sourceMappingURL=data:application/json;base64,