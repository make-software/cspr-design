import { __assign, __rest } from "tslib";
import { jsx as _jsx } from "react/jsx-runtime";
import React from 'react';
import styled from 'styled-components';
import { matchSize } from '../../utils/match-size';
var BaseButton = styled.button(function (_a) {
    var theme = _a.theme, disabled = _a.disabled, _b = _a.height, height = _b === void 0 ? '36' : _b, _c = _a.width, width = _c === void 0 ? '100%' : _c, _d = _a.lineHeight, lineHeight = _d === void 0 ? 'sm' : _d;
    return (__assign({ display: 'flex', alignItems: 'center', justifyContent: 'center', border: 'none', borderRadius: theme.borderRadius.base, fontFamily: theme.typography.fontFamily.primary, fontWeight: matchSize({
            '24': theme.typography.fontWeight.medium,
            '36': theme.typography.fontWeight.medium,
            '40': theme.typography.fontWeight.semiBold,
        }, height), fontSize: matchSize({ '24': '0.688rem', '36': '0.875rem', '40': '0.875rem' }, height), minHeight: matchSize({ '24': 24, '36': 36, '40': 40 }, height), lineHeight: matchSize({
            sm: '1.5rem',
            xs: '1.25rem',
        }, lineHeight), padding: matchSize({ '24': '2px 10px', '36': '8px 25px', '40': '10px 30px' }, height), width: matchSize({
            '100': '100px',
            '120': '120px',
            '140': '140px',
            '176': '176px',
            '100%': '100%',
        }, width), ':focus': {
            outline: 'none',
        } }, (disabled && {
        pointerEvents: 'none',
    })));
});
var PrimaryBlueButton = styled(BaseButton)(function (_a) {
    var theme = _a.theme, disabled = _a.disabled;
    return (__assign({ color: theme.styleguideColors.contentOnFill, background: theme.styleguideColors.contentBlue, ': hover': {
            background: theme.styleguideColors.fillPrimaryBlueHover,
        }, ': active': {
            background: theme.styleguideColors.fillPrimaryBlueClick,
        } }, (disabled && {
        color: theme.styleguideColors.contentTertiary,
        background: theme.styleguideColors.backgroundSecondary,
    })));
});
var PrimaryRedButton = styled(BaseButton)(function (_a) {
    var theme = _a.theme, disabled = _a.disabled;
    return (__assign({ color: theme.styleguideColors.contentOnFill, background: theme.styleguideColors.fillPrimaryRed, ': hover': {
            background: theme.styleguideColors.fillPrimaryRedHover,
        }, ': active': {
            background: theme.styleguideColors.fillPrimaryRedClick,
        } }, (disabled && {
        color: theme.styleguideColors.contentTertiary,
        background: theme.styleguideColors.fillSecondary,
    })));
});
var SecondaryBlueButton = styled(BaseButton)(function (_a) {
    var theme = _a.theme, disabled = _a.disabled;
    return (__assign({ color: theme.styleguideColors.contentBlue, background: theme.styleguideColors.backgroundSecondary, ': hover': {
            background: theme.styleguideColors.fillSecondaryBlueHover,
            borderColor: 'transparent',
        }, ': active': {
            background: theme.styleguideColors.fillSecondaryBlueClick,
            borderColor: 'transparent',
        } }, (disabled && {
        color: theme.styleguideColors.contentTertiary,
        background: theme.styleguideColors.backgroundPrimary,
    })));
});
var SecondaryRedButton = styled(BaseButton)(function (_a) {
    var theme = _a.theme, disabled = _a.disabled;
    return (__assign({ color: theme.styleguideColors.contentRed, background: theme.styleguideColors.fillSecondary, ': hover': {
            background: theme.styleguideColors.fillSecondaryRedHover,
        }, ': active': {
            background: theme.styleguideColors.fillSecondaryRedClick,
        } }, (disabled && {
        color: theme.styleguideColors.contentTertiary,
        background: theme.styleguideColors.fillSecondary,
    })));
});
var UtilityButton = styled(BaseButton)(function (_a) {
    var theme = _a.theme, disabled = _a.disabled;
    return (__assign({ color: theme.styleguideColors.fillPrimaryRed, background: theme.styleguideColors.backgroundSecondary, ': hover': {
            background: theme.styleguideColors.fillSecondaryRedHover,
        }, ': active': {
            background: theme.styleguideColors.fillSecondaryRedClick,
        } }, (disabled && {
        color: theme.styleguideColors.contentTertiary,
        background: theme.styleguideColors.backgroundPrimary,
    })));
});
var COMPONENT_MAP_BY_COLOR = {
    primaryBlue: PrimaryBlueButton,
    primaryRed: PrimaryRedButton,
    secondaryBlue: SecondaryBlueButton,
    secondaryRed: SecondaryRedButton,
    utility: UtilityButton,
};
export var Button = React.forwardRef(function Button(_a, ref) {
    var _b = _a.color, color = _b === void 0 ? 'primaryBlue' : _b, props = __rest(_a, ["color"]);
    var ButtonComponent = COMPONENT_MAP_BY_COLOR[color] || PrimaryBlueButton;
    return _jsx(ButtonComponent, __assign({ ref: ref, color: color, "aria-disabled": !!props.disabled, tabIndex: 0 }, props));
});
export default Button;
//# sourceMappingURL=data:application/json;base64,