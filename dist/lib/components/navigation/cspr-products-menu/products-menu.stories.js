import { __assign } from "tslib";
import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from "react/jsx-runtime";
import { ProductsMenu } from "./products-menu";
import { ProductsMenuItem } from "./products-menu-item";
import { NavigationSettingsContainer } from "../container";
import styled from "styled-components";
import BodyText from "../../body-text/body-text";
export default {
    component: ProductsMenu,
    title: "Products Menu",
    args: {
        opened: true,
    },
};
// @ts-ignore
var MenuContainer = styled.div(function () { return ({
    marginTop: "40px",
    left: "10px",
    position: "absolute",
}); });
var Template = function (args) { return (_jsxs(NavigationSettingsContainer, { children: [_jsx(BodyText, __assign({ size: 2, variation: "lightGray" }, { children: "CSPR Products" })), _jsx(MenuContainer, { children: _jsx(ProductsMenu, __assign({}, args)) })] })); };
export var Primary = Template.bind({});
Primary.args = {
    children: (_jsxs(_Fragment, { children: [_jsx(ProductsMenuItem, { nameLabel: "CSPR.live Explorer", descriptionText: "CSPR.live Block explorer", link: "", icon: "./assets/icons/logos/cspr-live.svg" }), _jsx(ProductsMenuItem, { nameLabel: "Casper Wallet", link: "", icon: "./assets/icons/logos/cspr-wallet.svg", newBadgeLabel: "New" }), _jsx(ProductsMenuItem, { nameLabel: "CSPR.studio (Beta)", link: "", icon: "./assets/icons/logos/cspr-nft-studio.svg", comingSoonBadgeLabel: "Coming soom" }), _jsx(ProductsMenuItem, { nameLabel: "some name3", link: "", icon: "" }), _jsx(ProductsMenuItem, { nameLabel: "some name3", link: "", icon: "" }), _jsx(ProductsMenuItem, { nameLabel: "some name3", link: "", icon: "" })] })),
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvZHVjdHMtbWVudS5zdG9yaWVzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL2xpYi9jb21wb25lbnRzL25hdmlnYXRpb24vY3Nwci1wcm9kdWN0cy1tZW51L3Byb2R1Y3RzLW1lbnUuc3Rvcmllcy50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFFQSxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFDeEQsT0FBTyxFQUFFLDJCQUEyQixFQUFFLE1BQU0sY0FBYyxDQUFDO0FBQzNELE9BQU8sTUFBTSxNQUFNLG1CQUFtQixDQUFDO0FBQ3ZDLE9BQU8sUUFBUSxNQUFNLDJCQUEyQixDQUFDO0FBRWpELGVBQWU7SUFDYixTQUFTLEVBQUUsWUFBWTtJQUN2QixLQUFLLEVBQUUsZUFBZTtJQUN0QixJQUFJLEVBQUU7UUFDSixNQUFNLEVBQUUsSUFBSTtLQUNiO0NBQ29DLENBQUM7QUFFeEMsYUFBYTtBQUNiLElBQU0sYUFBYSxHQUFHLE1BQU0sQ0FBQyxHQUFHLENBQUMsY0FBTSxPQUFBLENBQUM7SUFDdEMsU0FBUyxFQUFFLE1BQU07SUFDakIsSUFBSSxFQUFFLE1BQU07SUFDWixRQUFRLEVBQUUsVUFBVTtDQUNyQixDQUFDLEVBSnFDLENBSXJDLENBQUMsQ0FBQztBQUVKLElBQU0sUUFBUSxHQUF3QyxVQUFDLElBQUksSUFBSyxPQUFBLENBQzlELE1BQUMsMkJBQTJCLGVBQzFCLEtBQUMsUUFBUSxhQUFDLElBQUksRUFBRSxDQUFDLEVBQUUsU0FBUyxFQUFFLFdBQVcsbUNBRTlCLEVBQ1gsS0FBQyxhQUFhLGNBQ1osS0FBQyxZQUFZLGVBQUssSUFBSSxFQUFJLEdBQ1osSUFDWSxDQUMvQixFQVQrRCxDQVMvRCxDQUFDO0FBRUYsTUFBTSxDQUFDLElBQU0sT0FBTyxHQUFHLFFBQVEsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUM7QUFDekMsT0FBTyxDQUFDLElBQUksR0FBRztJQUNiLFFBQVEsRUFBRSxDQUNSLDhCQUNFLEtBQUMsZ0JBQWdCLElBQ2YsU0FBUyxFQUFFLG9CQUFvQixFQUMvQixlQUFlLEVBQUUsMEJBQTBCLEVBQzNDLElBQUksRUFBRSxFQUFFLEVBQ1IsSUFBSSxFQUFFLG9DQUFvQyxHQUMxQyxFQUNGLEtBQUMsZ0JBQWdCLElBQ2YsU0FBUyxFQUFFLGVBQWUsRUFDMUIsSUFBSSxFQUFFLEVBQUUsRUFDUixJQUFJLEVBQUUsc0NBQXNDLEVBQzVDLGFBQWEsRUFBRSxLQUFLLEdBQ3BCLEVBQ0YsS0FBQyxnQkFBZ0IsSUFDZixTQUFTLEVBQUUsb0JBQW9CLEVBQy9CLElBQUksRUFBRSxFQUFFLEVBQ1IsSUFBSSxFQUFFLDBDQUEwQyxFQUNoRCxvQkFBb0IsRUFBRSxhQUFhLEdBQ25DLEVBQ0YsS0FBQyxnQkFBZ0IsSUFBQyxTQUFTLEVBQUUsWUFBWSxFQUFFLElBQUksRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLEVBQUUsR0FBSSxFQUNqRSxLQUFDLGdCQUFnQixJQUFDLFNBQVMsRUFBRSxZQUFZLEVBQUUsSUFBSSxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUsRUFBRSxHQUFJLEVBQ2pFLEtBQUMsZ0JBQWdCLElBQUMsU0FBUyxFQUFFLFlBQVksRUFBRSxJQUFJLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSxFQUFFLEdBQUksSUFDaEUsQ0FDSjtDQUNGLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnRNZXRhLCBDb21wb25lbnRTdG9yeSB9IGZyb20gXCJAc3Rvcnlib29rL3JlYWN0XCI7XG5pbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyBQcm9kdWN0c01lbnUgfSBmcm9tIFwiLi9wcm9kdWN0cy1tZW51XCI7XG5pbXBvcnQgeyBQcm9kdWN0c01lbnVJdGVtIH0gZnJvbSBcIi4vcHJvZHVjdHMtbWVudS1pdGVtXCI7XG5pbXBvcnQgeyBOYXZpZ2F0aW9uU2V0dGluZ3NDb250YWluZXIgfSBmcm9tIFwiLi4vY29udGFpbmVyXCI7XG5pbXBvcnQgc3R5bGVkIGZyb20gXCJzdHlsZWQtY29tcG9uZW50c1wiO1xuaW1wb3J0IEJvZHlUZXh0IGZyb20gXCIuLi8uLi9ib2R5LXRleHQvYm9keS10ZXh0XCI7XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgY29tcG9uZW50OiBQcm9kdWN0c01lbnUsXG4gIHRpdGxlOiBcIlByb2R1Y3RzIE1lbnVcIixcbiAgYXJnczoge1xuICAgIG9wZW5lZDogdHJ1ZSxcbiAgfSxcbn0gYXMgQ29tcG9uZW50TWV0YTx0eXBlb2YgUHJvZHVjdHNNZW51PjtcblxuLy8gQHRzLWlnbm9yZVxuY29uc3QgTWVudUNvbnRhaW5lciA9IHN0eWxlZC5kaXYoKCkgPT4gKHtcbiAgbWFyZ2luVG9wOiBcIjQwcHhcIixcbiAgbGVmdDogXCIxMHB4XCIsXG4gIHBvc2l0aW9uOiBcImFic29sdXRlXCIsXG59KSk7XG5cbmNvbnN0IFRlbXBsYXRlOiBDb21wb25lbnRTdG9yeTx0eXBlb2YgUHJvZHVjdHNNZW51PiA9IChhcmdzKSA9PiAoXG4gIDxOYXZpZ2F0aW9uU2V0dGluZ3NDb250YWluZXI+XG4gICAgPEJvZHlUZXh0IHNpemU9ezJ9IHZhcmlhdGlvbj17XCJsaWdodEdyYXlcIn0+XG4gICAgICBDU1BSIFByb2R1Y3RzXG4gICAgPC9Cb2R5VGV4dD5cbiAgICA8TWVudUNvbnRhaW5lcj5cbiAgICAgIDxQcm9kdWN0c01lbnUgey4uLmFyZ3N9IC8+XG4gICAgPC9NZW51Q29udGFpbmVyPlxuICA8L05hdmlnYXRpb25TZXR0aW5nc0NvbnRhaW5lcj5cbik7XG5cbmV4cG9ydCBjb25zdCBQcmltYXJ5ID0gVGVtcGxhdGUuYmluZCh7fSk7XG5QcmltYXJ5LmFyZ3MgPSB7XG4gIGNoaWxkcmVuOiAoXG4gICAgPD5cbiAgICAgIDxQcm9kdWN0c01lbnVJdGVtXG4gICAgICAgIG5hbWVMYWJlbD17XCJDU1BSLmxpdmUgRXhwbG9yZXJcIn1cbiAgICAgICAgZGVzY3JpcHRpb25UZXh0PXtcIkNTUFIubGl2ZSBCbG9jayBleHBsb3JlclwifVxuICAgICAgICBsaW5rPXtcIlwifVxuICAgICAgICBpY29uPXtcIi4vYXNzZXRzL2ljb25zL2xvZ29zL2NzcHItbGl2ZS5zdmdcIn1cbiAgICAgIC8+XG4gICAgICA8UHJvZHVjdHNNZW51SXRlbVxuICAgICAgICBuYW1lTGFiZWw9e1wiQ2FzcGVyIFdhbGxldFwifVxuICAgICAgICBsaW5rPXtcIlwifVxuICAgICAgICBpY29uPXtcIi4vYXNzZXRzL2ljb25zL2xvZ29zL2NzcHItd2FsbGV0LnN2Z1wifVxuICAgICAgICBuZXdCYWRnZUxhYmVsPXtcIk5ld1wifVxuICAgICAgLz5cbiAgICAgIDxQcm9kdWN0c01lbnVJdGVtXG4gICAgICAgIG5hbWVMYWJlbD17XCJDU1BSLnN0dWRpbyAoQmV0YSlcIn1cbiAgICAgICAgbGluaz17XCJcIn1cbiAgICAgICAgaWNvbj17XCIuL2Fzc2V0cy9pY29ucy9sb2dvcy9jc3ByLW5mdC1zdHVkaW8uc3ZnXCJ9XG4gICAgICAgIGNvbWluZ1Nvb25CYWRnZUxhYmVsPXtcIkNvbWluZyBzb29tXCJ9XG4gICAgICAvPlxuICAgICAgPFByb2R1Y3RzTWVudUl0ZW0gbmFtZUxhYmVsPXtcInNvbWUgbmFtZTNcIn0gbGluaz17XCJcIn0gaWNvbj17XCJcIn0gLz5cbiAgICAgIDxQcm9kdWN0c01lbnVJdGVtIG5hbWVMYWJlbD17XCJzb21lIG5hbWUzXCJ9IGxpbms9e1wiXCJ9IGljb249e1wiXCJ9IC8+XG4gICAgICA8UHJvZHVjdHNNZW51SXRlbSBuYW1lTGFiZWw9e1wic29tZSBuYW1lM1wifSBsaW5rPXtcIlwifSBpY29uPXtcIlwifSAvPlxuICAgIDwvPlxuICApLFxufTtcbiJdfQ==