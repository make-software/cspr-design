var _a;
import { __assign, __makeTemplateObject } from "tslib";
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { Badge } from '../../badge/badge';
import CaptionText from '../../caption-text/caption-text';
import FlexRow from '../../flex-row/flex-row';
import NavLink from '../../nav-link/nav-link';
import FlexColumn from '../../flex-column/flex-column';
import styled, { useTheme } from 'styled-components';
import { useMatchMedia } from '../../../utils/match-media';
import SvgIcon from '../../svg-icon/svg-icon';
import BodyText from '../../body-text/body-text';
export var ThemeModeType;
(function (ThemeModeType) {
    ThemeModeType["light"] = "light";
    ThemeModeType["dark"] = "dark";
})(ThemeModeType || (ThemeModeType = {}));
export var ProductItemWrapper = styled.span(function (_a) {
    var theme = _a.theme, isOpen = _a.isOpen, selected = _a.selected;
    return theme.withMedia(__assign({ display: 'flex', flex: '1 1 auto', justifyContent: 'center', alignItems: 'center', padding: ['8px 12px', '8px 12px', '16px'], width: ['208px', '208px', '172px'], height: ['56px', '56px', '137px'], '&:hover': {
            borderRadius: theme.borderRadius.base,
            background: theme.styleguideColors.backgroundSecondary,
        } }, (selected && {
        background: theme.styleguideColors.backgroundSecondary,
        pointerEvents: 'none',
    })));
});
export var ProductItemLink = styled(NavLink)(function (_a) {
    var theme = _a.theme, disabled = _a.disabled;
    return theme.withMedia(__assign({ color: theme.styleguideColors.contentPrimary, textDecoration: 'none', '&:hover': {
            color: theme.styleguideColors.contentBlue,
        }, '&:active': {
            color: theme.styleguideColors.contentLightBlue,
        } }, (disabled && {
        color: theme.styleguideColors.contentSecondary,
        '&:hover > *': {
            color: theme.styleguideColors.contentSecondary,
        },
    })));
});
var StyledBodyText = styled(BodyText)(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n    white-space: nowrap;\n"], ["\n    white-space: nowrap;\n"])));
var defaultIcon = (_a = {},
    _a[ThemeModeType.light] = 'assets/icons/ic-sand-clock-light.svg',
    _a[ThemeModeType.dark] = 'assets/icons/ic-sand-clock-dark.svg',
    _a);
export var ProductsMenuItem = function (_a) {
    var nameLabel = _a.nameLabel, link = _a.link, icon = _a.icon, descriptionText = _a.descriptionText, _b = _a.selected, selected = _b === void 0 ? false : _b, newBadgeLabel = _a.newBadgeLabel, comingSoonBadgeLabel = _a.comingSoonBadgeLabel;
    var theme = useTheme();
    var badge;
    if (comingSoonBadgeLabel) {
        badge = _jsx(Badge, { label: comingSoonBadgeLabel, variation: 'violet', lineHeight: 'xxs' });
    }
    else if (newBadgeLabel) {
        badge = _jsx(Badge, { label: newBadgeLabel, variation: 'green', lineHeight: 'xxs' });
    }
    else {
        badge = (_jsx(CaptionText, __assign({ size: 2, variation: 'lightGray' }, { children: descriptionText })));
    }
    var mobile = (_jsx(FlexRow, __assign({ itemsSpacing: 8, justify: 'flex-start', grow: 1 }, { children: _jsx(ProductItemLink, __assign({ href: link, target: '_blank', disabled: !!comingSoonBadgeLabel }, { children: _jsxs(FlexRow, __assign({ itemsSpacing: 8, grow: 1 }, { children: [_jsx(SvgIcon, { src: icon || defaultIcon[theme.themeName], size: 32 }), _jsxs(FlexColumn, __assign({ itemsSpacing: 4 }, { children: [badge, _jsx(StyledBodyText, __assign({ size: 1 }, { children: nameLabel }))] }))] })) })) })));
    var desktop = (_jsx(ProductItemLink, __assign({ href: link, target: '_blank', disabled: !!comingSoonBadgeLabel }, { children: _jsxs(FlexColumn, __assign({ itemsSpacing: 16, align: 'center', justify: 'center', grow: 1 }, { children: [_jsx(SvgIcon, { src: icon || defaultIcon[theme.themeName], size: 48 }), _jsxs(FlexColumn, __assign({ itemsSpacing: 4, align: 'center' }, { children: [badge, _jsx(StyledBodyText, __assign({ size: 1 }, { children: nameLabel }))] }))] })) })));
    var productMedia = useMatchMedia([mobile, mobile, desktop], []);
    return (_jsx(ProductItemWrapper, __assign({ selected: selected }, { children: productMedia })));
};
var templateObject_1;
//# sourceMappingURL=data:application/json;base64,