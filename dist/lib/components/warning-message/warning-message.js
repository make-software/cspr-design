import { __assign } from "tslib";
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import styled from 'styled-components';
import FlexRow from '../flex-row/flex-row';
import BodyText from '../body-text/body-text';
import SvgIcon from '../svg-icon/svg-icon';
var StyledWarningMessage = styled.div(function (_a) {
    var theme = _a.theme, margin = _a.margin;
    return theme.withMedia({
        padding: ['10px', '16px', '16px'],
        alignItems: 'center',
        gap: '8px',
        alignSelf: 'stretch',
        backgroundColor: theme.styleguideColors.fillSecondary,
        borderRadius: '4px',
        margin: margin ? margin : '0 0 24px 0',
    });
});
var StyledHeaderRow = styled(FlexRow)(function (_a) {
    var theme = _a.theme;
    return theme.withMedia({
        marginBottom: '8px',
    });
});
var StyledHeaderText = styled(BodyText)(function (_a) {
    var theme = _a.theme;
    return theme.withMedia({
        marginLeft: '8px',
    });
});
export var WarningMessage = function (_a) {
    var iconSrc = _a.iconSrc, title = _a.title, message = _a.message, margin = _a.margin;
    return (_jsxs(StyledWarningMessage, __assign({ margin: margin }, { children: [_jsxs(StyledHeaderRow, __assign({ justify: 'flex-start', align: 'center' }, { children: [iconSrc && _jsx(SvgIcon, { src: iconSrc }), _jsx(StyledHeaderText, __assign({ size: 1, scale: 'xs', variation: 'black', margin: iconSrc ? '8px' : '0' }, { children: title }))] })), _jsx(BodyText, __assign({ size: 3, scale: 'xs', variation: 'black' }, { children: message }))] })));
};
export default WarningMessage;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2FybmluZy1tZXNzYWdlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2xpYi9jb21wb25lbnRzL3dhcm5pbmctbWVzc2FnZS93YXJuaW5nLW1lc3NhZ2UudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQ0EsT0FBTyxNQUFNLE1BQU0sbUJBQW1CLENBQUM7QUFDdkMsT0FBTyxPQUFPLE1BQU0sc0JBQXNCLENBQUM7QUFDM0MsT0FBTyxRQUFRLE1BQU0sd0JBQXdCLENBQUM7QUFDOUMsT0FBTyxPQUFPLE1BQU0sc0JBQXNCLENBQUM7QUFTM0MsSUFBTSxvQkFBb0IsR0FBRyxNQUFNLENBQUMsR0FBRyxDQUNyQyxVQUFDLEVBQWlCO1FBQWYsS0FBSyxXQUFBLEVBQUUsTUFBTSxZQUFBO0lBQ2QsT0FBQSxLQUFLLENBQUMsU0FBUyxDQUFDO1FBQ2QsT0FBTyxFQUFFLENBQUMsTUFBTSxFQUFFLE1BQU0sRUFBRSxNQUFNLENBQUM7UUFDakMsVUFBVSxFQUFFLFFBQVE7UUFDcEIsR0FBRyxFQUFFLEtBQUs7UUFDVixTQUFTLEVBQUUsU0FBUztRQUNwQixlQUFlLEVBQUUsS0FBSyxDQUFDLGdCQUFnQixDQUFDLGFBQWE7UUFDckQsWUFBWSxFQUFFLEtBQUs7UUFDbkIsTUFBTSxFQUFFLE1BQU0sQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxZQUFZO0tBQ3ZDLENBQUM7QUFSRixDQVFFLENBQ0wsQ0FBQztBQUVGLElBQU0sZUFBZSxHQUFHLE1BQU0sQ0FBQyxPQUFPLENBQUMsQ0FBQyxVQUFDLEVBQVM7UUFBUCxLQUFLLFdBQUE7SUFDOUMsT0FBQSxLQUFLLENBQUMsU0FBUyxDQUFDO1FBQ2QsWUFBWSxFQUFFLEtBQUs7S0FDcEIsQ0FBQztBQUZGLENBRUUsQ0FDSCxDQUFDO0FBRUYsSUFBTSxnQkFBZ0IsR0FBRyxNQUFNLENBQUMsUUFBUSxDQUFDLENBQXFCLFVBQUMsRUFBUztRQUFQLEtBQUssV0FBQTtJQUNwRSxPQUFBLEtBQUssQ0FBQyxTQUFTLENBQUM7UUFDZCxVQUFVLEVBQUUsS0FBSztLQUNsQixDQUFDO0FBRkYsQ0FFRSxDQUNILENBQUM7QUFFRixNQUFNLENBQUMsSUFBTSxjQUFjLEdBQUcsVUFBQyxFQUtUO1FBSnBCLE9BQU8sYUFBQSxFQUNQLEtBQUssV0FBQSxFQUNMLE9BQU8sYUFBQSxFQUNQLE1BQU0sWUFBQTtJQUVOLE9BQU8sQ0FDTCxNQUFDLG9CQUFvQixhQUFDLE1BQU0sRUFBRSxNQUFNLGlCQUNsQyxNQUFDLGVBQWUsYUFBQyxPQUFPLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBRSxRQUFRLGlCQUNwRCxPQUFPLElBQUksS0FBQyxPQUFPLElBQUMsR0FBRyxFQUFFLE9BQU8sR0FBSSxFQUNyQyxLQUFDLGdCQUFnQixhQUNmLElBQUksRUFBRSxDQUFDLEVBQ1AsS0FBSyxFQUFFLElBQUksRUFDWCxTQUFTLEVBQUUsT0FBTyxFQUNsQixNQUFNLEVBQUUsT0FBTyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLEdBQUcsZ0JBRTVCLEtBQUssSUFDVyxLQUNILEVBQ2xCLEtBQUMsUUFBUSxhQUFDLElBQUksRUFBRSxDQUFDLEVBQUUsS0FBSyxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUUsT0FBTyxnQkFDL0MsT0FBTyxJQUNDLEtBQ1UsQ0FDeEIsQ0FBQztBQUNKLENBQUMsQ0FBQztBQUVGLGVBQWUsY0FBYyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBzdHlsZWQgZnJvbSAnc3R5bGVkLWNvbXBvbmVudHMnO1xuaW1wb3J0IEZsZXhSb3cgZnJvbSAnLi4vZmxleC1yb3cvZmxleC1yb3cnO1xuaW1wb3J0IEJvZHlUZXh0IGZyb20gJy4uL2JvZHktdGV4dC9ib2R5LXRleHQnO1xuaW1wb3J0IFN2Z0ljb24gZnJvbSAnLi4vc3ZnLWljb24vc3ZnLWljb24nO1xuXG5leHBvcnQgaW50ZXJmYWNlIFdhcm5pbmdNZXNzYWdlUHJvcHMge1xuICBpY29uU3JjPzogc3RyaW5nO1xuICB0aXRsZTogc3RyaW5nO1xuICBtZXNzYWdlOiBzdHJpbmc7XG4gIG1hcmdpbj86IHN0cmluZztcbn1cblxuY29uc3QgU3R5bGVkV2FybmluZ01lc3NhZ2UgPSBzdHlsZWQuZGl2PHsgbWFyZ2luPzogc3RyaW5nIH0+KFxuICAoeyB0aGVtZSwgbWFyZ2luIH0pID0+XG4gICAgdGhlbWUud2l0aE1lZGlhKHtcbiAgICAgIHBhZGRpbmc6IFsnMTBweCcsICcxNnB4JywgJzE2cHgnXSxcbiAgICAgIGFsaWduSXRlbXM6ICdjZW50ZXInLFxuICAgICAgZ2FwOiAnOHB4JyxcbiAgICAgIGFsaWduU2VsZjogJ3N0cmV0Y2gnLFxuICAgICAgYmFja2dyb3VuZENvbG9yOiB0aGVtZS5zdHlsZWd1aWRlQ29sb3JzLmZpbGxTZWNvbmRhcnksXG4gICAgICBib3JkZXJSYWRpdXM6ICc0cHgnLFxuICAgICAgbWFyZ2luOiBtYXJnaW4gPyBtYXJnaW4gOiAnMCAwIDI0cHggMCcsXG4gICAgfSlcbik7XG5cbmNvbnN0IFN0eWxlZEhlYWRlclJvdyA9IHN0eWxlZChGbGV4Um93KSgoeyB0aGVtZSB9KSA9PlxuICB0aGVtZS53aXRoTWVkaWEoe1xuICAgIG1hcmdpbkJvdHRvbTogJzhweCcsXG4gIH0pXG4pO1xuXG5jb25zdCBTdHlsZWRIZWFkZXJUZXh0ID0gc3R5bGVkKEJvZHlUZXh0KTx7IG1hcmdpbjogc3RyaW5nIH0+KCh7IHRoZW1lIH0pID0+XG4gIHRoZW1lLndpdGhNZWRpYSh7XG4gICAgbWFyZ2luTGVmdDogJzhweCcsXG4gIH0pXG4pO1xuXG5leHBvcnQgY29uc3QgV2FybmluZ01lc3NhZ2UgPSAoe1xuICBpY29uU3JjLFxuICB0aXRsZSxcbiAgbWVzc2FnZSxcbiAgbWFyZ2luLFxufTogV2FybmluZ01lc3NhZ2VQcm9wcykgPT4ge1xuICByZXR1cm4gKFxuICAgIDxTdHlsZWRXYXJuaW5nTWVzc2FnZSBtYXJnaW49e21hcmdpbn0+XG4gICAgICA8U3R5bGVkSGVhZGVyUm93IGp1c3RpZnk9eydmbGV4LXN0YXJ0J30gYWxpZ249eydjZW50ZXInfT5cbiAgICAgICAge2ljb25TcmMgJiYgPFN2Z0ljb24gc3JjPXtpY29uU3JjfSAvPn1cbiAgICAgICAgPFN0eWxlZEhlYWRlclRleHRcbiAgICAgICAgICBzaXplPXsxfVxuICAgICAgICAgIHNjYWxlPXsneHMnfVxuICAgICAgICAgIHZhcmlhdGlvbj17J2JsYWNrJ31cbiAgICAgICAgICBtYXJnaW49e2ljb25TcmMgPyAnOHB4JyA6ICcwJ31cbiAgICAgICAgPlxuICAgICAgICAgIHt0aXRsZX1cbiAgICAgICAgPC9TdHlsZWRIZWFkZXJUZXh0PlxuICAgICAgPC9TdHlsZWRIZWFkZXJSb3c+XG4gICAgICA8Qm9keVRleHQgc2l6ZT17M30gc2NhbGU9eyd4cyd9IHZhcmlhdGlvbj17J2JsYWNrJ30+XG4gICAgICAgIHttZXNzYWdlfVxuICAgICAgPC9Cb2R5VGV4dD5cbiAgICA8L1N0eWxlZFdhcm5pbmdNZXNzYWdlPlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgV2FybmluZ01lc3NhZ2U7XG4iXX0=