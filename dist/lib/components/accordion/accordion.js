import { __assign, __rest } from "tslib";
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { useState } from 'react';
import styled from 'styled-components';
import FlexColumn from '../flex-column/flex-column';
import { useClickAway } from '../../hooks/use-click-away';
var AccordionContainer = styled(FlexColumn)(function (_a) {
    var isOpen = _a.isOpen, _b = _a.backgroundColor, backgroundColor = _b === void 0 ? 'transparent' : _b;
    return ({
        background: isOpen ? backgroundColor : 'transparent',
        width: '100%',
    });
});
var StyledContainer = styled.div(function () { return ({
    cursor: 'pointer',
}); });
export function Accordion(_a) {
    var children = _a.children, renderContent = _a.renderContent, disableClickAway = _a.disableClickAway, props = __rest(_a, ["children", "renderContent", "disableClickAway"]);
    var _b = useState(false), isOpen = _b[0], setIsOpen = _b[1];
    var ref = useClickAway({
        callback: function () {
            !disableClickAway && setIsOpen(false);
        },
    }).ref;
    var renderProps = { isOpen: isOpen };
    return (_jsxs(AccordionContainer, __assign({ isOpen: isOpen }, props, { children: [_jsx(StyledContainer, __assign({ ref: ref, onClick: function () {
                    setIsOpen(!isOpen);
                } }, { children: children(renderProps) })), isOpen && renderContent(renderProps)] })));
}
export default Accordion;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWNjb3JkaW9uLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2xpYi9jb21wb25lbnRzL2FjY29yZGlvbi9hY2NvcmRpb24udHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsT0FBYyxFQUFrQyxRQUFRLEVBQUUsTUFBTSxPQUFPLENBQUM7QUFDeEUsT0FBTyxNQUFNLE1BQU0sbUJBQW1CLENBQUM7QUFHdkMsT0FBTyxVQUFVLE1BQU0sNEJBQTRCLENBQUM7QUFDcEQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBYTFELElBQU0sa0JBQWtCLEdBQUcsTUFBTSxDQUFDLFVBQVUsQ0FBQyxDQUcxQyxVQUFDLEVBQTJDO1FBQXpDLE1BQU0sWUFBQSxFQUFFLHVCQUErQixFQUEvQixlQUFlLG1CQUFHLGFBQWEsS0FBQTtJQUFPLE9BQUEsQ0FBQztRQUNuRCxVQUFVLEVBQUUsTUFBTSxDQUFDLENBQUMsQ0FBQyxlQUFlLENBQUMsQ0FBQyxDQUFDLGFBQWE7UUFDcEQsS0FBSyxFQUFFLE1BQU07S0FDZCxDQUFDO0FBSGtELENBR2xELENBQUMsQ0FBQztBQUVKLElBQU0sZUFBZSxHQUFHLE1BQU0sQ0FBQyxHQUFHLENBQUMsY0FBTSxPQUFBLENBQUM7SUFDeEMsTUFBTSxFQUFFLFNBQVM7Q0FDbEIsQ0FBQyxFQUZ1QyxDQUV2QyxDQUFDLENBQUM7QUFFSixNQUFNLFVBQVUsU0FBUyxDQUFDLEVBS1Q7SUFKZixJQUFBLFFBQVEsY0FBQSxFQUNSLGFBQWEsbUJBQUEsRUFDYixnQkFBZ0Isc0JBQUEsRUFDYixLQUFLLGNBSmdCLGlEQUt6QixDQURTO0lBRUYsSUFBQSxLQUFzQixRQUFRLENBQUMsS0FBSyxDQUFDLEVBQXBDLE1BQU0sUUFBQSxFQUFFLFNBQVMsUUFBbUIsQ0FBQztJQUVwQyxJQUFBLEdBQUcsR0FBSyxZQUFZLENBQUM7UUFDM0IsUUFBUSxFQUFFO1lBQ1IsQ0FBQyxnQkFBZ0IsSUFBSSxTQUFTLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDeEMsQ0FBQztLQUNGLENBQUMsSUFKUyxDQUlSO0lBRUgsSUFBTSxXQUFXLEdBQWdCLEVBQUUsTUFBTSxRQUFBLEVBQUUsQ0FBQztJQUU1QyxPQUFPLENBQ0wsTUFBQyxrQkFBa0IsYUFBQyxNQUFNLEVBQUUsTUFBTSxJQUFNLEtBQUssZUFDM0MsS0FBQyxlQUFlLGFBQ2QsR0FBRyxFQUFFLEdBQUcsRUFDUixPQUFPLEVBQUU7b0JBQ1AsU0FBUyxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUM7Z0JBQ3JCLENBQUMsZ0JBRUEsUUFBUSxDQUFDLFdBQVcsQ0FBQyxJQUNOLEVBQ2pCLE1BQU0sSUFBSSxhQUFhLENBQUMsV0FBVyxDQUFDLEtBQ2xCLENBQ3RCLENBQUM7QUFDSixDQUFDO0FBRUQsZUFBZSxTQUFTLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgdXNlQ2FsbGJhY2ssIHVzZUVmZmVjdCwgdXNlUmVmLCB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IHN0eWxlZCBmcm9tICdzdHlsZWQtY29tcG9uZW50cyc7XHJcbmltcG9ydCBTdmdJY29uIGZyb20gJy4uL3N2Zy1pY29uL3N2Zy1pY29uJztcclxuaW1wb3J0IHsgQmFzZVByb3BzIH0gZnJvbSAnLi4vLi4vdHlwZXMnO1xyXG5pbXBvcnQgRmxleENvbHVtbiBmcm9tICcuLi9mbGV4LWNvbHVtbi9mbGV4LWNvbHVtbic7XHJcbmltcG9ydCB7IHVzZUNsaWNrQXdheSB9IGZyb20gJy4uLy4uL2hvb2tzL3VzZS1jbGljay1hd2F5JztcclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgQWNjb3JkaW9uUHJvcHMgZXh0ZW5kcyBCYXNlUHJvcHMge1xyXG4gIGJhY2tncm91bmRDb2xvcj86IHN0cmluZztcclxuICBjaGlsZHJlbjogKHJlbmRlclByb3BzOiBSZW5kZXJQcm9wcykgPT4gUmVhY3QuUmVhY3ROb2RlIHwgc3RyaW5nO1xyXG4gIHJlbmRlckNvbnRlbnQ6IChyZW5kZXJQcm9wczogUmVuZGVyUHJvcHMpID0+IFJlYWN0LlJlYWN0Tm9kZSB8IHN0cmluZztcclxuICBkaXNhYmxlQ2xpY2tBd2F5PzogYm9vbGVhbjtcclxufVxyXG5cclxuaW50ZXJmYWNlIFJlbmRlclByb3BzIHtcclxuICBpc09wZW46IGJvb2xlYW47XHJcbn1cclxuXHJcbmNvbnN0IEFjY29yZGlvbkNvbnRhaW5lciA9IHN0eWxlZChGbGV4Q29sdW1uKTx7XHJcbiAgaXNPcGVuOiBib29sZWFuO1xyXG4gIGJhY2tncm91bmRDb2xvcj86IHN0cmluZztcclxufT4oKHsgaXNPcGVuLCBiYWNrZ3JvdW5kQ29sb3IgPSAndHJhbnNwYXJlbnQnIH0pID0+ICh7XHJcbiAgYmFja2dyb3VuZDogaXNPcGVuID8gYmFja2dyb3VuZENvbG9yIDogJ3RyYW5zcGFyZW50JyxcclxuICB3aWR0aDogJzEwMCUnLFxyXG59KSk7XHJcblxyXG5jb25zdCBTdHlsZWRDb250YWluZXIgPSBzdHlsZWQuZGl2KCgpID0+ICh7XHJcbiAgY3Vyc29yOiAncG9pbnRlcicsXHJcbn0pKTtcclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBBY2NvcmRpb24oe1xyXG4gIGNoaWxkcmVuLFxyXG4gIHJlbmRlckNvbnRlbnQsXHJcbiAgZGlzYWJsZUNsaWNrQXdheSxcclxuICAuLi5wcm9wc1xyXG59OiBBY2NvcmRpb25Qcm9wcykge1xyXG4gIGNvbnN0IFtpc09wZW4sIHNldElzT3Blbl0gPSB1c2VTdGF0ZShmYWxzZSk7XHJcblxyXG4gIGNvbnN0IHsgcmVmIH0gPSB1c2VDbGlja0F3YXkoe1xyXG4gICAgY2FsbGJhY2s6ICgpID0+IHtcclxuICAgICAgIWRpc2FibGVDbGlja0F3YXkgJiYgc2V0SXNPcGVuKGZhbHNlKTtcclxuICAgIH0sXHJcbiAgfSk7XHJcblxyXG4gIGNvbnN0IHJlbmRlclByb3BzOiBSZW5kZXJQcm9wcyA9IHsgaXNPcGVuIH07XHJcblxyXG4gIHJldHVybiAoXHJcbiAgICA8QWNjb3JkaW9uQ29udGFpbmVyIGlzT3Blbj17aXNPcGVufSB7Li4ucHJvcHN9PlxyXG4gICAgICA8U3R5bGVkQ29udGFpbmVyXHJcbiAgICAgICAgcmVmPXtyZWZ9XHJcbiAgICAgICAgb25DbGljaz17KCkgPT4ge1xyXG4gICAgICAgICAgc2V0SXNPcGVuKCFpc09wZW4pO1xyXG4gICAgICAgIH19XHJcbiAgICAgID5cclxuICAgICAgICB7Y2hpbGRyZW4ocmVuZGVyUHJvcHMpfVxyXG4gICAgICA8L1N0eWxlZENvbnRhaW5lcj5cclxuICAgICAge2lzT3BlbiAmJiByZW5kZXJDb250ZW50KHJlbmRlclByb3BzKX1cclxuICAgIDwvQWNjb3JkaW9uQ29udGFpbmVyPlxyXG4gICk7XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IEFjY29yZGlvbjtcclxuIl19