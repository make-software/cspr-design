import { __assign } from "tslib";
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import styled from 'styled-components';
import Button from '../button/button';
import SvgIcon from '../svg-icon/svg-icon';
import FlexRow from '../flex-row/flex-row';
import { matchSize } from "../../utils/match-size";
import Tooltip from "../tooltip/tooltip";
var StyledButton = styled(Button)(function (_a) {
    var theme = _a.theme, active = _a.active, disabled = _a.disabled, _b = _a.lineHeight, lineHeight = _b === void 0 ? 'sm' : _b, _c = _a.scale, scale = _c === void 0 ? 'sm' : _c;
    return theme.withMedia(__assign(__assign({ minWidth: [131, 140], padding: '6px', maxWidth: 'fit-content', height: 32, fontSize: matchSize({
            sm: '1.3rem',
            xs: '0.8125rem',
        }, scale), lineHeight: matchSize({
            sm: '1.5rem',
            xs: '1.25rem',
        }, lineHeight), fontWeight: theme.typography.fontWeight.medium, cursor: 'pointer', marginLeft: 2, color: theme.styleguideColors.contentBlue, borderRadius: 0, textTransform: 'capitalize', ':first-of-type': {
            borderRadius: '4px 0 0 4px',
        }, ':last-of-type': {
            borderRadius: '0 4px 4px 0',
        }, ':hover': {
            background: theme.styleguideColors.fillSecondaryBlueHover,
            color: theme.styleguideColors.contentBlue,
        }, ':active': {
            background: theme.styleguideColors.fillSecondaryBlueClick,
            color: theme.styleguideColors.contentBlue,
        } }, (active && {
        cursor: 'default',
        background: theme.styleguideColors.fillPrimaryBlue,
        color: theme.styleguideColors.contentOnFill,
        ':hover': {
            background: theme.styleguideColors.fillPrimaryBlue,
        },
        ':active': {
            background: theme.styleguideColors.fillPrimaryBlue,
        },
    })), (disabled && {
        cursor: 'default',
        pointerEvents: 'none',
        color: theme.styleguideColors.contentTertiary,
    })));
});
export function TabMenuItem(props) {
    return (_jsx(Tooltip, __assign({ title: props.tooltip, limitWidth: true, lineHeight: props.lineHeight, scale: props.scale, paddingScale: props.tooltipPaddingScale }, { children: _jsx(StyledButton, __assign({ color: "utility" }, props, { children: _jsxs(FlexRow, __assign({ gap: 3, align: 'center' }, { children: [props.children, props.tooltip && (_jsx(SvgIcon, { width: 17, height: 16, src: "assets/icons/ic-info.svg" }))] })) })) })));
}
export default TabMenuItem;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFiLW1lbnUtaXRlbS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9saWIvY29tcG9uZW50cy90YWItbWVudS1pdGVtL3RhYi1tZW51LWl0ZW0udHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQ0EsT0FBTyxNQUFNLE1BQU0sbUJBQW1CLENBQUM7QUFHdkMsT0FBTyxNQUF1QixNQUFNLGtCQUFrQixDQUFDO0FBQ3ZELE9BQU8sT0FBTyxNQUFNLHNCQUFzQixDQUFDO0FBQzNDLE9BQU8sT0FBTyxNQUFNLHNCQUFzQixDQUFDO0FBQzNDLE9BQU8sRUFBQyxTQUFTLEVBQUMsTUFBTSx3QkFBd0IsQ0FBQztBQUNqRCxPQUFPLE9BQU8sTUFBTSxvQkFBb0IsQ0FBQztBQVd6QyxJQUFNLFlBQVksR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQ2pDLFVBQUMsRUFBNEQ7UUFBMUQsS0FBSyxXQUFBLEVBQUUsTUFBTSxZQUFBLEVBQUUsUUFBUSxjQUFBLEVBQUUsa0JBQWlCLEVBQWpCLFVBQVUsbUJBQUcsSUFBSSxLQUFBLEVBQUUsYUFBWSxFQUFaLEtBQUssbUJBQUcsSUFBSSxLQUFBO0lBQ3pELE9BQUEsS0FBSyxDQUFDLFNBQVMscUJBQ2IsUUFBUSxFQUFFLENBQUMsR0FBRyxFQUFFLEdBQUcsQ0FBQyxFQUNwQixPQUFPLEVBQUUsS0FBSyxFQUNkLFFBQVEsRUFBRSxhQUFhLEVBQ3ZCLE1BQU0sRUFBRSxFQUFFLEVBQ1YsUUFBUSxFQUFFLFNBQVMsQ0FDZjtZQUNJLEVBQUUsRUFBRSxRQUFRO1lBQ1osRUFBRSxFQUFFLFdBQVc7U0FDbEIsRUFDRCxLQUFLLENBQ1IsRUFDQyxVQUFVLEVBQUUsU0FBUyxDQUNqQjtZQUNJLEVBQUUsRUFBRSxRQUFRO1lBQ1osRUFBRSxFQUFFLFNBQVM7U0FDaEIsRUFDRCxVQUFVLENBQ2IsRUFDSCxVQUFVLEVBQUUsS0FBSyxDQUFDLFVBQVUsQ0FBQyxVQUFVLENBQUMsTUFBTSxFQUM5QyxNQUFNLEVBQUUsU0FBUyxFQUNqQixVQUFVLEVBQUUsQ0FBQyxFQUNiLEtBQUssRUFBRSxLQUFLLENBQUMsZ0JBQWdCLENBQUMsV0FBVyxFQUN6QyxZQUFZLEVBQUUsQ0FBQyxFQUNmLGFBQWEsRUFBRSxZQUFZLEVBQzNCLGdCQUFnQixFQUFFO1lBQ2hCLFlBQVksRUFBRSxhQUFhO1NBQzVCLEVBQ0QsZUFBZSxFQUFFO1lBQ2YsWUFBWSxFQUFFLGFBQWE7U0FDNUIsRUFFRCxRQUFRLEVBQUU7WUFDUixVQUFVLEVBQUUsS0FBSyxDQUFDLGdCQUFnQixDQUFDLHNCQUFzQjtZQUN6RCxLQUFLLEVBQUUsS0FBSyxDQUFDLGdCQUFnQixDQUFDLFdBQVc7U0FDMUMsRUFDRCxTQUFTLEVBQUU7WUFDVCxVQUFVLEVBQUUsS0FBSyxDQUFDLGdCQUFnQixDQUFDLHNCQUFzQjtZQUN6RCxLQUFLLEVBQUUsS0FBSyxDQUFDLGdCQUFnQixDQUFDLFdBQVc7U0FDMUMsSUFFRSxDQUFDLE1BQU0sSUFBSTtRQUNaLE1BQU0sRUFBRSxTQUFTO1FBQ2pCLFVBQVUsRUFBRSxLQUFLLENBQUMsZ0JBQWdCLENBQUMsZUFBZTtRQUNsRCxLQUFLLEVBQUUsS0FBSyxDQUFDLGdCQUFnQixDQUFDLGFBQWE7UUFDM0MsUUFBUSxFQUFFO1lBQ1IsVUFBVSxFQUFFLEtBQUssQ0FBQyxnQkFBZ0IsQ0FBQyxlQUFlO1NBQ25EO1FBQ0QsU0FBUyxFQUFFO1lBQ1QsVUFBVSxFQUFFLEtBQUssQ0FBQyxnQkFBZ0IsQ0FBQyxlQUFlO1NBQ25EO0tBQ0YsQ0FBQyxHQUVDLENBQUMsUUFBUSxJQUFJO1FBQ2QsTUFBTSxFQUFFLFNBQVM7UUFDakIsYUFBYSxFQUFFLE1BQU07UUFDckIsS0FBSyxFQUFFLEtBQUssQ0FBQyxnQkFBZ0IsQ0FBQyxlQUFlO0tBQzlDLENBQUMsRUFDRjtBQTFERixDQTBERSxDQUNMLENBQUM7QUFFRixNQUFNLFVBQVUsV0FBVyxDQUFDLEtBQXVCO0lBQ2pELE9BQU8sQ0FDSCxLQUFDLE9BQU8sYUFBQyxLQUFLLEVBQUUsS0FBSyxDQUFDLE9BQU8sRUFBRSxVQUFVLFFBQUMsVUFBVSxFQUFFLEtBQUssQ0FBQyxVQUFVLEVBQUUsS0FBSyxFQUFFLEtBQUssQ0FBQyxLQUFLLEVBQUUsWUFBWSxFQUFFLEtBQUssQ0FBQyxtQkFBbUIsZ0JBQ25JLEtBQUMsWUFBWSxhQUFDLEtBQUssRUFBQyxTQUFTLElBQUssS0FBSyxjQUNyQyxNQUFDLE9BQU8sYUFBQyxHQUFHLEVBQUUsQ0FBQyxFQUFFLEtBQUssRUFBRSxRQUFRLGlCQUM3QixLQUFLLENBQUMsUUFBUSxFQUNkLEtBQUssQ0FBQyxPQUFPLElBQUksQ0FDaEIsS0FBQyxPQUFPLElBQUMsS0FBSyxFQUFFLEVBQUUsRUFBRSxNQUFNLEVBQUUsRUFBRSxFQUFFLEdBQUcsRUFBQywwQkFBMEIsR0FBRyxDQUNsRSxLQUNPLElBQ0csSUFDTCxDQUNiLENBQUM7QUFDSixDQUFDO0FBRUQsZUFBZSxXQUFXLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgc3R5bGVkIGZyb20gJ3N0eWxlZC1jb21wb25lbnRzJztcclxuXHJcbmltcG9ydCB7IEFjdGl2YWJsZVByb3BzIH0gZnJvbSAnLi4vLi4vdHlwZXMnO1xyXG5pbXBvcnQgQnV0dG9uLCB7IEJ1dHRvblByb3BzIH0gZnJvbSAnLi4vYnV0dG9uL2J1dHRvbic7XHJcbmltcG9ydCBTdmdJY29uIGZyb20gJy4uL3N2Zy1pY29uL3N2Zy1pY29uJztcclxuaW1wb3J0IEZsZXhSb3cgZnJvbSAnLi4vZmxleC1yb3cvZmxleC1yb3cnO1xyXG5pbXBvcnQge21hdGNoU2l6ZX0gZnJvbSBcIi4uLy4uL3V0aWxzL21hdGNoLXNpemVcIjtcclxuaW1wb3J0IFRvb2x0aXAgZnJvbSBcIi4uL3Rvb2x0aXAvdG9vbHRpcFwiO1xyXG5cclxuLyogZXNsaW50LWRpc2FibGUtbmV4dC1saW5lICovXHJcbmV4cG9ydCBpbnRlcmZhY2UgVGFiTWVudUl0ZW1Qcm9wcyBleHRlbmRzIEJ1dHRvblByb3BzLCBBY3RpdmFibGVQcm9wcyB7XHJcbiAgZGlzYWJsZWQ/OiBib29sZWFuO1xyXG4gIHRvb2x0aXA/OiBzdHJpbmc7XHJcbiAgbGluZUhlaWdodD86ICd4cycgfCAnc20nO1xyXG4gIHNjYWxlPzogJ3hzJyB8ICdzbSc7XHJcbiAgdG9vbHRpcFBhZGRpbmdTY2FsZT86IDEgfCAyO1xyXG59XHJcblxyXG5jb25zdCBTdHlsZWRCdXR0b24gPSBzdHlsZWQoQnV0dG9uKTxUYWJNZW51SXRlbVByb3BzPihcclxuICAoeyB0aGVtZSwgYWN0aXZlLCBkaXNhYmxlZCwgbGluZUhlaWdodCA9ICdzbScsIHNjYWxlID0gJ3NtJyB9KSA9PlxyXG4gICAgdGhlbWUud2l0aE1lZGlhKHtcclxuICAgICAgbWluV2lkdGg6IFsxMzEsIDE0MF0sXHJcbiAgICAgIHBhZGRpbmc6ICc2cHgnLFxyXG4gICAgICBtYXhXaWR0aDogJ2ZpdC1jb250ZW50JyxcclxuICAgICAgaGVpZ2h0OiAzMixcclxuICAgICAgZm9udFNpemU6IG1hdGNoU2l6ZShcclxuICAgICAgICAgIHtcclxuICAgICAgICAgICAgICBzbTogJzEuM3JlbScsXHJcbiAgICAgICAgICAgICAgeHM6ICcwLjgxMjVyZW0nLFxyXG4gICAgICAgICAgfSxcclxuICAgICAgICAgIHNjYWxlXHJcbiAgICAgICksXHJcbiAgICAgICAgbGluZUhlaWdodDogbWF0Y2hTaXplKFxyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICBzbTogJzEuNXJlbScsXHJcbiAgICAgICAgICAgICAgICB4czogJzEuMjVyZW0nLFxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBsaW5lSGVpZ2h0XHJcbiAgICAgICAgKSxcclxuICAgICAgZm9udFdlaWdodDogdGhlbWUudHlwb2dyYXBoeS5mb250V2VpZ2h0Lm1lZGl1bSxcclxuICAgICAgY3Vyc29yOiAncG9pbnRlcicsXHJcbiAgICAgIG1hcmdpbkxlZnQ6IDIsXHJcbiAgICAgIGNvbG9yOiB0aGVtZS5zdHlsZWd1aWRlQ29sb3JzLmNvbnRlbnRCbHVlLFxyXG4gICAgICBib3JkZXJSYWRpdXM6IDAsXHJcbiAgICAgIHRleHRUcmFuc2Zvcm06ICdjYXBpdGFsaXplJyxcclxuICAgICAgJzpmaXJzdC1vZi10eXBlJzoge1xyXG4gICAgICAgIGJvcmRlclJhZGl1czogJzRweCAwIDAgNHB4JyxcclxuICAgICAgfSxcclxuICAgICAgJzpsYXN0LW9mLXR5cGUnOiB7XHJcbiAgICAgICAgYm9yZGVyUmFkaXVzOiAnMCA0cHggNHB4IDAnLFxyXG4gICAgICB9LFxyXG5cclxuICAgICAgJzpob3Zlcic6IHtcclxuICAgICAgICBiYWNrZ3JvdW5kOiB0aGVtZS5zdHlsZWd1aWRlQ29sb3JzLmZpbGxTZWNvbmRhcnlCbHVlSG92ZXIsXHJcbiAgICAgICAgY29sb3I6IHRoZW1lLnN0eWxlZ3VpZGVDb2xvcnMuY29udGVudEJsdWUsXHJcbiAgICAgIH0sXHJcbiAgICAgICc6YWN0aXZlJzoge1xyXG4gICAgICAgIGJhY2tncm91bmQ6IHRoZW1lLnN0eWxlZ3VpZGVDb2xvcnMuZmlsbFNlY29uZGFyeUJsdWVDbGljayxcclxuICAgICAgICBjb2xvcjogdGhlbWUuc3R5bGVndWlkZUNvbG9ycy5jb250ZW50Qmx1ZSxcclxuICAgICAgfSxcclxuXHJcbiAgICAgIC4uLihhY3RpdmUgJiYge1xyXG4gICAgICAgIGN1cnNvcjogJ2RlZmF1bHQnLFxyXG4gICAgICAgIGJhY2tncm91bmQ6IHRoZW1lLnN0eWxlZ3VpZGVDb2xvcnMuZmlsbFByaW1hcnlCbHVlLFxyXG4gICAgICAgIGNvbG9yOiB0aGVtZS5zdHlsZWd1aWRlQ29sb3JzLmNvbnRlbnRPbkZpbGwsXHJcbiAgICAgICAgJzpob3Zlcic6IHtcclxuICAgICAgICAgIGJhY2tncm91bmQ6IHRoZW1lLnN0eWxlZ3VpZGVDb2xvcnMuZmlsbFByaW1hcnlCbHVlLFxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgJzphY3RpdmUnOiB7XHJcbiAgICAgICAgICBiYWNrZ3JvdW5kOiB0aGVtZS5zdHlsZWd1aWRlQ29sb3JzLmZpbGxQcmltYXJ5Qmx1ZSxcclxuICAgICAgICB9LFxyXG4gICAgICB9KSxcclxuXHJcbiAgICAgIC4uLihkaXNhYmxlZCAmJiB7XHJcbiAgICAgICAgY3Vyc29yOiAnZGVmYXVsdCcsXHJcbiAgICAgICAgcG9pbnRlckV2ZW50czogJ25vbmUnLFxyXG4gICAgICAgIGNvbG9yOiB0aGVtZS5zdHlsZWd1aWRlQ29sb3JzLmNvbnRlbnRUZXJ0aWFyeSxcclxuICAgICAgfSksXHJcbiAgICB9KVxyXG4pO1xyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIFRhYk1lbnVJdGVtKHByb3BzOiBUYWJNZW51SXRlbVByb3BzKSB7XHJcbiAgcmV0dXJuIChcclxuICAgICAgPFRvb2x0aXAgdGl0bGU9e3Byb3BzLnRvb2x0aXB9IGxpbWl0V2lkdGggbGluZUhlaWdodD17cHJvcHMubGluZUhlaWdodH0gc2NhbGU9e3Byb3BzLnNjYWxlfSBwYWRkaW5nU2NhbGU9e3Byb3BzLnRvb2x0aXBQYWRkaW5nU2NhbGV9PlxyXG4gICAgICA8U3R5bGVkQnV0dG9uIGNvbG9yPVwidXRpbGl0eVwiIHsuLi5wcm9wc30+XHJcbiAgICAgICAgPEZsZXhSb3cgZ2FwPXszfSBhbGlnbj17J2NlbnRlcid9PlxyXG4gICAgICAgICAge3Byb3BzLmNoaWxkcmVufVxyXG4gICAgICAgICAge3Byb3BzLnRvb2x0aXAgJiYgKFxyXG4gICAgICAgICAgICA8U3ZnSWNvbiB3aWR0aD17MTd9IGhlaWdodD17MTZ9IHNyYz1cImFzc2V0cy9pY29ucy9pYy1pbmZvLnN2Z1wiIC8+XHJcbiAgICAgICAgICApfVxyXG4gICAgICAgIDwvRmxleFJvdz5cclxuICAgICAgPC9TdHlsZWRCdXR0b24+XHJcbiAgICAgIDwvVG9vbHRpcD5cclxuICApO1xyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBUYWJNZW51SXRlbTtcclxuIl19