import { __assign } from "tslib";
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import styled from 'styled-components';
import Button from '../button/button';
import SvgIcon from '../svg-icon/svg-icon';
import FlexRow from '../flex-row/flex-row';
import { matchSize } from "../../utils/match-size";
import Tooltip from "../tooltip/tooltip";
var StyledButton = styled(Button)(function (_a) {
    var theme = _a.theme, active = _a.active, disabled = _a.disabled, _b = _a.lineHeight, lineHeight = _b === void 0 ? 'sm' : _b, _c = _a.scale, scale = _c === void 0 ? 'sm' : _c;
    return theme.withMedia(__assign(__assign({ minWidth: [131, 140], padding: '6px', maxWidth: 'fit-content', height: 32, fontSize: matchSize({
            sm: '1.3rem',
            xs: '0.8125rem',
        }, scale), lineHeight: matchSize({
            sm: '1.5rem',
            xs: '1.25rem',
        }, lineHeight), fontWeight: theme.typography.fontWeight.medium, cursor: 'pointer', marginLeft: 2, color: theme.styleguideColors.contentBlue, borderRadius: 0, textTransform: 'capitalize', ':first-of-type': {
            borderRadius: '4px 0 0 4px',
        }, ':last-of-type': {
            borderRadius: '0 4px 4px 0',
        }, ':hover': {
            background: theme.styleguideColors.fillSecondaryBlueHover,
            color: theme.styleguideColors.contentBlue,
        }, ':active': {
            background: theme.styleguideColors.fillSecondaryBlueClick,
            color: theme.styleguideColors.contentBlue,
        } }, (active && {
        cursor: 'default',
        background: theme.styleguideColors.fillPrimaryBlue,
        color: theme.styleguideColors.contentOnFill,
        ':hover': {
            background: theme.styleguideColors.fillPrimaryBlue,
        },
        ':active': {
            background: theme.styleguideColors.fillPrimaryBlue,
        },
    })), (disabled && {
        cursor: 'default',
        pointerEvents: 'none',
        color: theme.styleguideColors.contentTertiary,
    })));
});
export function TabMenuItem(props) {
    return (_jsx(Tooltip, __assign({ title: props.tooltip, limitWidth: true, lineHeight: props.lineHeight, scale: props.scale, paddingScale: props.tooltipPaddingScale }, { children: _jsx(StyledButton, __assign({ color: "utility" }, props, { children: _jsxs(FlexRow, __assign({ gap: 3, align: 'center' }, { children: [props.children, props.tooltip && (_jsx(SvgIcon, { width: 17, height: 16, src: "assets/icons/ic-info.svg" }))] })) })) })));
}
export default TabMenuItem;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFiLW1lbnUtaXRlbS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9saWIvY29tcG9uZW50cy90YWItbWVudS1pdGVtL3RhYi1tZW51LWl0ZW0udHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQ0EsT0FBTyxNQUFNLE1BQU0sbUJBQW1CLENBQUM7QUFHdkMsT0FBTyxNQUF1QixNQUFNLGtCQUFrQixDQUFDO0FBQ3ZELE9BQU8sT0FBTyxNQUFNLHNCQUFzQixDQUFDO0FBQzNDLE9BQU8sT0FBTyxNQUFNLHNCQUFzQixDQUFDO0FBQzNDLE9BQU8sRUFBQyxTQUFTLEVBQUMsTUFBTSx3QkFBd0IsQ0FBQztBQUNqRCxPQUFPLE9BQU8sTUFBTSxvQkFBb0IsQ0FBQztBQVd6QyxJQUFNLFlBQVksR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQ2pDLFVBQUMsRUFBNEQ7UUFBMUQsS0FBSyxXQUFBLEVBQUUsTUFBTSxZQUFBLEVBQUUsUUFBUSxjQUFBLEVBQUUsa0JBQWlCLEVBQWpCLFVBQVUsbUJBQUcsSUFBSSxLQUFBLEVBQUUsYUFBWSxFQUFaLEtBQUssbUJBQUcsSUFBSSxLQUFBO0lBQ3pELE9BQUEsS0FBSyxDQUFDLFNBQVMscUJBQ2IsUUFBUSxFQUFFLENBQUMsR0FBRyxFQUFFLEdBQUcsQ0FBQyxFQUNwQixPQUFPLEVBQUUsS0FBSyxFQUNkLFFBQVEsRUFBRSxhQUFhLEVBQ3ZCLE1BQU0sRUFBRSxFQUFFLEVBQ1YsUUFBUSxFQUFFLFNBQVMsQ0FDZjtZQUNJLEVBQUUsRUFBRSxRQUFRO1lBQ1osRUFBRSxFQUFFLFdBQVc7U0FDbEIsRUFDRCxLQUFLLENBQ1IsRUFDQyxVQUFVLEVBQUUsU0FBUyxDQUNqQjtZQUNJLEVBQUUsRUFBRSxRQUFRO1lBQ1osRUFBRSxFQUFFLFNBQVM7U0FDaEIsRUFDRCxVQUFVLENBQ2IsRUFDSCxVQUFVLEVBQUUsS0FBSyxDQUFDLFVBQVUsQ0FBQyxVQUFVLENBQUMsTUFBTSxFQUM5QyxNQUFNLEVBQUUsU0FBUyxFQUNqQixVQUFVLEVBQUUsQ0FBQyxFQUNiLEtBQUssRUFBRSxLQUFLLENBQUMsZ0JBQWdCLENBQUMsV0FBVyxFQUN6QyxZQUFZLEVBQUUsQ0FBQyxFQUNmLGFBQWEsRUFBRSxZQUFZLEVBQzNCLGdCQUFnQixFQUFFO1lBQ2hCLFlBQVksRUFBRSxhQUFhO1NBQzVCLEVBQ0QsZUFBZSxFQUFFO1lBQ2YsWUFBWSxFQUFFLGFBQWE7U0FDNUIsRUFFRCxRQUFRLEVBQUU7WUFDUixVQUFVLEVBQUUsS0FBSyxDQUFDLGdCQUFnQixDQUFDLHNCQUFzQjtZQUN6RCxLQUFLLEVBQUUsS0FBSyxDQUFDLGdCQUFnQixDQUFDLFdBQVc7U0FDMUMsRUFDRCxTQUFTLEVBQUU7WUFDVCxVQUFVLEVBQUUsS0FBSyxDQUFDLGdCQUFnQixDQUFDLHNCQUFzQjtZQUN6RCxLQUFLLEVBQUUsS0FBSyxDQUFDLGdCQUFnQixDQUFDLFdBQVc7U0FDMUMsSUFFRSxDQUFDLE1BQU0sSUFBSTtRQUNaLE1BQU0sRUFBRSxTQUFTO1FBQ2pCLFVBQVUsRUFBRSxLQUFLLENBQUMsZ0JBQWdCLENBQUMsZUFBZTtRQUNsRCxLQUFLLEVBQUUsS0FBSyxDQUFDLGdCQUFnQixDQUFDLGFBQWE7UUFDM0MsUUFBUSxFQUFFO1lBQ1IsVUFBVSxFQUFFLEtBQUssQ0FBQyxnQkFBZ0IsQ0FBQyxlQUFlO1NBQ25EO1FBQ0QsU0FBUyxFQUFFO1lBQ1QsVUFBVSxFQUFFLEtBQUssQ0FBQyxnQkFBZ0IsQ0FBQyxlQUFlO1NBQ25EO0tBQ0YsQ0FBQyxHQUVDLENBQUMsUUFBUSxJQUFJO1FBQ2QsTUFBTSxFQUFFLFNBQVM7UUFDakIsYUFBYSxFQUFFLE1BQU07UUFDckIsS0FBSyxFQUFFLEtBQUssQ0FBQyxnQkFBZ0IsQ0FBQyxlQUFlO0tBQzlDLENBQUMsRUFDRjtBQTFERixDQTBERSxDQUNMLENBQUM7QUFFRixNQUFNLFVBQVUsV0FBVyxDQUFDLEtBQXVCO0lBQ2pELE9BQU8sQ0FDSCxLQUFDLE9BQU8sYUFBQyxLQUFLLEVBQUUsS0FBSyxDQUFDLE9BQU8sRUFBRSxVQUFVLFFBQUMsVUFBVSxFQUFFLEtBQUssQ0FBQyxVQUFVLEVBQUUsS0FBSyxFQUFFLEtBQUssQ0FBQyxLQUFLLEVBQUUsWUFBWSxFQUFFLEtBQUssQ0FBQyxtQkFBbUIsZ0JBQ25JLEtBQUMsWUFBWSxhQUFDLEtBQUssRUFBQyxTQUFTLElBQUssS0FBSyxjQUNyQyxNQUFDLE9BQU8sYUFBQyxHQUFHLEVBQUUsQ0FBQyxFQUFFLEtBQUssRUFBRSxRQUFRLGlCQUM3QixLQUFLLENBQUMsUUFBUSxFQUNkLEtBQUssQ0FBQyxPQUFPLElBQUksQ0FDaEIsS0FBQyxPQUFPLElBQUMsS0FBSyxFQUFFLEVBQUUsRUFBRSxNQUFNLEVBQUUsRUFBRSxFQUFFLEdBQUcsRUFBQywwQkFBMEIsR0FBRyxDQUNsRSxLQUNPLElBQ0csSUFDTCxDQUNiLENBQUM7QUFDSixDQUFDO0FBRUQsZUFBZSxXQUFXLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHN0eWxlZCBmcm9tICdzdHlsZWQtY29tcG9uZW50cyc7XG5cbmltcG9ydCB7IEFjdGl2YWJsZVByb3BzIH0gZnJvbSAnLi4vLi4vdHlwZXMnO1xuaW1wb3J0IEJ1dHRvbiwgeyBCdXR0b25Qcm9wcyB9IGZyb20gJy4uL2J1dHRvbi9idXR0b24nO1xuaW1wb3J0IFN2Z0ljb24gZnJvbSAnLi4vc3ZnLWljb24vc3ZnLWljb24nO1xuaW1wb3J0IEZsZXhSb3cgZnJvbSAnLi4vZmxleC1yb3cvZmxleC1yb3cnO1xuaW1wb3J0IHttYXRjaFNpemV9IGZyb20gXCIuLi8uLi91dGlscy9tYXRjaC1zaXplXCI7XG5pbXBvcnQgVG9vbHRpcCBmcm9tIFwiLi4vdG9vbHRpcC90b29sdGlwXCI7XG5cbi8qIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSAqL1xuZXhwb3J0IGludGVyZmFjZSBUYWJNZW51SXRlbVByb3BzIGV4dGVuZHMgQnV0dG9uUHJvcHMsIEFjdGl2YWJsZVByb3BzIHtcbiAgZGlzYWJsZWQ/OiBib29sZWFuO1xuICB0b29sdGlwPzogc3RyaW5nO1xuICBsaW5lSGVpZ2h0PzogJ3hzJyB8ICdzbSc7XG4gIHNjYWxlPzogJ3hzJyB8ICdzbSc7XG4gIHRvb2x0aXBQYWRkaW5nU2NhbGU/OiAxIHwgMjtcbn1cblxuY29uc3QgU3R5bGVkQnV0dG9uID0gc3R5bGVkKEJ1dHRvbik8VGFiTWVudUl0ZW1Qcm9wcz4oXG4gICh7IHRoZW1lLCBhY3RpdmUsIGRpc2FibGVkLCBsaW5lSGVpZ2h0ID0gJ3NtJywgc2NhbGUgPSAnc20nIH0pID0+XG4gICAgdGhlbWUud2l0aE1lZGlhKHtcbiAgICAgIG1pbldpZHRoOiBbMTMxLCAxNDBdLFxuICAgICAgcGFkZGluZzogJzZweCcsXG4gICAgICBtYXhXaWR0aDogJ2ZpdC1jb250ZW50JyxcbiAgICAgIGhlaWdodDogMzIsXG4gICAgICBmb250U2l6ZTogbWF0Y2hTaXplKFxuICAgICAgICAgIHtcbiAgICAgICAgICAgICAgc206ICcxLjNyZW0nLFxuICAgICAgICAgICAgICB4czogJzAuODEyNXJlbScsXG4gICAgICAgICAgfSxcbiAgICAgICAgICBzY2FsZVxuICAgICAgKSxcbiAgICAgICAgbGluZUhlaWdodDogbWF0Y2hTaXplKFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHNtOiAnMS41cmVtJyxcbiAgICAgICAgICAgICAgICB4czogJzEuMjVyZW0nLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGxpbmVIZWlnaHRcbiAgICAgICAgKSxcbiAgICAgIGZvbnRXZWlnaHQ6IHRoZW1lLnR5cG9ncmFwaHkuZm9udFdlaWdodC5tZWRpdW0sXG4gICAgICBjdXJzb3I6ICdwb2ludGVyJyxcbiAgICAgIG1hcmdpbkxlZnQ6IDIsXG4gICAgICBjb2xvcjogdGhlbWUuc3R5bGVndWlkZUNvbG9ycy5jb250ZW50Qmx1ZSxcbiAgICAgIGJvcmRlclJhZGl1czogMCxcbiAgICAgIHRleHRUcmFuc2Zvcm06ICdjYXBpdGFsaXplJyxcbiAgICAgICc6Zmlyc3Qtb2YtdHlwZSc6IHtcbiAgICAgICAgYm9yZGVyUmFkaXVzOiAnNHB4IDAgMCA0cHgnLFxuICAgICAgfSxcbiAgICAgICc6bGFzdC1vZi10eXBlJzoge1xuICAgICAgICBib3JkZXJSYWRpdXM6ICcwIDRweCA0cHggMCcsXG4gICAgICB9LFxuXG4gICAgICAnOmhvdmVyJzoge1xuICAgICAgICBiYWNrZ3JvdW5kOiB0aGVtZS5zdHlsZWd1aWRlQ29sb3JzLmZpbGxTZWNvbmRhcnlCbHVlSG92ZXIsXG4gICAgICAgIGNvbG9yOiB0aGVtZS5zdHlsZWd1aWRlQ29sb3JzLmNvbnRlbnRCbHVlLFxuICAgICAgfSxcbiAgICAgICc6YWN0aXZlJzoge1xuICAgICAgICBiYWNrZ3JvdW5kOiB0aGVtZS5zdHlsZWd1aWRlQ29sb3JzLmZpbGxTZWNvbmRhcnlCbHVlQ2xpY2ssXG4gICAgICAgIGNvbG9yOiB0aGVtZS5zdHlsZWd1aWRlQ29sb3JzLmNvbnRlbnRCbHVlLFxuICAgICAgfSxcblxuICAgICAgLi4uKGFjdGl2ZSAmJiB7XG4gICAgICAgIGN1cnNvcjogJ2RlZmF1bHQnLFxuICAgICAgICBiYWNrZ3JvdW5kOiB0aGVtZS5zdHlsZWd1aWRlQ29sb3JzLmZpbGxQcmltYXJ5Qmx1ZSxcbiAgICAgICAgY29sb3I6IHRoZW1lLnN0eWxlZ3VpZGVDb2xvcnMuY29udGVudE9uRmlsbCxcbiAgICAgICAgJzpob3Zlcic6IHtcbiAgICAgICAgICBiYWNrZ3JvdW5kOiB0aGVtZS5zdHlsZWd1aWRlQ29sb3JzLmZpbGxQcmltYXJ5Qmx1ZSxcbiAgICAgICAgfSxcbiAgICAgICAgJzphY3RpdmUnOiB7XG4gICAgICAgICAgYmFja2dyb3VuZDogdGhlbWUuc3R5bGVndWlkZUNvbG9ycy5maWxsUHJpbWFyeUJsdWUsXG4gICAgICAgIH0sXG4gICAgICB9KSxcblxuICAgICAgLi4uKGRpc2FibGVkICYmIHtcbiAgICAgICAgY3Vyc29yOiAnZGVmYXVsdCcsXG4gICAgICAgIHBvaW50ZXJFdmVudHM6ICdub25lJyxcbiAgICAgICAgY29sb3I6IHRoZW1lLnN0eWxlZ3VpZGVDb2xvcnMuY29udGVudFRlcnRpYXJ5LFxuICAgICAgfSksXG4gICAgfSlcbik7XG5cbmV4cG9ydCBmdW5jdGlvbiBUYWJNZW51SXRlbShwcm9wczogVGFiTWVudUl0ZW1Qcm9wcykge1xuICByZXR1cm4gKFxuICAgICAgPFRvb2x0aXAgdGl0bGU9e3Byb3BzLnRvb2x0aXB9IGxpbWl0V2lkdGggbGluZUhlaWdodD17cHJvcHMubGluZUhlaWdodH0gc2NhbGU9e3Byb3BzLnNjYWxlfSBwYWRkaW5nU2NhbGU9e3Byb3BzLnRvb2x0aXBQYWRkaW5nU2NhbGV9PlxuICAgICAgPFN0eWxlZEJ1dHRvbiBjb2xvcj1cInV0aWxpdHlcIiB7Li4ucHJvcHN9PlxuICAgICAgICA8RmxleFJvdyBnYXA9ezN9IGFsaWduPXsnY2VudGVyJ30+XG4gICAgICAgICAge3Byb3BzLmNoaWxkcmVufVxuICAgICAgICAgIHtwcm9wcy50b29sdGlwICYmIChcbiAgICAgICAgICAgIDxTdmdJY29uIHdpZHRoPXsxN30gaGVpZ2h0PXsxNn0gc3JjPVwiYXNzZXRzL2ljb25zL2ljLWluZm8uc3ZnXCIgLz5cbiAgICAgICAgICApfVxuICAgICAgICA8L0ZsZXhSb3c+XG4gICAgICA8L1N0eWxlZEJ1dHRvbj5cbiAgICAgIDwvVG9vbHRpcD5cbiAgKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgVGFiTWVudUl0ZW07XG4iXX0=