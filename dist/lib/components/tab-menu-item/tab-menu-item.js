import { __assign } from "tslib";
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import styled from 'styled-components';
import Button from '../button/button';
import SvgIcon from '../svg-icon/svg-icon';
import FlexRow from '../flex-row/flex-row';
import { matchSize } from "../../utils/match-size";
var StyledButton = styled(Button)(function (_a) {
    var theme = _a.theme, active = _a.active, disabled = _a.disabled, _b = _a.lineHeight, lineHeight = _b === void 0 ? 'sm' : _b, _c = _a.scale, scale = _c === void 0 ? 'sm' : _c;
    return theme.withMedia(__assign(__assign({ minWidth: [131, 140], padding: '6px', maxWidth: 'fit-content', height: 32, fontSize: matchSize({
            sm: '1.3rem',
            xs: '0.8125rem',
        }, scale), lineHeight: matchSize({
            sm: '1.5rem',
            xs: '1.25rem',
        }, lineHeight), fontWeight: theme.typography.fontWeight.medium, cursor: 'pointer', marginLeft: 2, color: theme.styleguideColors.contentBlue, borderRadius: 0, textTransform: 'capitalize', ':first-of-type': {
            borderRadius: '4px 0 0 4px',
        }, ':last-of-type': {
            borderRadius: '0 4px 4px 0',
        }, ':hover': {
            background: theme.styleguideColors.fillSecondaryBlueHover,
            color: theme.styleguideColors.contentBlue,
        }, ':active': {
            background: theme.styleguideColors.fillSecondaryBlueClick,
            color: theme.styleguideColors.contentBlue,
        } }, (active && {
        cursor: 'default',
        background: theme.styleguideColors.fillPrimaryBlue,
        color: theme.styleguideColors.contentOnFill,
        ':hover': {
            background: theme.styleguideColors.fillPrimaryBlue,
        },
        ':active': {
            background: theme.styleguideColors.fillPrimaryBlue,
        },
    })), (disabled && {
        cursor: 'default',
        pointerEvents: 'none',
        color: theme.styleguideColors.contentTertiary,
    })));
});
export function TabMenuItem(props) {
    return (_jsx(StyledButton, __assign({ color: "utility" }, props, { children: _jsxs(FlexRow, __assign({ gap: 3, align: 'center' }, { children: [props.children, props.tooltip && (_jsx(SvgIcon, { width: 17, height: 16, src: "assets/icons/ic-info.svg" }))] })) })));
}
export default TabMenuItem;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFiLW1lbnUtaXRlbS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9saWIvY29tcG9uZW50cy90YWItbWVudS1pdGVtL3RhYi1tZW51LWl0ZW0udHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQ0EsT0FBTyxNQUFNLE1BQU0sbUJBQW1CLENBQUM7QUFHdkMsT0FBTyxNQUF1QixNQUFNLGtCQUFrQixDQUFDO0FBQ3ZELE9BQU8sT0FBTyxNQUFNLHNCQUFzQixDQUFDO0FBQzNDLE9BQU8sT0FBTyxNQUFNLHNCQUFzQixDQUFDO0FBQzNDLE9BQU8sRUFBQyxTQUFTLEVBQUMsTUFBTSx3QkFBd0IsQ0FBQztBQVVqRCxJQUFNLFlBQVksR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQ2pDLFVBQUMsRUFBNEQ7UUFBMUQsS0FBSyxXQUFBLEVBQUUsTUFBTSxZQUFBLEVBQUUsUUFBUSxjQUFBLEVBQUUsa0JBQWlCLEVBQWpCLFVBQVUsbUJBQUcsSUFBSSxLQUFBLEVBQUUsYUFBWSxFQUFaLEtBQUssbUJBQUcsSUFBSSxLQUFBO0lBQ3pELE9BQUEsS0FBSyxDQUFDLFNBQVMscUJBQ2IsUUFBUSxFQUFFLENBQUMsR0FBRyxFQUFFLEdBQUcsQ0FBQyxFQUNwQixPQUFPLEVBQUUsS0FBSyxFQUNkLFFBQVEsRUFBRSxhQUFhLEVBQ3ZCLE1BQU0sRUFBRSxFQUFFLEVBQ1YsUUFBUSxFQUFFLFNBQVMsQ0FDZjtZQUNJLEVBQUUsRUFBRSxRQUFRO1lBQ1osRUFBRSxFQUFFLFdBQVc7U0FDbEIsRUFDRCxLQUFLLENBQ1IsRUFDQyxVQUFVLEVBQUUsU0FBUyxDQUNqQjtZQUNJLEVBQUUsRUFBRSxRQUFRO1lBQ1osRUFBRSxFQUFFLFNBQVM7U0FDaEIsRUFDRCxVQUFVLENBQ2IsRUFDSCxVQUFVLEVBQUUsS0FBSyxDQUFDLFVBQVUsQ0FBQyxVQUFVLENBQUMsTUFBTSxFQUM5QyxNQUFNLEVBQUUsU0FBUyxFQUNqQixVQUFVLEVBQUUsQ0FBQyxFQUNiLEtBQUssRUFBRSxLQUFLLENBQUMsZ0JBQWdCLENBQUMsV0FBVyxFQUN6QyxZQUFZLEVBQUUsQ0FBQyxFQUNmLGFBQWEsRUFBRSxZQUFZLEVBQzNCLGdCQUFnQixFQUFFO1lBQ2hCLFlBQVksRUFBRSxhQUFhO1NBQzVCLEVBQ0QsZUFBZSxFQUFFO1lBQ2YsWUFBWSxFQUFFLGFBQWE7U0FDNUIsRUFFRCxRQUFRLEVBQUU7WUFDUixVQUFVLEVBQUUsS0FBSyxDQUFDLGdCQUFnQixDQUFDLHNCQUFzQjtZQUN6RCxLQUFLLEVBQUUsS0FBSyxDQUFDLGdCQUFnQixDQUFDLFdBQVc7U0FDMUMsRUFDRCxTQUFTLEVBQUU7WUFDVCxVQUFVLEVBQUUsS0FBSyxDQUFDLGdCQUFnQixDQUFDLHNCQUFzQjtZQUN6RCxLQUFLLEVBQUUsS0FBSyxDQUFDLGdCQUFnQixDQUFDLFdBQVc7U0FDMUMsSUFFRSxDQUFDLE1BQU0sSUFBSTtRQUNaLE1BQU0sRUFBRSxTQUFTO1FBQ2pCLFVBQVUsRUFBRSxLQUFLLENBQUMsZ0JBQWdCLENBQUMsZUFBZTtRQUNsRCxLQUFLLEVBQUUsS0FBSyxDQUFDLGdCQUFnQixDQUFDLGFBQWE7UUFDM0MsUUFBUSxFQUFFO1lBQ1IsVUFBVSxFQUFFLEtBQUssQ0FBQyxnQkFBZ0IsQ0FBQyxlQUFlO1NBQ25EO1FBQ0QsU0FBUyxFQUFFO1lBQ1QsVUFBVSxFQUFFLEtBQUssQ0FBQyxnQkFBZ0IsQ0FBQyxlQUFlO1NBQ25EO0tBQ0YsQ0FBQyxHQUVDLENBQUMsUUFBUSxJQUFJO1FBQ2QsTUFBTSxFQUFFLFNBQVM7UUFDakIsYUFBYSxFQUFFLE1BQU07UUFDckIsS0FBSyxFQUFFLEtBQUssQ0FBQyxnQkFBZ0IsQ0FBQyxlQUFlO0tBQzlDLENBQUMsRUFDRjtBQTFERixDQTBERSxDQUNMLENBQUM7QUFFRixNQUFNLFVBQVUsV0FBVyxDQUFDLEtBQXVCO0lBQ2pELE9BQU8sQ0FDSCxLQUFDLFlBQVksYUFBQyxLQUFLLEVBQUMsU0FBUyxJQUFLLEtBQUssY0FDckMsTUFBQyxPQUFPLGFBQUMsR0FBRyxFQUFFLENBQUMsRUFBRSxLQUFLLEVBQUUsUUFBUSxpQkFDN0IsS0FBSyxDQUFDLFFBQVEsRUFDZCxLQUFLLENBQUMsT0FBTyxJQUFJLENBQ2hCLEtBQUMsT0FBTyxJQUFDLEtBQUssRUFBRSxFQUFFLEVBQUUsTUFBTSxFQUFFLEVBQUUsRUFBRSxHQUFHLEVBQUMsMEJBQTBCLEdBQUcsQ0FDbEUsS0FDTyxJQUNHLENBQ2xCLENBQUM7QUFDSixDQUFDO0FBRUQsZUFBZSxXQUFXLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHN0eWxlZCBmcm9tICdzdHlsZWQtY29tcG9uZW50cyc7XG5cbmltcG9ydCB7IEFjdGl2YWJsZVByb3BzIH0gZnJvbSAnLi4vLi4vdHlwZXMnO1xuaW1wb3J0IEJ1dHRvbiwgeyBCdXR0b25Qcm9wcyB9IGZyb20gJy4uL2J1dHRvbi9idXR0b24nO1xuaW1wb3J0IFN2Z0ljb24gZnJvbSAnLi4vc3ZnLWljb24vc3ZnLWljb24nO1xuaW1wb3J0IEZsZXhSb3cgZnJvbSAnLi4vZmxleC1yb3cvZmxleC1yb3cnO1xuaW1wb3J0IHttYXRjaFNpemV9IGZyb20gXCIuLi8uLi91dGlscy9tYXRjaC1zaXplXCI7XG5cbi8qIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSAqL1xuZXhwb3J0IGludGVyZmFjZSBUYWJNZW51SXRlbVByb3BzIGV4dGVuZHMgQnV0dG9uUHJvcHMsIEFjdGl2YWJsZVByb3BzIHtcbiAgZGlzYWJsZWQ/OiBib29sZWFuO1xuICB0b29sdGlwPzogc3RyaW5nO1xuICBsaW5lSGVpZ2h0PzogJ3hzJyB8ICdzbSc7XG4gIHNjYWxlPzogJ3hzJyB8ICdzbSc7XG59XG5cbmNvbnN0IFN0eWxlZEJ1dHRvbiA9IHN0eWxlZChCdXR0b24pPFRhYk1lbnVJdGVtUHJvcHM+KFxuICAoeyB0aGVtZSwgYWN0aXZlLCBkaXNhYmxlZCwgbGluZUhlaWdodCA9ICdzbScsIHNjYWxlID0gJ3NtJyB9KSA9PlxuICAgIHRoZW1lLndpdGhNZWRpYSh7XG4gICAgICBtaW5XaWR0aDogWzEzMSwgMTQwXSxcbiAgICAgIHBhZGRpbmc6ICc2cHgnLFxuICAgICAgbWF4V2lkdGg6ICdmaXQtY29udGVudCcsXG4gICAgICBoZWlnaHQ6IDMyLFxuICAgICAgZm9udFNpemU6IG1hdGNoU2l6ZShcbiAgICAgICAgICB7XG4gICAgICAgICAgICAgIHNtOiAnMS4zcmVtJyxcbiAgICAgICAgICAgICAgeHM6ICcwLjgxMjVyZW0nLFxuICAgICAgICAgIH0sXG4gICAgICAgICAgc2NhbGVcbiAgICAgICksXG4gICAgICAgIGxpbmVIZWlnaHQ6IG1hdGNoU2l6ZShcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBzbTogJzEuNXJlbScsXG4gICAgICAgICAgICAgICAgeHM6ICcxLjI1cmVtJyxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBsaW5lSGVpZ2h0XG4gICAgICAgICksXG4gICAgICBmb250V2VpZ2h0OiB0aGVtZS50eXBvZ3JhcGh5LmZvbnRXZWlnaHQubWVkaXVtLFxuICAgICAgY3Vyc29yOiAncG9pbnRlcicsXG4gICAgICBtYXJnaW5MZWZ0OiAyLFxuICAgICAgY29sb3I6IHRoZW1lLnN0eWxlZ3VpZGVDb2xvcnMuY29udGVudEJsdWUsXG4gICAgICBib3JkZXJSYWRpdXM6IDAsXG4gICAgICB0ZXh0VHJhbnNmb3JtOiAnY2FwaXRhbGl6ZScsXG4gICAgICAnOmZpcnN0LW9mLXR5cGUnOiB7XG4gICAgICAgIGJvcmRlclJhZGl1czogJzRweCAwIDAgNHB4JyxcbiAgICAgIH0sXG4gICAgICAnOmxhc3Qtb2YtdHlwZSc6IHtcbiAgICAgICAgYm9yZGVyUmFkaXVzOiAnMCA0cHggNHB4IDAnLFxuICAgICAgfSxcblxuICAgICAgJzpob3Zlcic6IHtcbiAgICAgICAgYmFja2dyb3VuZDogdGhlbWUuc3R5bGVndWlkZUNvbG9ycy5maWxsU2Vjb25kYXJ5Qmx1ZUhvdmVyLFxuICAgICAgICBjb2xvcjogdGhlbWUuc3R5bGVndWlkZUNvbG9ycy5jb250ZW50Qmx1ZSxcbiAgICAgIH0sXG4gICAgICAnOmFjdGl2ZSc6IHtcbiAgICAgICAgYmFja2dyb3VuZDogdGhlbWUuc3R5bGVndWlkZUNvbG9ycy5maWxsU2Vjb25kYXJ5Qmx1ZUNsaWNrLFxuICAgICAgICBjb2xvcjogdGhlbWUuc3R5bGVndWlkZUNvbG9ycy5jb250ZW50Qmx1ZSxcbiAgICAgIH0sXG5cbiAgICAgIC4uLihhY3RpdmUgJiYge1xuICAgICAgICBjdXJzb3I6ICdkZWZhdWx0JyxcbiAgICAgICAgYmFja2dyb3VuZDogdGhlbWUuc3R5bGVndWlkZUNvbG9ycy5maWxsUHJpbWFyeUJsdWUsXG4gICAgICAgIGNvbG9yOiB0aGVtZS5zdHlsZWd1aWRlQ29sb3JzLmNvbnRlbnRPbkZpbGwsXG4gICAgICAgICc6aG92ZXInOiB7XG4gICAgICAgICAgYmFja2dyb3VuZDogdGhlbWUuc3R5bGVndWlkZUNvbG9ycy5maWxsUHJpbWFyeUJsdWUsXG4gICAgICAgIH0sXG4gICAgICAgICc6YWN0aXZlJzoge1xuICAgICAgICAgIGJhY2tncm91bmQ6IHRoZW1lLnN0eWxlZ3VpZGVDb2xvcnMuZmlsbFByaW1hcnlCbHVlLFxuICAgICAgICB9LFxuICAgICAgfSksXG5cbiAgICAgIC4uLihkaXNhYmxlZCAmJiB7XG4gICAgICAgIGN1cnNvcjogJ2RlZmF1bHQnLFxuICAgICAgICBwb2ludGVyRXZlbnRzOiAnbm9uZScsXG4gICAgICAgIGNvbG9yOiB0aGVtZS5zdHlsZWd1aWRlQ29sb3JzLmNvbnRlbnRUZXJ0aWFyeSxcbiAgICAgIH0pLFxuICAgIH0pXG4pO1xuXG5leHBvcnQgZnVuY3Rpb24gVGFiTWVudUl0ZW0ocHJvcHM6IFRhYk1lbnVJdGVtUHJvcHMpIHtcbiAgcmV0dXJuIChcbiAgICAgIDxTdHlsZWRCdXR0b24gY29sb3I9XCJ1dGlsaXR5XCIgey4uLnByb3BzfT5cbiAgICAgICAgPEZsZXhSb3cgZ2FwPXszfSBhbGlnbj17J2NlbnRlcid9PlxuICAgICAgICAgIHtwcm9wcy5jaGlsZHJlbn1cbiAgICAgICAgICB7cHJvcHMudG9vbHRpcCAmJiAoXG4gICAgICAgICAgICA8U3ZnSWNvbiB3aWR0aD17MTd9IGhlaWdodD17MTZ9IHNyYz1cImFzc2V0cy9pY29ucy9pYy1pbmZvLnN2Z1wiIC8+XG4gICAgICAgICAgKX1cbiAgICAgICAgPC9GbGV4Um93PlxuICAgICAgPC9TdHlsZWRCdXR0b24+XG4gICk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IFRhYk1lbnVJdGVtO1xuIl19