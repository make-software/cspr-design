import { __assign, __rest } from "tslib";
import { jsx as _jsx } from "react/jsx-runtime";
import React from 'react';
import styled from 'styled-components';
import Link from '../link/link';
import SvgIcon from './svg-icon';
var getSocialMediaColor = function (type) {
    return {
        keybase: '#EA773A',
        telegram: '#0088CC',
        twitter: '#1DA1F2',
        github: '#333333',
        youtube: '#FF0000',
        facebook: '#4267B2',
        medium: '#00AB6C',
        reddit: '#FF4500',
        wechat: '#7BB32E',
        twitter_x: '#0f1419',
        linkedin: '#0a66c2',
        website: '#BABBBF'
    }[type];
};
var getSocialMediaUrl = function (type, userId) {
    return {
        keybase: 'https://keybase.io/' + userId.replace('@', ''),
        telegram: 'https://t.me/' + userId.replace('@', ''),
        twitter: 'https://twitter.com/' + userId.replace('@', ''),
        twitter_x: 'https://twitter.com/' + userId.replace('@', ''),
        github: 'https://github.com/' + userId.replace('@', ''),
        youtube: 'https://youtube.com/channel/' + userId,
        facebook: 'https://facebook.com/' + userId,
        medium: 'https://medium.com/' + userId,
        reddit: 'https://reddit.com/' + userId,
        wechat: "weixin://dl/chat?".concat(userId, "/"),
        linkedin: 'https://www.linkedin.com/company/' + userId,
        website: userId
    }[type];
};
var Container = styled(Link)(function (_a) {
    var theme = _a.theme, type = _a.socialMediaType;
    return ({
        color: theme.styleguideColors.contentSecondary,
        '&:hover': {
            color: getSocialMediaColor(type),
        },
        '&:active': {
            color: getSocialMediaColor(type),
        },
    });
});
export var SvgIconSocial = React.forwardRef(function (_a, ref) {
    var type = _a.socialMediaType, userId = _a.userId, props = __rest(_a, ["socialMediaType", "userId"]);
    return (_jsx(Container, __assign({ ref: ref, color: "inherit", socialMediaType: type, href: getSocialMediaUrl(type, userId) }, props, { children: _jsx(SvgIcon, { src: "assets/icons/ic-".concat(type, ".svg") }) })));
});
export default SvgIconSocial;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3ZnLWljb24tc29jaWFsLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2xpYi9jb21wb25lbnRzL3N2Zy1pY29uL3N2Zy1pY29uLXNvY2lhbC50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxPQUFPLEtBQUssTUFBTSxPQUFPLENBQUM7QUFDMUIsT0FBTyxNQUFNLE1BQU0sbUJBQW1CLENBQUM7QUFFdkMsT0FBTyxJQUFJLE1BQU0sY0FBYyxDQUFDO0FBQ2hDLE9BQU8sT0FBTyxNQUFNLFlBQVksQ0FBQztBQUVqQyxJQUFNLG1CQUFtQixHQUFHLFVBQUMsSUFBcUI7SUFDaEQsT0FBTztRQUNMLE9BQU8sRUFBRSxTQUFTO1FBQ2xCLFFBQVEsRUFBRSxTQUFTO1FBQ25CLE9BQU8sRUFBRSxTQUFTO1FBQ2xCLE1BQU0sRUFBRSxTQUFTO1FBQ2pCLE9BQU8sRUFBRSxTQUFTO1FBQ2xCLFFBQVEsRUFBRSxTQUFTO1FBQ25CLE1BQU0sRUFBRSxTQUFTO1FBQ2pCLE1BQU0sRUFBRSxTQUFTO1FBQ2pCLE1BQU0sRUFBRSxTQUFTO1FBQ2pCLFNBQVMsRUFBRSxTQUFTO1FBQ3BCLFFBQVEsRUFBRSxTQUFTO1FBQ25CLE9BQU8sRUFBRSxTQUFTO0tBQ25CLENBQUMsSUFBSSxDQUFDLENBQUM7QUFDVixDQUFDLENBQUM7QUFFRixJQUFNLGlCQUFpQixHQUFHLFVBQUMsSUFBcUIsRUFBRSxNQUFjO0lBQzlELE9BQU87UUFDTCxPQUFPLEVBQUUscUJBQXFCLEdBQUcsTUFBTSxDQUFDLE9BQU8sQ0FBQyxHQUFHLEVBQUUsRUFBRSxDQUFDO1FBQ3hELFFBQVEsRUFBRSxlQUFlLEdBQUcsTUFBTSxDQUFDLE9BQU8sQ0FBQyxHQUFHLEVBQUUsRUFBRSxDQUFDO1FBQ25ELE9BQU8sRUFBRSxzQkFBc0IsR0FBRyxNQUFNLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRSxFQUFFLENBQUM7UUFDekQsU0FBUyxFQUFFLHNCQUFzQixHQUFHLE1BQU0sQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFFLEVBQUUsQ0FBQztRQUMzRCxNQUFNLEVBQUUscUJBQXFCLEdBQUcsTUFBTSxDQUFDLE9BQU8sQ0FBQyxHQUFHLEVBQUUsRUFBRSxDQUFDO1FBQ3ZELE9BQU8sRUFBRSw4QkFBOEIsR0FBRyxNQUFNO1FBQ2hELFFBQVEsRUFBRSx1QkFBdUIsR0FBRyxNQUFNO1FBQzFDLE1BQU0sRUFBRSxxQkFBcUIsR0FBRyxNQUFNO1FBQ3RDLE1BQU0sRUFBRSxxQkFBcUIsR0FBRyxNQUFNO1FBQ3RDLE1BQU0sRUFBRSwyQkFBb0IsTUFBTSxNQUFHO1FBQ3JDLFFBQVEsRUFBRSxtQ0FBbUMsR0FBRyxNQUFNO1FBQ3RELE9BQU8sRUFBRSxNQUFNO0tBQ2hCLENBQUMsSUFBSSxDQUFDLENBQUM7QUFDVixDQUFDLENBQUM7QUFzQkYsSUFBTSxTQUFTLEdBQUcsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUM1QixVQUFDLEVBQWdDO1FBQTlCLEtBQUssV0FBQSxFQUFtQixJQUFJLHFCQUFBO0lBQU8sT0FBQSxDQUFDO1FBQ3JDLEtBQUssRUFBRSxLQUFLLENBQUMsZ0JBQWdCLENBQUMsZ0JBQWdCO1FBQzlDLFNBQVMsRUFBRTtZQUNULEtBQUssRUFBRSxtQkFBbUIsQ0FBQyxJQUFJLENBQUM7U0FDakM7UUFDRCxVQUFVLEVBQUU7WUFDVixLQUFLLEVBQUUsbUJBQW1CLENBQUMsSUFBSSxDQUFDO1NBQ2pDO0tBQ0YsQ0FBQztBQVJvQyxDQVFwQyxDQUNILENBQUM7QUFFRixNQUFNLENBQUMsSUFBTSxhQUFhLEdBQUcsS0FBSyxDQUFDLFVBQVUsQ0FHM0MsVUFBQyxFQUErRCxFQUFFLEdBQUc7SUFBbEUsSUFBaUIsSUFBSSxxQkFBQSxFQUFFLE1BQU0sWUFBQSxFQUFLLEtBQUssY0FBekMsNkJBQTJDLENBQUY7SUFDMUMsT0FBTyxDQUNMLEtBQUMsU0FBUyxhQUNSLEdBQUcsRUFBRSxHQUFHLEVBQ1IsS0FBSyxFQUFDLFNBQVMsRUFDZixlQUFlLEVBQUUsSUFBSSxFQUNyQixJQUFJLEVBQUUsaUJBQWlCLENBQUMsSUFBSSxFQUFFLE1BQU0sQ0FBQyxJQUNqQyxLQUFLLGNBRVQsS0FBQyxPQUFPLElBQUMsR0FBRyxFQUFFLDBCQUFtQixJQUFJLFNBQU0sR0FBSSxJQUNyQyxDQUNiLENBQUM7QUFDSixDQUFDLENBQUMsQ0FBQztBQUVILGVBQWUsYUFBYSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBzdHlsZWQgZnJvbSAnc3R5bGVkLWNvbXBvbmVudHMnO1xuaW1wb3J0IHsgQmFzZVByb3BzIH0gZnJvbSAnLi4vLi4vdHlwZXMnO1xuaW1wb3J0IExpbmsgZnJvbSAnLi4vbGluay9saW5rJztcbmltcG9ydCBTdmdJY29uIGZyb20gJy4vc3ZnLWljb24nO1xuXG5jb25zdCBnZXRTb2NpYWxNZWRpYUNvbG9yID0gKHR5cGU6IFNvY2lhbE1lZGlhVHlwZSkgPT4ge1xuICByZXR1cm4ge1xuICAgIGtleWJhc2U6ICcjRUE3NzNBJyxcbiAgICB0ZWxlZ3JhbTogJyMwMDg4Q0MnLFxuICAgIHR3aXR0ZXI6ICcjMURBMUYyJyxcbiAgICBnaXRodWI6ICcjMzMzMzMzJyxcbiAgICB5b3V0dWJlOiAnI0ZGMDAwMCcsXG4gICAgZmFjZWJvb2s6ICcjNDI2N0IyJyxcbiAgICBtZWRpdW06ICcjMDBBQjZDJyxcbiAgICByZWRkaXQ6ICcjRkY0NTAwJyxcbiAgICB3ZWNoYXQ6ICcjN0JCMzJFJyxcbiAgICB0d2l0dGVyX3g6ICcjMGYxNDE5JyxcbiAgICBsaW5rZWRpbjogJyMwYTY2YzInLFxuICAgIHdlYnNpdGU6ICcjQkFCQkJGJ1xuICB9W3R5cGVdO1xufTtcblxuY29uc3QgZ2V0U29jaWFsTWVkaWFVcmwgPSAodHlwZTogU29jaWFsTWVkaWFUeXBlLCB1c2VySWQ6IHN0cmluZykgPT4ge1xuICByZXR1cm4ge1xuICAgIGtleWJhc2U6ICdodHRwczovL2tleWJhc2UuaW8vJyArIHVzZXJJZC5yZXBsYWNlKCdAJywgJycpLFxuICAgIHRlbGVncmFtOiAnaHR0cHM6Ly90Lm1lLycgKyB1c2VySWQucmVwbGFjZSgnQCcsICcnKSxcbiAgICB0d2l0dGVyOiAnaHR0cHM6Ly90d2l0dGVyLmNvbS8nICsgdXNlcklkLnJlcGxhY2UoJ0AnLCAnJyksXG4gICAgdHdpdHRlcl94OiAnaHR0cHM6Ly90d2l0dGVyLmNvbS8nICsgdXNlcklkLnJlcGxhY2UoJ0AnLCAnJyksXG4gICAgZ2l0aHViOiAnaHR0cHM6Ly9naXRodWIuY29tLycgKyB1c2VySWQucmVwbGFjZSgnQCcsICcnKSxcbiAgICB5b3V0dWJlOiAnaHR0cHM6Ly95b3V0dWJlLmNvbS9jaGFubmVsLycgKyB1c2VySWQsXG4gICAgZmFjZWJvb2s6ICdodHRwczovL2ZhY2Vib29rLmNvbS8nICsgdXNlcklkLFxuICAgIG1lZGl1bTogJ2h0dHBzOi8vbWVkaXVtLmNvbS8nICsgdXNlcklkLFxuICAgIHJlZGRpdDogJ2h0dHBzOi8vcmVkZGl0LmNvbS8nICsgdXNlcklkLFxuICAgIHdlY2hhdDogYHdlaXhpbjovL2RsL2NoYXQ/JHt1c2VySWR9L2AsXG4gICAgbGlua2VkaW46ICdodHRwczovL3d3dy5saW5rZWRpbi5jb20vY29tcGFueS8nICsgdXNlcklkLFxuICAgIHdlYnNpdGU6IHVzZXJJZFxuICB9W3R5cGVdO1xufTtcblxuZXhwb3J0IHR5cGUgU29jaWFsTWVkaWFUeXBlID1cbiAgfCAna2V5YmFzZSdcbiAgfCAndGVsZWdyYW0nXG4gIHwgJ3R3aXR0ZXInXG4gIHwgJ3R3aXR0ZXJfeCdcbiAgfCAnZ2l0aHViJ1xuICB8ICd5b3V0dWJlJ1xuICB8ICdmYWNlYm9vaydcbiAgfCAnbWVkaXVtJ1xuICB8ICdyZWRkaXQnXG4gIHwgJ3dlY2hhdCdcbiAgfCAnbGlua2VkaW4nXG4gIHwgJ3dlYnNpdGUnO1xuXG4vKiBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgKi9cbmV4cG9ydCBpbnRlcmZhY2UgU3ZnSWNvblNvY2lhbFByb3BzIGV4dGVuZHMgQmFzZVByb3BzIHtcbiAgc29jaWFsTWVkaWFUeXBlOiBTb2NpYWxNZWRpYVR5cGU7XG4gIHVzZXJJZDogc3RyaW5nO1xufVxuXG5jb25zdCBDb250YWluZXIgPSBzdHlsZWQoTGluayk8T21pdDxTdmdJY29uU29jaWFsUHJvcHMsICd1c2VySWQnPj4oXG4gICh7IHRoZW1lLCBzb2NpYWxNZWRpYVR5cGU6IHR5cGUgfSkgPT4gKHtcbiAgICBjb2xvcjogdGhlbWUuc3R5bGVndWlkZUNvbG9ycy5jb250ZW50U2Vjb25kYXJ5LFxuICAgICcmOmhvdmVyJzoge1xuICAgICAgY29sb3I6IGdldFNvY2lhbE1lZGlhQ29sb3IodHlwZSksXG4gICAgfSxcbiAgICAnJjphY3RpdmUnOiB7XG4gICAgICBjb2xvcjogZ2V0U29jaWFsTWVkaWFDb2xvcih0eXBlKSxcbiAgICB9LFxuICB9KVxuKTtcblxuZXhwb3J0IGNvbnN0IFN2Z0ljb25Tb2NpYWwgPSBSZWFjdC5mb3J3YXJkUmVmPFxuICBIVE1MQW5jaG9yRWxlbWVudCxcbiAgU3ZnSWNvblNvY2lhbFByb3BzXG4+KCh7IHNvY2lhbE1lZGlhVHlwZTogdHlwZSwgdXNlcklkLCAuLi5wcm9wcyB9OiBTdmdJY29uU29jaWFsUHJvcHMsIHJlZikgPT4ge1xuICByZXR1cm4gKFxuICAgIDxDb250YWluZXJcbiAgICAgIHJlZj17cmVmfVxuICAgICAgY29sb3I9XCJpbmhlcml0XCJcbiAgICAgIHNvY2lhbE1lZGlhVHlwZT17dHlwZX1cbiAgICAgIGhyZWY9e2dldFNvY2lhbE1lZGlhVXJsKHR5cGUsIHVzZXJJZCl9XG4gICAgICB7Li4ucHJvcHN9XG4gICAgPlxuICAgICAgPFN2Z0ljb24gc3JjPXtgYXNzZXRzL2ljb25zL2ljLSR7dHlwZX0uc3ZnYH0gLz5cbiAgICA8L0NvbnRhaW5lcj5cbiAgKTtcbn0pO1xuXG5leHBvcnQgZGVmYXVsdCBTdmdJY29uU29jaWFsO1xuIl19