import { __assign, __rest } from "tslib";
import { jsx as _jsx } from "react/jsx-runtime";
import React from 'react';
import styled from 'styled-components';
import Link from '../link/link';
import SvgIcon from './svg-icon';
var getSocialMediaColor = function (type) {
    return {
        keybase: '#EA773A',
        telegram: '#0088CC',
        twitter: '#1DA1F2',
        github: '#333333',
        youtube: '#FF0000',
        facebook: '#4267B2',
        medium: '#00AB6C',
        reddit: '#FF4500',
        wechat: '#7BB32E',
        x: '#0f1419',
        linkedin: '#0a66c2',
        website: '#BABBBF'
    }[type];
};
var getSocialMediaUrl = function (type, userId) {
    return {
        keybase: 'https://keybase.io/' + userId.replace('@', ''),
        telegram: 'https://t.me/' + userId.replace('@', ''),
        twitter: 'https://twitter.com/' + userId.replace('@', ''),
        x: 'https://twitter.com/' + userId.replace('@', ''),
        github: 'https://github.com/' + userId.replace('@', ''),
        youtube: 'https://youtube.com/channel/' + userId,
        facebook: 'https://facebook.com/' + userId,
        medium: 'https://medium.com/' + userId,
        reddit: 'https://reddit.com/' + userId,
        wechat: "weixin://dl/chat?".concat(userId, "/"),
        linkedin: 'https://www.linkedin.com/company/' + userId,
        website: userId
    }[type];
};
var Container = styled(Link)(function (_a) {
    var theme = _a.theme, type = _a.socialMediaType;
    return ({
        color: theme.styleguideColors.contentSecondary,
        '&:hover': {
            color: getSocialMediaColor(type),
        },
        '&:active': {
            color: getSocialMediaColor(type),
        },
    });
});
export var SvgIconSocial = React.forwardRef(function (_a, ref) {
    var type = _a.socialMediaType, userId = _a.userId, props = __rest(_a, ["socialMediaType", "userId"]);
    return (_jsx(Container, __assign({ ref: ref, color: "inherit", socialMediaType: type, href: getSocialMediaUrl(type, userId) }, props, { children: _jsx(SvgIcon, { src: "assets/icons/ic-".concat(type, ".svg") }) })));
});
export default SvgIconSocial;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3ZnLWljb24tc29jaWFsLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2xpYi9jb21wb25lbnRzL3N2Zy1pY29uL3N2Zy1pY29uLXNvY2lhbC50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxPQUFPLEtBQUssTUFBTSxPQUFPLENBQUM7QUFDMUIsT0FBTyxNQUFNLE1BQU0sbUJBQW1CLENBQUM7QUFFdkMsT0FBTyxJQUFJLE1BQU0sY0FBYyxDQUFDO0FBQ2hDLE9BQU8sT0FBTyxNQUFNLFlBQVksQ0FBQztBQUVqQyxJQUFNLG1CQUFtQixHQUFHLFVBQUMsSUFBcUI7SUFDaEQsT0FBTztRQUNMLE9BQU8sRUFBRSxTQUFTO1FBQ2xCLFFBQVEsRUFBRSxTQUFTO1FBQ25CLE9BQU8sRUFBRSxTQUFTO1FBQ2xCLE1BQU0sRUFBRSxTQUFTO1FBQ2pCLE9BQU8sRUFBRSxTQUFTO1FBQ2xCLFFBQVEsRUFBRSxTQUFTO1FBQ25CLE1BQU0sRUFBRSxTQUFTO1FBQ2pCLE1BQU0sRUFBRSxTQUFTO1FBQ2pCLE1BQU0sRUFBRSxTQUFTO1FBQ2pCLENBQUMsRUFBRSxTQUFTO1FBQ1osUUFBUSxFQUFFLFNBQVM7UUFDbkIsT0FBTyxFQUFFLFNBQVM7S0FDbkIsQ0FBQyxJQUFJLENBQUMsQ0FBQztBQUNWLENBQUMsQ0FBQztBQUVGLElBQU0saUJBQWlCLEdBQUcsVUFBQyxJQUFxQixFQUFFLE1BQWM7SUFDOUQsT0FBTztRQUNMLE9BQU8sRUFBRSxxQkFBcUIsR0FBRyxNQUFNLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRSxFQUFFLENBQUM7UUFDeEQsUUFBUSxFQUFFLGVBQWUsR0FBRyxNQUFNLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRSxFQUFFLENBQUM7UUFDbkQsT0FBTyxFQUFFLHNCQUFzQixHQUFHLE1BQU0sQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFFLEVBQUUsQ0FBQztRQUN6RCxDQUFDLEVBQUUsc0JBQXNCLEdBQUcsTUFBTSxDQUFDLE9BQU8sQ0FBQyxHQUFHLEVBQUUsRUFBRSxDQUFDO1FBQ25ELE1BQU0sRUFBRSxxQkFBcUIsR0FBRyxNQUFNLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRSxFQUFFLENBQUM7UUFDdkQsT0FBTyxFQUFFLDhCQUE4QixHQUFHLE1BQU07UUFDaEQsUUFBUSxFQUFFLHVCQUF1QixHQUFHLE1BQU07UUFDMUMsTUFBTSxFQUFFLHFCQUFxQixHQUFHLE1BQU07UUFDdEMsTUFBTSxFQUFFLHFCQUFxQixHQUFHLE1BQU07UUFDdEMsTUFBTSxFQUFFLDJCQUFvQixNQUFNLE1BQUc7UUFDckMsUUFBUSxFQUFFLG1DQUFtQyxHQUFHLE1BQU07UUFDdEQsT0FBTyxFQUFFLE1BQU07S0FDaEIsQ0FBQyxJQUFJLENBQUMsQ0FBQztBQUNWLENBQUMsQ0FBQztBQXNCRixJQUFNLFNBQVMsR0FBRyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQzVCLFVBQUMsRUFBZ0M7UUFBOUIsS0FBSyxXQUFBLEVBQW1CLElBQUkscUJBQUE7SUFBTyxPQUFBLENBQUM7UUFDckMsS0FBSyxFQUFFLEtBQUssQ0FBQyxnQkFBZ0IsQ0FBQyxnQkFBZ0I7UUFDOUMsU0FBUyxFQUFFO1lBQ1QsS0FBSyxFQUFFLG1CQUFtQixDQUFDLElBQUksQ0FBQztTQUNqQztRQUNELFVBQVUsRUFBRTtZQUNWLEtBQUssRUFBRSxtQkFBbUIsQ0FBQyxJQUFJLENBQUM7U0FDakM7S0FDRixDQUFDO0FBUm9DLENBUXBDLENBQ0gsQ0FBQztBQUVGLE1BQU0sQ0FBQyxJQUFNLGFBQWEsR0FBRyxLQUFLLENBQUMsVUFBVSxDQUczQyxVQUFDLEVBQStELEVBQUUsR0FBRztJQUFsRSxJQUFpQixJQUFJLHFCQUFBLEVBQUUsTUFBTSxZQUFBLEVBQUssS0FBSyxjQUF6Qyw2QkFBMkMsQ0FBRjtJQUMxQyxPQUFPLENBQ0wsS0FBQyxTQUFTLGFBQ1IsR0FBRyxFQUFFLEdBQUcsRUFDUixLQUFLLEVBQUMsU0FBUyxFQUNmLGVBQWUsRUFBRSxJQUFJLEVBQ3JCLElBQUksRUFBRSxpQkFBaUIsQ0FBQyxJQUFJLEVBQUUsTUFBTSxDQUFDLElBQ2pDLEtBQUssY0FFVCxLQUFDLE9BQU8sSUFBQyxHQUFHLEVBQUUsMEJBQW1CLElBQUksU0FBTSxHQUFJLElBQ3JDLENBQ2IsQ0FBQztBQUNKLENBQUMsQ0FBQyxDQUFDO0FBRUgsZUFBZSxhQUFhLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHN0eWxlZCBmcm9tICdzdHlsZWQtY29tcG9uZW50cyc7XG5pbXBvcnQgeyBCYXNlUHJvcHMgfSBmcm9tICcuLi8uLi90eXBlcyc7XG5pbXBvcnQgTGluayBmcm9tICcuLi9saW5rL2xpbmsnO1xuaW1wb3J0IFN2Z0ljb24gZnJvbSAnLi9zdmctaWNvbic7XG5cbmNvbnN0IGdldFNvY2lhbE1lZGlhQ29sb3IgPSAodHlwZTogU29jaWFsTWVkaWFUeXBlKSA9PiB7XG4gIHJldHVybiB7XG4gICAga2V5YmFzZTogJyNFQTc3M0EnLFxuICAgIHRlbGVncmFtOiAnIzAwODhDQycsXG4gICAgdHdpdHRlcjogJyMxREExRjInLFxuICAgIGdpdGh1YjogJyMzMzMzMzMnLFxuICAgIHlvdXR1YmU6ICcjRkYwMDAwJyxcbiAgICBmYWNlYm9vazogJyM0MjY3QjInLFxuICAgIG1lZGl1bTogJyMwMEFCNkMnLFxuICAgIHJlZGRpdDogJyNGRjQ1MDAnLFxuICAgIHdlY2hhdDogJyM3QkIzMkUnLFxuICAgIHg6ICcjMGYxNDE5JyxcbiAgICBsaW5rZWRpbjogJyMwYTY2YzInLFxuICAgIHdlYnNpdGU6ICcjQkFCQkJGJ1xuICB9W3R5cGVdO1xufTtcblxuY29uc3QgZ2V0U29jaWFsTWVkaWFVcmwgPSAodHlwZTogU29jaWFsTWVkaWFUeXBlLCB1c2VySWQ6IHN0cmluZykgPT4ge1xuICByZXR1cm4ge1xuICAgIGtleWJhc2U6ICdodHRwczovL2tleWJhc2UuaW8vJyArIHVzZXJJZC5yZXBsYWNlKCdAJywgJycpLFxuICAgIHRlbGVncmFtOiAnaHR0cHM6Ly90Lm1lLycgKyB1c2VySWQucmVwbGFjZSgnQCcsICcnKSxcbiAgICB0d2l0dGVyOiAnaHR0cHM6Ly90d2l0dGVyLmNvbS8nICsgdXNlcklkLnJlcGxhY2UoJ0AnLCAnJyksXG4gICAgeDogJ2h0dHBzOi8vdHdpdHRlci5jb20vJyArIHVzZXJJZC5yZXBsYWNlKCdAJywgJycpLFxuICAgIGdpdGh1YjogJ2h0dHBzOi8vZ2l0aHViLmNvbS8nICsgdXNlcklkLnJlcGxhY2UoJ0AnLCAnJyksXG4gICAgeW91dHViZTogJ2h0dHBzOi8veW91dHViZS5jb20vY2hhbm5lbC8nICsgdXNlcklkLFxuICAgIGZhY2Vib29rOiAnaHR0cHM6Ly9mYWNlYm9vay5jb20vJyArIHVzZXJJZCxcbiAgICBtZWRpdW06ICdodHRwczovL21lZGl1bS5jb20vJyArIHVzZXJJZCxcbiAgICByZWRkaXQ6ICdodHRwczovL3JlZGRpdC5jb20vJyArIHVzZXJJZCxcbiAgICB3ZWNoYXQ6IGB3ZWl4aW46Ly9kbC9jaGF0PyR7dXNlcklkfS9gLFxuICAgIGxpbmtlZGluOiAnaHR0cHM6Ly93d3cubGlua2VkaW4uY29tL2NvbXBhbnkvJyArIHVzZXJJZCxcbiAgICB3ZWJzaXRlOiB1c2VySWRcbiAgfVt0eXBlXTtcbn07XG5cbmV4cG9ydCB0eXBlIFNvY2lhbE1lZGlhVHlwZSA9XG4gIHwgJ2tleWJhc2UnXG4gIHwgJ3RlbGVncmFtJ1xuICB8ICd0d2l0dGVyJ1xuICB8ICd4J1xuICB8ICdnaXRodWInXG4gIHwgJ3lvdXR1YmUnXG4gIHwgJ2ZhY2Vib29rJ1xuICB8ICdtZWRpdW0nXG4gIHwgJ3JlZGRpdCdcbiAgfCAnd2VjaGF0J1xuICB8ICdsaW5rZWRpbidcbiAgfCAnd2Vic2l0ZSc7XG5cbi8qIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSAqL1xuZXhwb3J0IGludGVyZmFjZSBTdmdJY29uU29jaWFsUHJvcHMgZXh0ZW5kcyBCYXNlUHJvcHMge1xuICBzb2NpYWxNZWRpYVR5cGU6IFNvY2lhbE1lZGlhVHlwZTtcbiAgdXNlcklkOiBzdHJpbmc7XG59XG5cbmNvbnN0IENvbnRhaW5lciA9IHN0eWxlZChMaW5rKTxPbWl0PFN2Z0ljb25Tb2NpYWxQcm9wcywgJ3VzZXJJZCc+PihcbiAgKHsgdGhlbWUsIHNvY2lhbE1lZGlhVHlwZTogdHlwZSB9KSA9PiAoe1xuICAgIGNvbG9yOiB0aGVtZS5zdHlsZWd1aWRlQ29sb3JzLmNvbnRlbnRTZWNvbmRhcnksXG4gICAgJyY6aG92ZXInOiB7XG4gICAgICBjb2xvcjogZ2V0U29jaWFsTWVkaWFDb2xvcih0eXBlKSxcbiAgICB9LFxuICAgICcmOmFjdGl2ZSc6IHtcbiAgICAgIGNvbG9yOiBnZXRTb2NpYWxNZWRpYUNvbG9yKHR5cGUpLFxuICAgIH0sXG4gIH0pXG4pO1xuXG5leHBvcnQgY29uc3QgU3ZnSWNvblNvY2lhbCA9IFJlYWN0LmZvcndhcmRSZWY8XG4gIEhUTUxBbmNob3JFbGVtZW50LFxuICBTdmdJY29uU29jaWFsUHJvcHNcbj4oKHsgc29jaWFsTWVkaWFUeXBlOiB0eXBlLCB1c2VySWQsIC4uLnByb3BzIH06IFN2Z0ljb25Tb2NpYWxQcm9wcywgcmVmKSA9PiB7XG4gIHJldHVybiAoXG4gICAgPENvbnRhaW5lclxuICAgICAgcmVmPXtyZWZ9XG4gICAgICBjb2xvcj1cImluaGVyaXRcIlxuICAgICAgc29jaWFsTWVkaWFUeXBlPXt0eXBlfVxuICAgICAgaHJlZj17Z2V0U29jaWFsTWVkaWFVcmwodHlwZSwgdXNlcklkKX1cbiAgICAgIHsuLi5wcm9wc31cbiAgICA+XG4gICAgICA8U3ZnSWNvbiBzcmM9e2Bhc3NldHMvaWNvbnMvaWMtJHt0eXBlfS5zdmdgfSAvPlxuICAgIDwvQ29udGFpbmVyPlxuICApO1xufSk7XG5cbmV4cG9ydCBkZWZhdWx0IFN2Z0ljb25Tb2NpYWw7XG4iXX0=