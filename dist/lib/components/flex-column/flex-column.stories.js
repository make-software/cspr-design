import { __assign, __makeTemplateObject } from "tslib";
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import FlexColumn from './flex-column';
import FlexBox from '../flex-box/flex-box';
import FlexRow from '../flex-row/flex-row';
import styled from 'styled-components';
export default {
    component: FlexColumn,
    title: 'FlexColumn',
    args: {
        itemsSpacing: 10,
        direction: 'column',
        justify: 'center',
        align: 'center',
        grow: 10,
    },
};
var StyledBlock = styled.div(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  height: 100px;\n  width: 100px;\n  border: 1px solid #0a0a0a;\n  font-weight: bolder;\n  color: #fff;\n  :nth-child(1n) {\n    background: black;\n  }\n  :nth-child(2n) {\n    background: red;\n  }\n  :nth-child(3n) {\n    background: green;\n  }\n"], ["\n  height: 100px;\n  width: 100px;\n  border: 1px solid #0a0a0a;\n  font-weight: bolder;\n  color: #fff;\n  :nth-child(1n) {\n    background: black;\n  }\n  :nth-child(2n) {\n    background: red;\n  }\n  :nth-child(3n) {\n    background: green;\n  }\n"])));
var Block = function () { return (_jsxs(FlexBox, { children: [_jsx(StyledBlock, { children: "Block 1" }), _jsx(StyledBlock, { children: "Block 2" }), _jsx(StyledBlock, { children: "Block 3" })] })); };
var Template = function (args) { return (_jsxs(FlexRow, __assign({ itemsSpacing: 30 }, { children: [_jsxs(FlexColumn, __assign({ itemsSpacing: 10 }, { children: [_jsx(Block, {}), _jsx(Block, {})] })), _jsx(FlexColumn, __assign({}, args, { children: _jsx(Block, {}) }))] }))); };
export var Primary = Template.bind({});
var templateObject_1;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmxleC1jb2x1bW4uc3Rvcmllcy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9saWIvY29tcG9uZW50cy9mbGV4LWNvbHVtbi9mbGV4LWNvbHVtbi5zdG9yaWVzLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUVBLE9BQU8sVUFBVSxNQUFNLGVBQWUsQ0FBQztBQUN2QyxPQUFPLE9BQU8sTUFBTSxzQkFBc0IsQ0FBQztBQUMzQyxPQUFPLE9BQU8sTUFBTSxzQkFBc0IsQ0FBQztBQUMzQyxPQUFPLE1BQU0sTUFBTSxtQkFBbUIsQ0FBQztBQUV2QyxlQUFlO0lBQ1gsU0FBUyxFQUFFLFVBQVU7SUFDckIsS0FBSyxFQUFFLFlBQVk7SUFDbkIsSUFBSSxFQUFFO1FBQ0YsWUFBWSxFQUFFLEVBQUU7UUFDaEIsU0FBUyxFQUFFLFFBQVE7UUFDbkIsT0FBTyxFQUFFLFFBQVE7UUFDakIsS0FBSyxFQUFFLFFBQVE7UUFDZixJQUFJLEVBQUUsRUFBRTtLQUNYO0NBQ2dDLENBQUM7QUFHdEMsSUFBTSxXQUFXLEdBQUcsTUFBTSxDQUFDLEdBQUcsaVVBQUEsOFBBZTdCLElBQUEsQ0FBQTtBQUVELElBQU0sS0FBSyxHQUFHLGNBQU0sT0FBQSxDQUNoQixNQUFDLE9BQU8sZUFDSixLQUFDLFdBQVcsMEJBQXNCLEVBQ2xDLEtBQUMsV0FBVywwQkFBc0IsRUFDbEMsS0FBQyxXQUFXLDBCQUFzQixJQUM1QixDQUNiLEVBTm1CLENBTW5CLENBQUM7QUFFRixJQUFNLFFBQVEsR0FBc0MsVUFBQyxJQUFJLElBQUssT0FBQSxDQUMxRCxNQUFDLE9BQU8sYUFBQyxZQUFZLEVBQUUsRUFBRSxpQkFDckIsTUFBQyxVQUFVLGFBQUMsWUFBWSxFQUFFLEVBQUUsaUJBQ3hCLEtBQUMsS0FBSyxLQUFFLEVBQ1IsS0FBQyxLQUFLLEtBQUUsS0FDQyxFQUNiLEtBQUMsVUFBVSxlQUFLLElBQUksY0FDaEIsS0FBQyxLQUFLLEtBQUUsSUFDQyxLQUNQLENBQ2IsRUFWNkQsQ0FVN0QsQ0FBQztBQUVGLE1BQU0sQ0FBQyxJQUFNLE9BQU8sR0FBRyxRQUFRLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IENvbXBvbmVudE1ldGEsIENvbXBvbmVudFN0b3J5IH0gZnJvbSAnQHN0b3J5Ym9vay9yZWFjdCc7XG5pbXBvcnQgRmxleENvbHVtbiBmcm9tICcuL2ZsZXgtY29sdW1uJztcbmltcG9ydCBGbGV4Qm94IGZyb20gJy4uL2ZsZXgtYm94L2ZsZXgtYm94JztcbmltcG9ydCBGbGV4Um93IGZyb20gJy4uL2ZsZXgtcm93L2ZsZXgtcm93JztcbmltcG9ydCBzdHlsZWQgZnJvbSAnc3R5bGVkLWNvbXBvbmVudHMnO1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gICAgY29tcG9uZW50OiBGbGV4Q29sdW1uLFxuICAgIHRpdGxlOiAnRmxleENvbHVtbicsXG4gICAgYXJnczoge1xuICAgICAgICBpdGVtc1NwYWNpbmc6IDEwLFxuICAgICAgICBkaXJlY3Rpb246ICdjb2x1bW4nLFxuICAgICAgICBqdXN0aWZ5OiAnY2VudGVyJyxcbiAgICAgICAgYWxpZ246ICdjZW50ZXInLFxuICAgICAgICBncm93OiAxMCxcbiAgICB9LFxufSBhcyBDb21wb25lbnRNZXRhPHR5cGVvZiBGbGV4Q29sdW1uPjtcblxuXG5jb25zdCBTdHlsZWRCbG9jayA9IHN0eWxlZC5kaXZgXG4gIGhlaWdodDogMTAwcHg7XG4gIHdpZHRoOiAxMDBweDtcbiAgYm9yZGVyOiAxcHggc29saWQgIzBhMGEwYTtcbiAgZm9udC13ZWlnaHQ6IGJvbGRlcjtcbiAgY29sb3I6ICNmZmY7XG4gIDpudGgtY2hpbGQoMW4pIHtcbiAgICBiYWNrZ3JvdW5kOiBibGFjaztcbiAgfVxuICA6bnRoLWNoaWxkKDJuKSB7XG4gICAgYmFja2dyb3VuZDogcmVkO1xuICB9XG4gIDpudGgtY2hpbGQoM24pIHtcbiAgICBiYWNrZ3JvdW5kOiBncmVlbjtcbiAgfVxuYFxuXG5jb25zdCBCbG9jayA9ICgpID0+IChcbiAgICA8RmxleEJveD5cbiAgICAgICAgPFN0eWxlZEJsb2NrPkJsb2NrIDE8L1N0eWxlZEJsb2NrPlxuICAgICAgICA8U3R5bGVkQmxvY2s+QmxvY2sgMjwvU3R5bGVkQmxvY2s+XG4gICAgICAgIDxTdHlsZWRCbG9jaz5CbG9jayAzPC9TdHlsZWRCbG9jaz5cbiAgICA8L0ZsZXhCb3g+XG4pO1xuXG5jb25zdCBUZW1wbGF0ZTogQ29tcG9uZW50U3Rvcnk8dHlwZW9mIEZsZXhDb2x1bW4+ID0gKGFyZ3MpID0+IChcbiAgICA8RmxleFJvdyBpdGVtc1NwYWNpbmc9ezMwfT5cbiAgICAgICAgPEZsZXhDb2x1bW4gaXRlbXNTcGFjaW5nPXsxMH0+XG4gICAgICAgICAgICA8QmxvY2svPlxuICAgICAgICAgICAgPEJsb2NrLz5cbiAgICAgICAgPC9GbGV4Q29sdW1uPlxuICAgICAgICA8RmxleENvbHVtbiB7Li4uYXJnc30+XG4gICAgICAgICAgICA8QmxvY2svPlxuICAgICAgICA8L0ZsZXhDb2x1bW4+XG4gICAgPC9GbGV4Um93PlxuKTtcblxuZXhwb3J0IGNvbnN0IFByaW1hcnkgPSBUZW1wbGF0ZS5iaW5kKHt9KTtcbiJdfQ==