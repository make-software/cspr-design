import { __assign, __rest } from "tslib";
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import styled from 'styled-components';
import FormField, { FormFieldStatus } from '../form-field/form-field';
import SvgIcon from '../svg-icon/svg-icon';
import { LabelFontSize } from "../input/input";
var getThemeColorByError = function (error) {
    if (!error) {
        return 'fillSecondary';
    }
    return 'contentRed';
};
var StyledTextarea = styled.textarea(function (_a) {
    var theme = _a.theme;
    return ({
        height: 124,
        borderRadius: theme.borderRadius.base,
        width: '100%',
        padding: 0,
        color: 'inherit',
        background: 'inherit',
        fontFamily: 'inherit',
        fontSize: 'inherit',
        border: 'none',
        '&::placeholder': {
            color: theme.styleguideColors.contentSecondary,
        },
        resize: 'none'
    });
});
var TextareaContainer = styled('div')(function (_a) {
    var theme = _a.theme, disabled = _a.disabled, error = _a.error;
    return (__assign(__assign({ display: 'flex', flexDirection: 'row', justifyContent: 'space-between', alignItems: 'center', padding: '16px', borderRadius: theme.borderRadius.base, color: theme.styleguideColors.contentPrimary, background: theme.styleguideColors.fillSecondary, fontFamily: theme.typography.fontFamily.primary, fontSize: '0.875rem', path: {
            fill: theme.styleguideColors[getThemeColorByError(error)],
        } }, (error && {
        border: "1px solid ".concat(theme.styleguideColors.borderRed),
    })), (disabled && {
        opacity: 0.5,
        color: theme.styleguideColors.contentTertiary,
    })));
});
var SuffixContainer = styled('div')(function (_a) {
    var theme = _a.theme;
    return ({
        marginLeft: 16,
    });
});
export function Textarea(_a) {
    var id = _a.id, className = _a.className, style = _a.style, disabled = _a.disabled, label = _a.label, rightLabel = _a.rightLabel, suffixIcon = _a.suffixIcon, error = _a.error, validationText = _a.validationText, onFocus = _a.onFocus, _b = _a.labelFontSize, labelFontSize = _b === void 0 ? LabelFontSize.default : _b, restProps = __rest(_a, ["id", "className", "style", "disabled", "label", "rightLabel", "suffixIcon", "error", "validationText", "onFocus", "labelFontSize"]);
    var handleFocus = function (event) {
        event.target.select();
        onFocus && onFocus(event);
    };
    if (error) {
        suffixIcon = _jsx(SvgIcon, { src: "assets/icons/ic-error.svg" });
    }
    return (_jsx(FormField, __assign({ id: id, className: className, style: style, label: label, rightLabel: rightLabel, status: error ? FormFieldStatus.Error : undefined, statusText: validationText, disabled: disabled, labelFontSize: labelFontSize }, { children: _jsxs(TextareaContainer, __assign({ error: error }, { children: [_jsx(StyledTextarea, __assign({ title: "", disabled: disabled, onFocus: handleFocus }, restProps)), suffixIcon && _jsx(SuffixContainer, { children: suffixIcon })] })) })));
}
export default Textarea;
//# sourceMappingURL=data:application/json;base64,