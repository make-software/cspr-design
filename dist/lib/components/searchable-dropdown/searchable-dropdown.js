import { __assign } from "tslib";
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { useEffect, useRef, useState } from 'react';
import styled from 'styled-components';
import FlexRow from '../flex-row/flex-row';
import SvgIcon from '../svg-icon/svg-icon';
import UpIcon from '../../assets/icons/ic-arrow-up.svg';
import DownIcon from '../../assets/icons/ic-arrow-down.svg';
import { useClickAway } from '../../hooks/use-click-away';
var StyledDropdown = styled.div(function (_a) {
    var theme = _a.theme, disabled = _a.disabled;
    return (__assign(__assign({ outline: 'none', position: 'relative', borderRadius: theme.borderRadius.base }, (disabled && {
        opacity: '0.5',
        pointerEvents: 'none',
    })), { background: theme.styleguideColors.fillSecondary, ':hover, :active': {
            background: theme.styleguideColors.fillSecondary,
            svg: {
                path: {
                    fill: theme.styleguideColors.fillPrimaryRed,
                },
            },
        } }));
});
var StyledContentRow = styled(FlexRow)(function (_a) {
    var theme = _a.theme, error = _a.error;
    return theme.withMedia({
        width: '100%',
        border: error ? "1px solid ".concat(theme.styleguideColors.contentRed) : 'none',
    });
});
var StyledInput = styled.input(function (_a) {
    var theme = _a.theme, fontSize = _a.fontSize, icon = _a.icon;
    return ({
        lineHeight: '1.5',
        fontSize: fontSize,
        height: '36px',
        borderRadius: theme.borderRadius.base,
        outline: 'none',
        padding: icon ? '0 12px' : '0 16px',
        transition: 'all 200ms ease',
        width: '100%',
        color: theme.styleguideColors.contentPrimary,
        border: 'none',
        background: theme.styleguideColors.fillSecondary,
        ':hover': {
            cursor: 'pointer',
        },
    });
});
var ItemContainer = styled.div(function (_a) {
    var theme = _a.theme, isOpen = _a.isOpen, height = _a.height, fontSize = _a.fontSize, maxHeight = _a.maxHeight;
    return ({
        display: isOpen ? 'block' : 'none',
        borderRadius: theme.borderRadius.base,
        fontSize: fontSize,
        paddingLeft: '6px',
        background: theme.styleguideColors.fillSecondary,
        boxShadow: '0 1px 0 rgba(0, 0, 0, 0.06)',
        marginTop: '4px',
        height: height,
        maxHeight: maxHeight,
        overflowY: 'auto',
        position: 'absolute',
        top: '100%',
        width: '100%',
        zIndex: '1000',
    });
});
var Item = styled.div(function (_a) {
    var theme = _a.theme, selected = _a.selected;
    return ({
        display: 'block',
        cursor: 'pointer',
        padding: '8px 10px',
        color: theme.styleguideColors.contentPrimary,
        ':hover, :active': {
            background: theme.styleguideColors.fillSecondaryBlueHover,
        },
        fontWeight: selected ? 600 : 400,
    });
});
var ArrowSvg = styled(SvgIcon)(function (_a) {
    var theme = _a.theme;
    return ({
        marginRight: '16px',
        path: {
            fill: theme.styleguideColors.contentPrimary,
        },
    });
});
var CustomIcon = styled.div(function (_a) {
    var inLoop = _a.inLoop;
    return ({
        margin: inLoop ? '0 12px 0 0' : '0 0 0 16px',
        display: 'inline',
        position: 'relative',
        bottom: inLoop ? '0' : '1px',
    });
});
export var SearchableDropdown = function (_a) {
    var items = _a.items, value = _a.value, height = _a.height, isError = _a.isError, fontSize = _a.fontSize, maxHeight = _a.maxHeight, onSelect = _a.onSelect, placeholder = _a.placeholder;
    var _b = useState(''), searchedValue = _b[0], setSearchedValue = _b[1];
    var _c = useState(false), isOpen = _c[0], setIsOpen = _c[1];
    var _d = useState(false), rotate = _d[0], setRotate = _d[1];
    var _e = useState(null), icon = _e[0], setIcon = _e[1];
    var inputRef = useRef(null);
    var ref = useClickAway({
        callback: function () {
            setIsOpen(false);
        },
    }).ref;
    useEffect(function () {
        value.icon && setIcon(value.icon);
    }, [value]);
    useEffect(function () {
        if (isOpen === rotate)
            return;
        setRotate(isOpen);
    }, [isOpen]);
    var selectOption = function (option) {
        setSearchedValue('');
        onSelect(option);
        setIsOpen(function (isOpen) { return !isOpen; });
        setIsOpen(!isOpen);
        setIcon(option.icon);
    };
    var handleOpenDropdown = function (e) {
        setIsOpen(true);
    };
    var getDisplayValue = function () {
        if (searchedValue)
            return searchedValue;
        if (value)
            return value.label;
        return '';
    };
    var filterOptionsWithSearchedValue = function (options, searchedValue) {
        return options.filter(function (option) {
            return option.label.toLowerCase().indexOf(searchedValue.toLowerCase()) > -1;
        });
    };
    var searchedItems = filterOptionsWithSearchedValue(items, searchedValue);
    return (_jsxs(StyledDropdown, __assign({ ref: ref }, { children: [_jsx(FlexRow, __assign({ align: "center", justify: "space-between", onClick: handleOpenDropdown }, { children: _jsxs(StyledContentRow, __assign({ justify: 'space-around', align: 'center', error: isError }, { children: [icon && _jsx(CustomIcon, { children: icon }), _jsx(StyledInput, { ref: inputRef, placeholder: placeholder, value: getDisplayValue(), onChange: function (e) {
                                setSearchedValue(e.target.value);
                                onSelect({});
                            }, fontSize: fontSize, icon: Boolean(icon) }), _jsx(ArrowSvg, { src: rotate ? UpIcon : DownIcon })] })) })), _jsx(ItemContainer, __assign({ isOpen: isOpen, height: height, fontSize: fontSize, maxHeight: maxHeight }, { children: searchedItems.map(function (item, index) {
                    return (_jsxs(Item, __assign({ onClick: function () { return selectOption(item); }, selected: item.value === value.value }, { children: [item.icon && _jsx(CustomIcon, __assign({ inLoop: true }, { children: item.icon })), item.label] }), index));
                }) }))] })));
};
export default SearchableDropdown;
//# sourceMappingURL=data:application/json;base64,