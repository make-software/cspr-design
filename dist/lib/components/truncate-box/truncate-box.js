import { __assign } from "tslib";
import { jsx as _jsx } from "react/jsx-runtime";
import React from 'react';
import styled from 'styled-components';
import { matchSize } from '../../utils/match-size';
var getSize = function (size) {
    return matchSize({
        0: 7.8,
        1: 10,
        2: 23,
        3: 35,
        4: 45,
        5: 55,
    }, size);
};
var StyledTruncateBox = styled('div')(function (_a) {
    var _b = _a.size, size = _b === void 0 ? 2 : _b, lineHeight = _a.lineHeight;
    return ({
        display: 'inline-block',
        whiteSpace: 'nowrap',
        overflow: 'hidden',
        textOverflow: 'ellipsis',
        width: '100%',
        maxWidth: "".concat(getSize(size), "em"),
        // fix for Tooltip over Truncated Text in Safari
        '&:after': {
            content: "''",
            display: 'block',
        },
        lineHeight: lineHeight ? matchSize({
            sm: '1.5rem',
            xs: '1.25rem',
        }, lineHeight) : 'unset',
    });
});
export var TruncateBox = React.forwardRef(function (props, ref) { return _jsx(StyledTruncateBox, __assign({ ref: ref }, props)); });
export default TruncateBox;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJ1bmNhdGUtYm94LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2xpYi9jb21wb25lbnRzL3RydW5jYXRlLWJveC90cnVuY2F0ZS1ib3gudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsT0FBTyxLQUFLLE1BQU0sT0FBTyxDQUFDO0FBQzFCLE9BQU8sTUFBTSxNQUFNLG1CQUFtQixDQUFDO0FBR3ZDLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQVFuRCxJQUFNLE9BQU8sR0FBRyxVQUFDLElBQVU7SUFDekIsT0FBQSxTQUFTLENBQ0w7UUFDSSxDQUFDLEVBQUUsR0FBRztRQUNOLENBQUMsRUFBRSxFQUFFO1FBQ0wsQ0FBQyxFQUFFLEVBQUU7UUFDTCxDQUFDLEVBQUUsRUFBRTtRQUNMLENBQUMsRUFBRSxFQUFFO1FBQ0wsQ0FBQyxFQUFFLEVBQUU7S0FDUixFQUNILElBQUksQ0FDTDtBQVZELENBVUMsQ0FBQztBQUVKLElBQU0saUJBQWlCLEdBQUcsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUNyQyxVQUFDLEVBQXdCO1FBQXRCLFlBQVEsRUFBUixJQUFJLG1CQUFHLENBQUMsS0FBQSxFQUFFLFVBQVUsZ0JBQUE7SUFBTyxPQUFBLENBQUM7UUFDN0IsT0FBTyxFQUFFLGNBQWM7UUFDdkIsVUFBVSxFQUFFLFFBQVE7UUFDcEIsUUFBUSxFQUFFLFFBQVE7UUFDbEIsWUFBWSxFQUFFLFVBQVU7UUFDeEIsS0FBSyxFQUFFLE1BQU07UUFDYixRQUFRLEVBQUUsVUFBRyxPQUFPLENBQUMsSUFBSSxDQUFDLE9BQUk7UUFDOUIsZ0RBQWdEO1FBQ2hELFNBQVMsRUFBRTtZQUNULE9BQU8sRUFBRSxJQUFJO1lBQ2IsT0FBTyxFQUFFLE9BQU87U0FDakI7UUFDQyxVQUFVLEVBQUUsVUFBVSxDQUFDLENBQUMsQ0FBQyxTQUFTLENBQzlCO1lBQ0ksRUFBRSxFQUFFLFFBQVE7WUFDWixFQUFFLEVBQUUsU0FBUztTQUNoQixFQUNELFVBQVUsQ0FDYixDQUFDLENBQUMsQ0FBQyxPQUFPO0tBQ2QsQ0FBQztBQW5CNEIsQ0FtQjVCLENBQ0gsQ0FBQztBQUVGLE1BQU0sQ0FBQyxJQUFNLFdBQVcsR0FBRyxLQUFLLENBQUMsVUFBVSxDQUN6QyxVQUFDLEtBQUssRUFBRSxHQUFHLElBQUssT0FBQSxLQUFDLGlCQUFpQixhQUFDLEdBQUcsRUFBRSxHQUFHLElBQU0sS0FBSyxFQUFJLEVBQTFDLENBQTBDLENBQzNELENBQUM7QUFFRixlQUFlLFdBQVcsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ3N0eWxlZC1jb21wb25lbnRzJztcblxuaW1wb3J0IHsgQmFzZVByb3BzLCBTaXplIH0gZnJvbSAnLi4vLi4vdHlwZXMnO1xuaW1wb3J0IHsgbWF0Y2hTaXplIH0gZnJvbSAnLi4vLi4vdXRpbHMvbWF0Y2gtc2l6ZSc7XG5cbi8qIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSAqL1xuZXhwb3J0IGludGVyZmFjZSBUcnVuY2F0ZUJveFByb3BzIGV4dGVuZHMgQmFzZVByb3BzIHtcbiAgc2l6ZT86IFNpemU7XG4gIGxpbmVIZWlnaHQ/OiAneHMnIHwgJ3NtJztcbn1cblxuY29uc3QgZ2V0U2l6ZSA9IChzaXplOiBTaXplKSA9PlxuICBtYXRjaFNpemUoXG4gICAgICB7XG4gICAgICAgICAgMDogNy44LFxuICAgICAgICAgIDE6IDEwLFxuICAgICAgICAgIDI6IDIzLFxuICAgICAgICAgIDM6IDM1LFxuICAgICAgICAgIDQ6IDQ1LFxuICAgICAgICAgIDU6IDU1LFxuICAgICAgfSxcbiAgICBzaXplXG4gICk7XG5cbmNvbnN0IFN0eWxlZFRydW5jYXRlQm94ID0gc3R5bGVkKCdkaXYnKTxUcnVuY2F0ZUJveFByb3BzPihcbiAgKHsgc2l6ZSA9IDIsIGxpbmVIZWlnaHQgfSkgPT4gKHtcbiAgICBkaXNwbGF5OiAnaW5saW5lLWJsb2NrJyxcbiAgICB3aGl0ZVNwYWNlOiAnbm93cmFwJyxcbiAgICBvdmVyZmxvdzogJ2hpZGRlbicsXG4gICAgdGV4dE92ZXJmbG93OiAnZWxsaXBzaXMnLFxuICAgIHdpZHRoOiAnMTAwJScsXG4gICAgbWF4V2lkdGg6IGAke2dldFNpemUoc2l6ZSl9ZW1gLFxuICAgIC8vIGZpeCBmb3IgVG9vbHRpcCBvdmVyIFRydW5jYXRlZCBUZXh0IGluIFNhZmFyaVxuICAgICcmOmFmdGVyJzoge1xuICAgICAgY29udGVudDogXCInJ1wiLFxuICAgICAgZGlzcGxheTogJ2Jsb2NrJyxcbiAgICB9LFxuICAgICAgbGluZUhlaWdodDogbGluZUhlaWdodCA/IG1hdGNoU2l6ZShcbiAgICAgICAgICB7XG4gICAgICAgICAgICAgIHNtOiAnMS41cmVtJyxcbiAgICAgICAgICAgICAgeHM6ICcxLjI1cmVtJyxcbiAgICAgICAgICB9LFxuICAgICAgICAgIGxpbmVIZWlnaHRcbiAgICAgICkgOiAndW5zZXQnLFxuICB9KVxuKTtcblxuZXhwb3J0IGNvbnN0IFRydW5jYXRlQm94ID0gUmVhY3QuZm9yd2FyZFJlZjxIVE1MRGl2RWxlbWVudCwgVHJ1bmNhdGVCb3hQcm9wcz4oXG4gIChwcm9wcywgcmVmKSA9PiA8U3R5bGVkVHJ1bmNhdGVCb3ggcmVmPXtyZWZ9IHsuLi5wcm9wc30gLz5cbik7XG5cbmV4cG9ydCBkZWZhdWx0IFRydW5jYXRlQm94O1xuIl19