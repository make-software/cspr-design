import Big from 'big.js';
import { DEFAULT_PRECISION, FULL_PRECISION } from './formatters';
export var PrecisionCase;
(function (PrecisionCase) {
    PrecisionCase["deployCost"] = "deployCost";
    PrecisionCase["full"] = "full";
})(PrecisionCase || (PrecisionCase = {}));
export var MOTES_PER_CSPR_RATE = '1000000000'; // 1 000 000 000 MOTES === 1 CSPR
export var currencyPrecisionByCase = function (precisionCase) {
    switch (precisionCase) {
        case PrecisionCase.deployCost:
            return DEFAULT_PRECISION;
        case PrecisionCase.full:
            return FULL_PRECISION;
        default:
            return 0;
    }
};
export var motesToCSPR = function (motes) {
    return Big(motes).div(MOTES_PER_CSPR_RATE).toString();
};
export var motesToCEP18Token = function (motes, decimals) {
    return Big(motes).div(Big(10).pow(decimals)).toString();
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3VycmVuY3kuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvbGliL3V0aWxzL2N1cnJlbmN5LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sR0FBRyxNQUFNLFFBQVEsQ0FBQztBQUN6QixPQUFPLEVBQUUsaUJBQWlCLEVBQUUsY0FBYyxFQUFFLE1BQU0sY0FBYyxDQUFDO0FBRWpFLE1BQU0sQ0FBTixJQUFZLGFBR1g7QUFIRCxXQUFZLGFBQWE7SUFDdkIsMENBQTJCLENBQUE7SUFDM0IsOEJBQWUsQ0FBQTtBQUNqQixDQUFDLEVBSFcsYUFBYSxLQUFiLGFBQWEsUUFHeEI7QUFFRCxNQUFNLENBQUMsSUFBTSxtQkFBbUIsR0FBRyxZQUFZLENBQUMsQ0FBQyxpQ0FBaUM7QUFFbEYsTUFBTSxDQUFDLElBQU0sdUJBQXVCLEdBQUcsVUFBQyxhQUE2QjtJQUNuRSxRQUFRLGFBQWEsRUFBRTtRQUNyQixLQUFLLGFBQWEsQ0FBQyxVQUFVO1lBQzNCLE9BQU8saUJBQWlCLENBQUM7UUFFM0IsS0FBSyxhQUFhLENBQUMsSUFBSTtZQUNyQixPQUFPLGNBQWMsQ0FBQztRQUV4QjtZQUNFLE9BQU8sQ0FBQyxDQUFDO0tBQ1o7QUFDSCxDQUFDLENBQUM7QUFFRixNQUFNLENBQUMsSUFBTSxXQUFXLEdBQUcsVUFBQyxLQUFhO0lBQ3ZDLE9BQU8sR0FBRyxDQUFDLEtBQUssQ0FBQyxDQUFDLEdBQUcsQ0FBQyxtQkFBbUIsQ0FBQyxDQUFDLFFBQVEsRUFBRSxDQUFDO0FBQ3hELENBQUMsQ0FBQztBQUVGLE1BQU0sQ0FBQyxJQUFNLGlCQUFpQixHQUFHLFVBQUMsS0FBYSxFQUFFLFFBQWdCO0lBQy9ELE9BQU8sR0FBRyxDQUFDLEtBQUssQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsUUFBUSxFQUFFLENBQUM7QUFDMUQsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEJpZyBmcm9tICdiaWcuanMnO1xyXG5pbXBvcnQgeyBERUZBVUxUX1BSRUNJU0lPTiwgRlVMTF9QUkVDSVNJT04gfSBmcm9tICcuL2Zvcm1hdHRlcnMnO1xyXG5cclxuZXhwb3J0IGVudW0gUHJlY2lzaW9uQ2FzZSB7XHJcbiAgJ2RlcGxveUNvc3QnID0gJ2RlcGxveUNvc3QnLFxyXG4gICdmdWxsJyA9ICdmdWxsJyxcclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IE1PVEVTX1BFUl9DU1BSX1JBVEUgPSAnMTAwMDAwMDAwMCc7IC8vIDEgMDAwIDAwMCAwMDAgTU9URVMgPT09IDEgQ1NQUlxyXG5cclxuZXhwb3J0IGNvbnN0IGN1cnJlbmN5UHJlY2lzaW9uQnlDYXNlID0gKHByZWNpc2lvbkNhc2U/OiBQcmVjaXNpb25DYXNlKSA9PiB7XHJcbiAgc3dpdGNoIChwcmVjaXNpb25DYXNlKSB7XHJcbiAgICBjYXNlIFByZWNpc2lvbkNhc2UuZGVwbG95Q29zdDpcclxuICAgICAgcmV0dXJuIERFRkFVTFRfUFJFQ0lTSU9OO1xyXG5cclxuICAgIGNhc2UgUHJlY2lzaW9uQ2FzZS5mdWxsOlxyXG4gICAgICByZXR1cm4gRlVMTF9QUkVDSVNJT047XHJcblxyXG4gICAgZGVmYXVsdDpcclxuICAgICAgcmV0dXJuIDA7XHJcbiAgfVxyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IG1vdGVzVG9DU1BSID0gKG1vdGVzOiBzdHJpbmcpOiBzdHJpbmcgPT4ge1xyXG4gIHJldHVybiBCaWcobW90ZXMpLmRpdihNT1RFU19QRVJfQ1NQUl9SQVRFKS50b1N0cmluZygpO1xyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IG1vdGVzVG9DRVAxOFRva2VuID0gKG1vdGVzOiBzdHJpbmcsIGRlY2ltYWxzOiBudW1iZXIpOiBzdHJpbmcgPT4ge1xyXG4gIHJldHVybiBCaWcobW90ZXMpLmRpdihCaWcoMTApLnBvdyhkZWNpbWFscykpLnRvU3RyaW5nKCk7XHJcbn07XHJcbiJdfQ==