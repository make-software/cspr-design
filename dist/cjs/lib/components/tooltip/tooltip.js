"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Tooltip = void 0;
var tslib_1 = require("tslib");
var jsx_runtime_1 = require("react/jsx-runtime");
var react_1 = tslib_1.__importDefault(require("react"));
var Tooltip_1 = require("reakit/Tooltip");
var styled_components_1 = tslib_1.__importDefault(require("styled-components"));
var body_text_1 = tslib_1.__importDefault(require("../body-text/body-text"));
var caption_text_1 = tslib_1.__importDefault(require("../caption-text/caption-text"));
var flex_column_1 = tslib_1.__importDefault(require("../flex-column/flex-column"));
var match_size_1 = require("../../utils/match-size");
var StyledReactTooltip = (0, styled_components_1.default)(Tooltip_1.Tooltip)(function (_a) {
    var theme = _a.theme, _b = _a.lineHeight, lineHeight = _b === void 0 ? 'sm' : _b, _c = _a.scale, scale = _c === void 0 ? 'sm' : _c, _d = _a.paddingScale, paddingScale = _d === void 0 ? 2 : _d;
    return ({
        zIndex: theme.zIndex.tooltip,
        color: theme.styleguideColors.contentPrimary,
        backgroundColor: theme.styleguideColors.backgroundPrimary,
        borderRadius: theme.borderRadius.base,
        padding: theme.padding[paddingScale],
        boxShadow: theme.boxShadow.tooltip,
        transition: 'opacity 250ms ease-in-out',
        opacity: 0,
        fontSize: (0, match_size_1.matchSize)({
            sm: '1.3rem',
            xs: '0.8125rem',
        }, scale),
        lineHeight: (0, match_size_1.matchSize)({
            sm: '1.5rem',
            xs: '1.25rem',
        }, lineHeight),
        '&[data-enter]': {
            opacity: 1,
        },
    });
});
exports.Tooltip = react_1.default.forwardRef(function (_a, ref) {
    var children = _a.children, limitWidth = _a.limitWidth, title = _a.title, caption = _a.caption, additionalBlock = _a.additionalBlock, monotype = _a.monotype, _b = _a.lineHeight, lineHeight = _b === void 0 ? 'sm' : _b, _c = _a.scale, scale = _c === void 0 ? 'sm' : _c, _d = _a.paddingScale, paddingScale = _d === void 0 ? 2 : _d, props = tslib_1.__rest(_a, ["children", "limitWidth", "title", "caption", "additionalBlock", "monotype", "lineHeight", "scale", "paddingScale"]);
    var tooltip = (0, Tooltip_1.useTooltipState)({ animated: 250 });
    var maxWidth = limitWidth
        ? typeof limitWidth === 'string'
            ? limitWidth
            : '500px'
        : undefined;
    if (children == null) {
        return null;
    }
    if (title == null) {
        return (0, jsx_runtime_1.jsx)(jsx_runtime_1.Fragment, { children: children });
    }
    return ((0, jsx_runtime_1.jsxs)(jsx_runtime_1.Fragment, { children: [(0, jsx_runtime_1.jsx)(Tooltip_1.TooltipReference, tslib_1.__assign({}, tooltip, { ref: children.ref }, children.props, { children: function (referenceProps) { return react_1.default.cloneElement(children, referenceProps); } })), (0, jsx_runtime_1.jsx)(StyledReactTooltip, tslib_1.__assign({ paddingScale: paddingScale }, tooltip, props, { children: (0, jsx_runtime_1.jsx)("div", tslib_1.__assign({ style: { maxWidth: maxWidth } }, { children: (0, jsx_runtime_1.jsxs)(flex_column_1.default, tslib_1.__assign({ itemsSpacing: 8 }, { children: [(0, jsx_runtime_1.jsxs)(flex_column_1.default, { children: [(0, jsx_runtime_1.jsx)(caption_text_1.default, tslib_1.__assign({ size: 2, variation: "gray" }, { children: caption })), (0, jsx_runtime_1.jsx)(body_text_1.default, tslib_1.__assign({ size: 3, monotype: monotype, lineHeight: lineHeight, scale: scale }, { children: title }))] }), additionalBlock] })) })) }))] }));
});
exports.default = exports.Tooltip;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9vbHRpcC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9saWIvY29tcG9uZW50cy90b29sdGlwL3Rvb2x0aXAudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsd0RBQTBCO0FBQzFCLDBDQUl3QjtBQUN4QixnRkFBdUM7QUFFdkMsNkVBQThDO0FBQzlDLHNGQUF1RDtBQUN2RCxtRkFBb0Q7QUFDcEQscURBQW1EO0FBbUJuRCxJQUFNLGtCQUFrQixHQUFHLElBQUEsMkJBQU0sRUFBQyxpQkFBYSxDQUFDLENBQzlDLFVBQUMsRUFBNEQ7UUFBMUQsS0FBSyxXQUFBLEVBQUUsa0JBQWlCLEVBQWpCLFVBQVUsbUJBQUcsSUFBSSxLQUFBLEVBQUUsYUFBWSxFQUFaLEtBQUssbUJBQUcsSUFBSSxLQUFBLEVBQUUsb0JBQWdCLEVBQWhCLFlBQVksbUJBQUcsQ0FBQyxLQUFBO0lBQU8sT0FBQSxDQUFDO1FBQ2pFLE1BQU0sRUFBRSxLQUFLLENBQUMsTUFBTSxDQUFDLE9BQU87UUFDNUIsS0FBSyxFQUFFLEtBQUssQ0FBQyxnQkFBZ0IsQ0FBQyxjQUFjO1FBQzVDLGVBQWUsRUFBRSxLQUFLLENBQUMsZ0JBQWdCLENBQUMsaUJBQWlCO1FBQ3pELFlBQVksRUFBRSxLQUFLLENBQUMsWUFBWSxDQUFDLElBQUk7UUFDckMsT0FBTyxFQUFFLEtBQUssQ0FBQyxPQUFPLENBQUMsWUFBWSxDQUFDO1FBQ3BDLFNBQVMsRUFBRSxLQUFLLENBQUMsU0FBUyxDQUFDLE9BQU87UUFFbEMsVUFBVSxFQUFFLDJCQUEyQjtRQUN2QyxPQUFPLEVBQUUsQ0FBQztRQUNWLFFBQVEsRUFBRSxJQUFBLHNCQUFTLEVBQ2pCO1lBQ0UsRUFBRSxFQUFFLFFBQVE7WUFDWixFQUFFLEVBQUUsV0FBVztTQUNoQixFQUNELEtBQUssQ0FDTjtRQUNELFVBQVUsRUFBRSxJQUFBLHNCQUFTLEVBQ25CO1lBQ0UsRUFBRSxFQUFFLFFBQVE7WUFDWixFQUFFLEVBQUUsU0FBUztTQUNkLEVBQ0QsVUFBVSxDQUNYO1FBQ0QsZUFBZSxFQUFFO1lBQ2YsT0FBTyxFQUFFLENBQUM7U0FDWDtLQUNGLENBQUM7QUEzQmdFLENBMkJoRSxDQUNILENBQUM7QUFFVyxRQUFBLE9BQU8sR0FBRyxlQUFLLENBQUMsVUFBVSxDQUlyQyxVQUNFLEVBV0MsRUFDRCxHQUFHO0lBWEQsSUFBQSxRQUFRLGNBQUEsRUFDUixVQUFVLGdCQUFBLEVBQ1YsS0FBSyxXQUFBLEVBQ0wsT0FBTyxhQUFBLEVBQ1AsZUFBZSxxQkFBQSxFQUNmLFFBQVEsY0FBQSxFQUNSLGtCQUFpQixFQUFqQixVQUFVLG1CQUFHLElBQUksS0FBQSxFQUNqQixhQUFZLEVBQVosS0FBSyxtQkFBRyxJQUFJLEtBQUEsRUFDWixvQkFBZ0IsRUFBaEIsWUFBWSxtQkFBRyxDQUFDLEtBQUEsRUFDYixLQUFLLHNCQVZWLG9IQVdDLENBRFM7SUFJVixJQUFNLE9BQU8sR0FBRyxJQUFBLHlCQUFlLEVBQUMsRUFBRSxRQUFRLEVBQUUsR0FBRyxFQUFFLENBQUMsQ0FBQztJQUNuRCxJQUFNLFFBQVEsR0FBRyxVQUFVO1FBQ3pCLENBQUMsQ0FBQyxPQUFPLFVBQVUsS0FBSyxRQUFRO1lBQzlCLENBQUMsQ0FBQyxVQUFVO1lBQ1osQ0FBQyxDQUFDLE9BQU87UUFDWCxDQUFDLENBQUMsU0FBUyxDQUFDO0lBRWQsSUFBSSxRQUFRLElBQUksSUFBSSxFQUFFO1FBQ3BCLE9BQU8sSUFBSSxDQUFDO0tBQ2I7SUFFRCxJQUFJLEtBQUssSUFBSSxJQUFJLEVBQUU7UUFDakIsT0FBTywyREFBRyxRQUFRLEdBQUksQ0FBQztLQUN4QjtJQUVELE9BQU8sQ0FDTCw2REFDRSx1QkFBQywwQkFBZ0IsdUJBQUssT0FBTyxJQUFFLEdBQUcsRUFBRSxRQUFRLENBQUMsR0FBRyxJQUFNLFFBQVEsQ0FBQyxLQUFLLGNBQ2pFLFVBQUMsY0FBYyxJQUFLLE9BQUEsZUFBSyxDQUFDLFlBQVksQ0FBQyxRQUFRLEVBQUUsY0FBYyxDQUFDLEVBQTVDLENBQTRDLElBQ2hELEVBQ25CLHVCQUFDLGtCQUFrQixxQkFBQyxZQUFZLEVBQUUsWUFBWSxJQUFNLE9BQU8sRUFBTSxLQUFLLGNBQ3BFLGlEQUFLLEtBQUssRUFBRSxFQUFFLFFBQVEsVUFBQSxFQUFFLGdCQUN0Qix3QkFBQyxxQkFBVSxxQkFBQyxZQUFZLEVBQUUsQ0FBQyxpQkFDekIsd0JBQUMscUJBQVUsZUFDVCx1QkFBQyxzQkFBVyxxQkFBQyxJQUFJLEVBQUUsQ0FBQyxFQUFFLFNBQVMsRUFBQyxNQUFNLGdCQUNuQyxPQUFPLElBQ0ksRUFDZCx1QkFBQyxtQkFBUSxxQkFDUCxJQUFJLEVBQUUsQ0FBQyxFQUNQLFFBQVEsRUFBRSxRQUFRLEVBQ2xCLFVBQVUsRUFBRSxVQUFVLEVBQ3RCLEtBQUssRUFBRSxLQUFLLGdCQUVYLEtBQUssSUFDRyxJQUNBLEVBQ1osZUFBZSxLQUNMLElBQ1QsSUFDYSxJQUNwQixDQUNKLENBQUM7QUFDSixDQUFDLENBQ0YsQ0FBQztBQUVGLGtCQUFlLGVBQU8sQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQge1xuICBUb29sdGlwIGFzIFJlYWtpdFRvb2x0aXAsXG4gIFRvb2x0aXBSZWZlcmVuY2UsXG4gIHVzZVRvb2x0aXBTdGF0ZSxcbn0gZnJvbSAncmVha2l0L1Rvb2x0aXAnO1xuaW1wb3J0IHN0eWxlZCBmcm9tICdzdHlsZWQtY29tcG9uZW50cyc7XG5pbXBvcnQgeyBCYXNlUHJvcHMgfSBmcm9tICcuLi8uLi90eXBlcyc7XG5pbXBvcnQgQm9keVRleHQgZnJvbSAnLi4vYm9keS10ZXh0L2JvZHktdGV4dCc7XG5pbXBvcnQgQ2FwdGlvblRleHQgZnJvbSAnLi4vY2FwdGlvbi10ZXh0L2NhcHRpb24tdGV4dCc7XG5pbXBvcnQgRmxleENvbHVtbiBmcm9tICcuLi9mbGV4LWNvbHVtbi9mbGV4LWNvbHVtbic7XG5pbXBvcnQgeyBtYXRjaFNpemUgfSBmcm9tICcuLi8uLi91dGlscy9tYXRjaC1zaXplJztcblxudHlwZSBSZWYgPSBIVE1MRGl2RWxlbWVudDtcblxudHlwZSBTdHlsZWRSZWFjdFRvb2x0aXBQcm9wcyA9IHtcbiAgbGluZUhlaWdodD86ICd4cycgfCAnc20nO1xuICBzY2FsZT86ICd4cycgfCAnc20nO1xuICBwYWRkaW5nU2NhbGU/OiAxIHwgMjtcbn07XG5cbmV4cG9ydCBpbnRlcmZhY2UgVG9vbHRpcFByb3BzIGV4dGVuZHMgQmFzZVByb3BzIHtcbiAgdGl0bGU/OiBKU1guRWxlbWVudCB8IHN0cmluZyB8IG51bGw7XG4gIGNhcHRpb24/OiBzdHJpbmcgfCBudWxsO1xuICBhZGRpdGlvbmFsQmxvY2s/OiBSZWFjdC5SZWFjdEVsZW1lbnQ8YW55PiAmIGFueTtcbiAgY2hpbGRyZW4/OiBSZWFjdC5SZWFjdEVsZW1lbnQ8YW55PiAmIGFueTtcbiAgbW9ub3R5cGU/OiBib29sZWFuO1xuICBsaW1pdFdpZHRoPzogYm9vbGVhbiB8IHN0cmluZztcbn1cblxuY29uc3QgU3R5bGVkUmVhY3RUb29sdGlwID0gc3R5bGVkKFJlYWtpdFRvb2x0aXApPFN0eWxlZFJlYWN0VG9vbHRpcFByb3BzPihcbiAgKHsgdGhlbWUsIGxpbmVIZWlnaHQgPSAnc20nLCBzY2FsZSA9ICdzbScsIHBhZGRpbmdTY2FsZSA9IDIgfSkgPT4gKHtcbiAgICB6SW5kZXg6IHRoZW1lLnpJbmRleC50b29sdGlwLFxuICAgIGNvbG9yOiB0aGVtZS5zdHlsZWd1aWRlQ29sb3JzLmNvbnRlbnRQcmltYXJ5LFxuICAgIGJhY2tncm91bmRDb2xvcjogdGhlbWUuc3R5bGVndWlkZUNvbG9ycy5iYWNrZ3JvdW5kUHJpbWFyeSxcbiAgICBib3JkZXJSYWRpdXM6IHRoZW1lLmJvcmRlclJhZGl1cy5iYXNlLFxuICAgIHBhZGRpbmc6IHRoZW1lLnBhZGRpbmdbcGFkZGluZ1NjYWxlXSxcbiAgICBib3hTaGFkb3c6IHRoZW1lLmJveFNoYWRvdy50b29sdGlwLFxuXG4gICAgdHJhbnNpdGlvbjogJ29wYWNpdHkgMjUwbXMgZWFzZS1pbi1vdXQnLFxuICAgIG9wYWNpdHk6IDAsXG4gICAgZm9udFNpemU6IG1hdGNoU2l6ZShcbiAgICAgIHtcbiAgICAgICAgc206ICcxLjNyZW0nLFxuICAgICAgICB4czogJzAuODEyNXJlbScsXG4gICAgICB9LFxuICAgICAgc2NhbGVcbiAgICApLFxuICAgIGxpbmVIZWlnaHQ6IG1hdGNoU2l6ZShcbiAgICAgIHtcbiAgICAgICAgc206ICcxLjVyZW0nLFxuICAgICAgICB4czogJzEuMjVyZW0nLFxuICAgICAgfSxcbiAgICAgIGxpbmVIZWlnaHRcbiAgICApLFxuICAgICcmW2RhdGEtZW50ZXJdJzoge1xuICAgICAgb3BhY2l0eTogMSxcbiAgICB9LFxuICB9KVxuKTtcblxuZXhwb3J0IGNvbnN0IFRvb2x0aXAgPSBSZWFjdC5mb3J3YXJkUmVmPFxuICBSZWYsXG4gIFRvb2x0aXBQcm9wcyAmIFN0eWxlZFJlYWN0VG9vbHRpcFByb3BzXG4+KFxuICAoXG4gICAge1xuICAgICAgY2hpbGRyZW4sXG4gICAgICBsaW1pdFdpZHRoLFxuICAgICAgdGl0bGUsXG4gICAgICBjYXB0aW9uLFxuICAgICAgYWRkaXRpb25hbEJsb2NrLFxuICAgICAgbW9ub3R5cGUsXG4gICAgICBsaW5lSGVpZ2h0ID0gJ3NtJyxcbiAgICAgIHNjYWxlID0gJ3NtJyxcbiAgICAgIHBhZGRpbmdTY2FsZSA9IDIsXG4gICAgICAuLi5wcm9wc1xuICAgIH0sXG4gICAgcmVmXG4gICkgPT4ge1xuICAgIGNvbnN0IHRvb2x0aXAgPSB1c2VUb29sdGlwU3RhdGUoeyBhbmltYXRlZDogMjUwIH0pO1xuICAgIGNvbnN0IG1heFdpZHRoID0gbGltaXRXaWR0aFxuICAgICAgPyB0eXBlb2YgbGltaXRXaWR0aCA9PT0gJ3N0cmluZydcbiAgICAgICAgPyBsaW1pdFdpZHRoXG4gICAgICAgIDogJzUwMHB4J1xuICAgICAgOiB1bmRlZmluZWQ7XG5cbiAgICBpZiAoY2hpbGRyZW4gPT0gbnVsbCkge1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuXG4gICAgaWYgKHRpdGxlID09IG51bGwpIHtcbiAgICAgIHJldHVybiA8PntjaGlsZHJlbn08Lz47XG4gICAgfVxuXG4gICAgcmV0dXJuIChcbiAgICAgIDw+XG4gICAgICAgIDxUb29sdGlwUmVmZXJlbmNlIHsuLi50b29sdGlwfSByZWY9e2NoaWxkcmVuLnJlZn0gey4uLmNoaWxkcmVuLnByb3BzfT5cbiAgICAgICAgICB7KHJlZmVyZW5jZVByb3BzKSA9PiBSZWFjdC5jbG9uZUVsZW1lbnQoY2hpbGRyZW4sIHJlZmVyZW5jZVByb3BzKX1cbiAgICAgICAgPC9Ub29sdGlwUmVmZXJlbmNlPlxuICAgICAgICA8U3R5bGVkUmVhY3RUb29sdGlwIHBhZGRpbmdTY2FsZT17cGFkZGluZ1NjYWxlfSB7Li4udG9vbHRpcH0gey4uLnByb3BzfT5cbiAgICAgICAgICA8ZGl2IHN0eWxlPXt7IG1heFdpZHRoIH19PlxuICAgICAgICAgICAgPEZsZXhDb2x1bW4gaXRlbXNTcGFjaW5nPXs4fT5cbiAgICAgICAgICAgICAgPEZsZXhDb2x1bW4+XG4gICAgICAgICAgICAgICAgPENhcHRpb25UZXh0IHNpemU9ezJ9IHZhcmlhdGlvbj1cImdyYXlcIj5cbiAgICAgICAgICAgICAgICAgIHtjYXB0aW9ufVxuICAgICAgICAgICAgICAgIDwvQ2FwdGlvblRleHQ+XG4gICAgICAgICAgICAgICAgPEJvZHlUZXh0XG4gICAgICAgICAgICAgICAgICBzaXplPXszfVxuICAgICAgICAgICAgICAgICAgbW9ub3R5cGU9e21vbm90eXBlfVxuICAgICAgICAgICAgICAgICAgbGluZUhlaWdodD17bGluZUhlaWdodH1cbiAgICAgICAgICAgICAgICAgIHNjYWxlPXtzY2FsZX1cbiAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICB7dGl0bGV9XG4gICAgICAgICAgICAgICAgPC9Cb2R5VGV4dD5cbiAgICAgICAgICAgICAgPC9GbGV4Q29sdW1uPlxuICAgICAgICAgICAgICB7YWRkaXRpb25hbEJsb2NrfVxuICAgICAgICAgICAgPC9GbGV4Q29sdW1uPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L1N0eWxlZFJlYWN0VG9vbHRpcD5cbiAgICAgIDwvPlxuICAgICk7XG4gIH1cbik7XG5cbmV4cG9ydCBkZWZhdWx0IFRvb2x0aXA7XG4iXX0=