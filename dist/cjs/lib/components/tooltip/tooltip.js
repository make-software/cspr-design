"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Tooltip = void 0;
var tslib_1 = require("tslib");
var jsx_runtime_1 = require("react/jsx-runtime");
var react_1 = tslib_1.__importDefault(require("react"));
var Tooltip_1 = require("reakit/Tooltip");
var styled_components_1 = tslib_1.__importDefault(require("styled-components"));
var body_text_1 = tslib_1.__importDefault(require("../body-text/body-text"));
var caption_text_1 = tslib_1.__importDefault(require("../caption-text/caption-text"));
var flex_column_1 = tslib_1.__importDefault(require("../flex-column/flex-column"));
var match_size_1 = require("../../utils/match-size");
var StyledReactTooltip = (0, styled_components_1.default)(Tooltip_1.Tooltip)(function (_a) {
    var theme = _a.theme, _b = _a.lineHeight, lineHeight = _b === void 0 ? 'sm' : _b, _c = _a.scale, scale = _c === void 0 ? 'sm' : _c, _d = _a.paddingScale, paddingScale = _d === void 0 ? 2 : _d;
    return ({
        zIndex: theme.zIndex.tooltip,
        color: theme.styleguideColors.contentPrimary,
        backgroundColor: theme.styleguideColors.backgroundPrimary,
        borderRadius: theme.borderRadius.base,
        padding: theme.padding[paddingScale],
        boxShadow: theme.boxShadow.tooltip,
        transition: 'opacity 250ms ease-in-out',
        opacity: 0,
        fontSize: (0, match_size_1.matchSize)({
            sm: '1.3rem',
            xs: '0.8125rem',
        }, scale),
        lineHeight: (0, match_size_1.matchSize)({
            sm: '1.5rem',
            xs: '1.25rem',
        }, lineHeight),
        '&[data-enter]': {
            opacity: 1,
        },
    });
});
exports.Tooltip = react_1.default.forwardRef(function (_a, ref) {
    var children = _a.children, limitWidth = _a.limitWidth, title = _a.title, caption = _a.caption, monotype = _a.monotype, _b = _a.lineHeight, lineHeight = _b === void 0 ? 'sm' : _b, _c = _a.scale, scale = _c === void 0 ? 'sm' : _c, _d = _a.paddingScale, paddingScale = _d === void 0 ? 2 : _d, props = tslib_1.__rest(_a, ["children", "limitWidth", "title", "caption", "monotype", "lineHeight", "scale", "paddingScale"]);
    var tooltip = (0, Tooltip_1.useTooltipState)({ animated: 250 });
    if (children == null) {
        return null;
    }
    if (title == null) {
        return (0, jsx_runtime_1.jsx)(jsx_runtime_1.Fragment, { children: children });
    }
    return ((0, jsx_runtime_1.jsxs)(jsx_runtime_1.Fragment, { children: [(0, jsx_runtime_1.jsx)(Tooltip_1.TooltipReference, tslib_1.__assign({}, tooltip, { ref: children.ref }, children.props, { children: function (referenceProps) { return react_1.default.cloneElement(children, referenceProps); } })), (0, jsx_runtime_1.jsx)(StyledReactTooltip, tslib_1.__assign({ paddingScale: paddingScale }, tooltip, props, { children: (0, jsx_runtime_1.jsx)("div", tslib_1.__assign({ style: { maxWidth: limitWidth ? '500px' : undefined } }, { children: (0, jsx_runtime_1.jsxs)(flex_column_1.default, { children: [(0, jsx_runtime_1.jsx)(caption_text_1.default, tslib_1.__assign({ size: 2, variation: "gray" }, { children: caption })), (0, jsx_runtime_1.jsx)(body_text_1.default, tslib_1.__assign({ size: 3, monotype: monotype, lineHeight: lineHeight, scale: scale }, { children: title }))] }) })) }))] }));
});
exports.default = exports.Tooltip;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9vbHRpcC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9saWIvY29tcG9uZW50cy90b29sdGlwL3Rvb2x0aXAudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsd0RBQTBCO0FBQzFCLDBDQUl3QjtBQUN4QixnRkFBdUM7QUFFdkMsNkVBQThDO0FBQzlDLHNGQUF1RDtBQUN2RCxtRkFBb0Q7QUFDcEQscURBQWlEO0FBaUJqRCxJQUFNLGtCQUFrQixHQUFHLElBQUEsMkJBQU0sRUFBQyxpQkFBYSxDQUFDLENBQTBCLFVBQUMsRUFBNEQ7UUFBMUQsS0FBSyxXQUFBLEVBQUUsa0JBQWlCLEVBQWpCLFVBQVUsbUJBQUcsSUFBSSxLQUFBLEVBQUUsYUFBWSxFQUFaLEtBQUssbUJBQUcsSUFBSSxLQUFBLEVBQUUsb0JBQWdCLEVBQWhCLFlBQVksbUJBQUcsQ0FBQyxLQUFBO0lBQU8sT0FBQSxDQUFDO1FBQzNJLE1BQU0sRUFBRSxLQUFLLENBQUMsTUFBTSxDQUFDLE9BQU87UUFDNUIsS0FBSyxFQUFFLEtBQUssQ0FBQyxnQkFBZ0IsQ0FBQyxjQUFjO1FBQzVDLGVBQWUsRUFBRSxLQUFLLENBQUMsZ0JBQWdCLENBQUMsaUJBQWlCO1FBQ3pELFlBQVksRUFBRSxLQUFLLENBQUMsWUFBWSxDQUFDLElBQUk7UUFDckMsT0FBTyxFQUFFLEtBQUssQ0FBQyxPQUFPLENBQUMsWUFBWSxDQUFDO1FBQ3BDLFNBQVMsRUFBRSxLQUFLLENBQUMsU0FBUyxDQUFDLE9BQU87UUFFbEMsVUFBVSxFQUFFLDJCQUEyQjtRQUN2QyxPQUFPLEVBQUUsQ0FBQztRQUNWLFFBQVEsRUFBRSxJQUFBLHNCQUFTLEVBQ2hCO1lBQ0ksRUFBRSxFQUFFLFFBQVE7WUFDWixFQUFFLEVBQUUsV0FBVztTQUNsQixFQUNBLEtBQUssQ0FDUjtRQUNELFVBQVUsRUFBRSxJQUFBLHNCQUFTLEVBQ2pCO1lBQ0ksRUFBRSxFQUFFLFFBQVE7WUFDWixFQUFFLEVBQUUsU0FBUztTQUNoQixFQUNELFVBQVUsQ0FDYjtRQUNELGVBQWUsRUFBRTtZQUNmLE9BQU8sRUFBRSxDQUFDO1NBQ1g7S0FDRixDQUFDO0FBM0IwSSxDQTJCMUksQ0FBQyxDQUFDO0FBRVMsUUFBQSxPQUFPLEdBQUcsZUFBSyxDQUFDLFVBQVUsQ0FDckMsVUFBQyxFQUErRyxFQUFFLEdBQUc7SUFBbEgsSUFBQSxRQUFRLGNBQUEsRUFBRSxVQUFVLGdCQUFBLEVBQUUsS0FBSyxXQUFBLEVBQUUsT0FBTyxhQUFBLEVBQUUsUUFBUSxjQUFBLEVBQUUsa0JBQWlCLEVBQWpCLFVBQVUsbUJBQUcsSUFBSSxLQUFBLEVBQUUsYUFBWSxFQUFaLEtBQUssbUJBQUcsSUFBSSxLQUFBLEVBQUUsb0JBQWdCLEVBQWhCLFlBQVksbUJBQUcsQ0FBQyxLQUFBLEVBQUssS0FBSyxzQkFBN0csaUdBQStHLENBQUY7SUFDNUcsSUFBTSxPQUFPLEdBQUcsSUFBQSx5QkFBZSxFQUFDLEVBQUUsUUFBUSxFQUFFLEdBQUcsRUFBRSxDQUFDLENBQUM7SUFFbkQsSUFBSSxRQUFRLElBQUksSUFBSSxFQUFFO1FBQ3BCLE9BQU8sSUFBSSxDQUFDO0tBQ2I7SUFFRCxJQUFJLEtBQUssSUFBSSxJQUFJLEVBQUU7UUFDakIsT0FBTywyREFBRyxRQUFRLEdBQUksQ0FBQztLQUN4QjtJQUVELE9BQU8sQ0FDTCw2REFDRSx1QkFBQywwQkFBZ0IsdUJBQUssT0FBTyxJQUFFLEdBQUcsRUFBRSxRQUFRLENBQUMsR0FBRyxJQUFNLFFBQVEsQ0FBQyxLQUFLLGNBQ2pFLFVBQUMsY0FBYyxJQUFLLE9BQUEsZUFBSyxDQUFDLFlBQVksQ0FBQyxRQUFRLEVBQUUsY0FBYyxDQUFDLEVBQTVDLENBQTRDLElBQ2hELEVBQ25CLHVCQUFDLGtCQUFrQixxQkFBQyxZQUFZLEVBQUUsWUFBWSxJQUFNLE9BQU8sRUFBTSxLQUFLLGNBQ3BFLGlEQUFLLEtBQUssRUFBRSxFQUFFLFFBQVEsRUFBRSxVQUFVLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsU0FBUyxFQUFFLGdCQUN4RCx3QkFBQyxxQkFBVSxlQUNULHVCQUFDLHNCQUFXLHFCQUFDLElBQUksRUFBRSxDQUFDLEVBQUUsU0FBUyxFQUFDLE1BQU0sZ0JBQ25DLE9BQU8sSUFDSSxFQUNkLHVCQUFDLG1CQUFRLHFCQUFDLElBQUksRUFBRSxDQUFDLEVBQUUsUUFBUSxFQUFFLFFBQVEsRUFBRSxVQUFVLEVBQUUsVUFBVSxFQUFFLEtBQUssRUFBRSxLQUFLLGdCQUN4RSxLQUFLLElBQ0csSUFDQSxJQUNULElBQ2EsSUFDcEIsQ0FDSixDQUFDO0FBQ0osQ0FBQyxDQUNGLENBQUM7QUFFRixrQkFBZSxlQUFPLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQge1xyXG4gIFRvb2x0aXAgYXMgUmVha2l0VG9vbHRpcCxcclxuICBUb29sdGlwUmVmZXJlbmNlLFxyXG4gIHVzZVRvb2x0aXBTdGF0ZSxcclxufSBmcm9tICdyZWFraXQvVG9vbHRpcCc7XHJcbmltcG9ydCBzdHlsZWQgZnJvbSAnc3R5bGVkLWNvbXBvbmVudHMnO1xyXG5pbXBvcnQgeyBCYXNlUHJvcHMgfSBmcm9tICcuLi8uLi90eXBlcyc7XHJcbmltcG9ydCBCb2R5VGV4dCBmcm9tICcuLi9ib2R5LXRleHQvYm9keS10ZXh0JztcclxuaW1wb3J0IENhcHRpb25UZXh0IGZyb20gJy4uL2NhcHRpb24tdGV4dC9jYXB0aW9uLXRleHQnO1xyXG5pbXBvcnQgRmxleENvbHVtbiBmcm9tICcuLi9mbGV4LWNvbHVtbi9mbGV4LWNvbHVtbic7XHJcbmltcG9ydCB7bWF0Y2hTaXplfSBmcm9tIFwiLi4vLi4vdXRpbHMvbWF0Y2gtc2l6ZVwiO1xyXG5cclxudHlwZSBSZWYgPSBIVE1MRGl2RWxlbWVudDtcclxuXHJcbnR5cGUgU3R5bGVkUmVhY3RUb29sdGlwUHJvcHMgPSB7XHJcbiAgICBsaW5lSGVpZ2h0PzogJ3hzJyB8ICdzbSc7XHJcbiAgICBzY2FsZT86ICd4cycgfCAnc20nO1xyXG4gICAgcGFkZGluZ1NjYWxlPzogMSB8IDI7XHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgVG9vbHRpcFByb3BzIGV4dGVuZHMgQmFzZVByb3BzIHtcclxuICB0aXRsZT86IEpTWC5FbGVtZW50IHwgc3RyaW5nIHwgbnVsbDtcclxuICBjYXB0aW9uPzogc3RyaW5nIHwgbnVsbDtcclxuICBjaGlsZHJlbj86IFJlYWN0LlJlYWN0RWxlbWVudDxhbnk+ICYgYW55O1xyXG4gIG1vbm90eXBlPzogYm9vbGVhbjtcclxuICBsaW1pdFdpZHRoPzogYm9vbGVhbjtcclxufVxyXG5jb25zdCBTdHlsZWRSZWFjdFRvb2x0aXAgPSBzdHlsZWQoUmVha2l0VG9vbHRpcCk8U3R5bGVkUmVhY3RUb29sdGlwUHJvcHM+KCh7IHRoZW1lLCBsaW5lSGVpZ2h0ID0gJ3NtJywgc2NhbGUgPSAnc20nLCBwYWRkaW5nU2NhbGUgPSAyIH0pID0+ICh7XHJcbiAgekluZGV4OiB0aGVtZS56SW5kZXgudG9vbHRpcCxcclxuICBjb2xvcjogdGhlbWUuc3R5bGVndWlkZUNvbG9ycy5jb250ZW50UHJpbWFyeSxcclxuICBiYWNrZ3JvdW5kQ29sb3I6IHRoZW1lLnN0eWxlZ3VpZGVDb2xvcnMuYmFja2dyb3VuZFByaW1hcnksXHJcbiAgYm9yZGVyUmFkaXVzOiB0aGVtZS5ib3JkZXJSYWRpdXMuYmFzZSxcclxuICBwYWRkaW5nOiB0aGVtZS5wYWRkaW5nW3BhZGRpbmdTY2FsZV0sXHJcbiAgYm94U2hhZG93OiB0aGVtZS5ib3hTaGFkb3cudG9vbHRpcCxcclxuXHJcbiAgdHJhbnNpdGlvbjogJ29wYWNpdHkgMjUwbXMgZWFzZS1pbi1vdXQnLFxyXG4gIG9wYWNpdHk6IDAsXHJcbiAgZm9udFNpemU6IG1hdGNoU2l6ZShcclxuICAgICB7XHJcbiAgICAgICAgIHNtOiAnMS4zcmVtJyxcclxuICAgICAgICAgeHM6ICcwLjgxMjVyZW0nLFxyXG4gICAgIH0sXHJcbiAgICAgIHNjYWxlXHJcbiAgKSxcclxuICBsaW5lSGVpZ2h0OiBtYXRjaFNpemUoXHJcbiAgICAgIHtcclxuICAgICAgICAgIHNtOiAnMS41cmVtJyxcclxuICAgICAgICAgIHhzOiAnMS4yNXJlbScsXHJcbiAgICAgIH0sXHJcbiAgICAgIGxpbmVIZWlnaHRcclxuICApLFxyXG4gICcmW2RhdGEtZW50ZXJdJzoge1xyXG4gICAgb3BhY2l0eTogMSxcclxuICB9LFxyXG59KSk7XHJcblxyXG5leHBvcnQgY29uc3QgVG9vbHRpcCA9IFJlYWN0LmZvcndhcmRSZWY8UmVmLCBUb29sdGlwUHJvcHMgJiBTdHlsZWRSZWFjdFRvb2x0aXBQcm9wcz4oXHJcbiAgKHsgY2hpbGRyZW4sIGxpbWl0V2lkdGgsIHRpdGxlLCBjYXB0aW9uLCBtb25vdHlwZSwgbGluZUhlaWdodCA9ICdzbScsIHNjYWxlID0gJ3NtJywgcGFkZGluZ1NjYWxlID0gMiwgLi4ucHJvcHMgfSwgcmVmKSA9PiB7XHJcbiAgICBjb25zdCB0b29sdGlwID0gdXNlVG9vbHRpcFN0YXRlKHsgYW5pbWF0ZWQ6IDI1MCB9KTtcclxuXHJcbiAgICBpZiAoY2hpbGRyZW4gPT0gbnVsbCkge1xyXG4gICAgICByZXR1cm4gbnVsbDtcclxuICAgIH1cclxuXHJcbiAgICBpZiAodGl0bGUgPT0gbnVsbCkge1xyXG4gICAgICByZXR1cm4gPD57Y2hpbGRyZW59PC8+O1xyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiAoXHJcbiAgICAgIDw+XHJcbiAgICAgICAgPFRvb2x0aXBSZWZlcmVuY2Ugey4uLnRvb2x0aXB9IHJlZj17Y2hpbGRyZW4ucmVmfSB7Li4uY2hpbGRyZW4ucHJvcHN9PlxyXG4gICAgICAgICAgeyhyZWZlcmVuY2VQcm9wcykgPT4gUmVhY3QuY2xvbmVFbGVtZW50KGNoaWxkcmVuLCByZWZlcmVuY2VQcm9wcyl9XHJcbiAgICAgICAgPC9Ub29sdGlwUmVmZXJlbmNlPlxyXG4gICAgICAgIDxTdHlsZWRSZWFjdFRvb2x0aXAgcGFkZGluZ1NjYWxlPXtwYWRkaW5nU2NhbGV9IHsuLi50b29sdGlwfSB7Li4ucHJvcHN9PlxyXG4gICAgICAgICAgPGRpdiBzdHlsZT17eyBtYXhXaWR0aDogbGltaXRXaWR0aCA/ICc1MDBweCcgOiB1bmRlZmluZWQgfX0+XHJcbiAgICAgICAgICAgIDxGbGV4Q29sdW1uPlxyXG4gICAgICAgICAgICAgIDxDYXB0aW9uVGV4dCBzaXplPXsyfSB2YXJpYXRpb249XCJncmF5XCI+XHJcbiAgICAgICAgICAgICAgICB7Y2FwdGlvbn1cclxuICAgICAgICAgICAgICA8L0NhcHRpb25UZXh0PlxyXG4gICAgICAgICAgICAgIDxCb2R5VGV4dCBzaXplPXszfSBtb25vdHlwZT17bW9ub3R5cGV9IGxpbmVIZWlnaHQ9e2xpbmVIZWlnaHR9IHNjYWxlPXtzY2FsZX0+XHJcbiAgICAgICAgICAgICAgICB7dGl0bGV9XHJcbiAgICAgICAgICAgICAgPC9Cb2R5VGV4dD5cclxuICAgICAgICAgICAgPC9GbGV4Q29sdW1uPlxyXG4gICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgPC9TdHlsZWRSZWFjdFRvb2x0aXA+XHJcbiAgICAgIDwvPlxyXG4gICAgKTtcclxuICB9XHJcbik7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBUb29sdGlwO1xyXG4iXX0=