"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AccountInfoRow = exports.ValuesRow = void 0;
var tslib_1 = require("tslib");
var jsx_runtime_1 = require("react/jsx-runtime");
var styled_components_1 = tslib_1.__importDefault(require("styled-components"));
var big_js_1 = tslib_1.__importDefault(require("big.js"));
var body_text_1 = require("../body-text/body-text");
var flex_column_1 = require("../flex-column/flex-column");
var flex_row_1 = require("../flex-row/flex-row");
var formatters_1 = require("../../utils/formatters");
var tooltip_1 = require("../tooltip/tooltip");
var match_media_1 = require("../../utils/match-media");
var copy_hash_1 = require("../copy-hash/copy-hash");
var cspr_1 = require("../cspr/cspr");
var currency_1 = require("../../utils/currency");
var formatters_2 = require("../../utils/formatters");
var cep18_token_1 = tslib_1.__importDefault(require("../cep18-token/cep18-token"));
exports.ValuesRow = (0, styled_components_1.default)(flex_row_1.FlexRow)(function (_a) {
    var theme = _a.theme;
    return ({
        height: 36,
        borderRadius: theme.borderRadius.base,
        padding: '8px 16px',
        backgroundColor: theme.styleguideColors.backgroundPrimary,
        border: theme.border.base,
    });
});
var StyledFlexColumn = (0, styled_components_1.default)(flex_column_1.FlexColumn)(function (_a) {
    var disabled = _a.disabled;
    return (tslib_1.__assign({}, (disabled && {
        opacity: 0.5,
    })));
});
var BalanceText = (0, styled_components_1.default)(body_text_1.BodyText)(function (_a) { return ({
    textAlign: 'right',
}); });
var StyledIconContainer = styled_components_1.default.span(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject(["\n  margin-left: 10px;\n"], ["\n  margin-left: 10px;\n"])));
var Ticker = function (_a) {
    var ticker = _a.ticker, cep18Config = _a.cep18Config, props = tslib_1.__rest(_a, ["ticker", "cep18Config"]);
    return ticker === 'CSPR' ?
        (0, jsx_runtime_1.jsx)(cspr_1.Cspr, tslib_1.__assign({}, props)) :
        (0, jsx_runtime_1.jsx)(cep18_token_1.default, { ticker: ticker, motes: props.motes, decimals: (cep18Config === null || cep18Config === void 0 ? void 0 : cep18Config.decimals) || formatters_1.DEFAULT_PRECISION, precision: (cep18Config === null || cep18Config === void 0 ? void 0 : cep18Config.precision) || formatters_1.DEFAULT_PRECISION });
};
var AccountInfoBalance = function (_a) {
    var accountBalance = _a.accountBalance, emptyBalance = _a.emptyBalance, loading = _a.loading, error = _a.error, cep18Config = _a.cep18Config, _b = _a.ticker, ticker = _b === void 0 ? 'CSPR' : _b;
    return ((0, jsx_runtime_1.jsx)(BalanceText, tslib_1.__assign({ size: 3, monotype: true }, { children: emptyBalance ? ((0, jsx_runtime_1.jsx)(Ticker, { ticker: ticker, motes: '0', precisionCase: currency_1.PrecisionCase.deployCost, cep18Config: cep18Config })) : loading ? ('Loading...') : error != null ? (error) : ((0, jsx_runtime_1.jsx)(Ticker, { ticker: ticker, motes: accountBalance, precisionCase: currency_1.PrecisionCase.deployCost, cep18Config: cep18Config })) })));
};
function AccountInfoRow(props) {
    var publicKey = props.publicKey, label = props.label, _a = props.rightLabel, rightLabel = _a === void 0 ? 'Balance' : _a, accountEmpty = props.accountEmpty, accountBalance = props.accountBalance, loading = props.loading, error = props.error, _b = props.ticker, ticker = _b === void 0 ? 'CSPR' : _b, cep18Config = props.cep18Config;
    var responsiveHashSize = (0, match_media_1.useMatchMedia)([formatters_2.HashLength.TINY, formatters_2.HashLength.SMALL, formatters_2.HashLength.SMALL, formatters_2.HashLength.SMALL], []);
    var emptyBalance = accountEmpty ||
        (!loading && accountBalance != null && (0, big_js_1.default)(accountBalance).lte('0'));
    return ((0, jsx_runtime_1.jsxs)(StyledFlexColumn, tslib_1.__assign({ disabled: props.disabled, gap: 4 }, { children: [(0, jsx_runtime_1.jsxs)(flex_row_1.FlexRow, tslib_1.__assign({ justify: "space-between" }, { children: [(0, jsx_runtime_1.jsx)(body_text_1.BodyText, tslib_1.__assign({ size: 1 }, { children: label })), (0, jsx_runtime_1.jsx)(body_text_1.BodyText, tslib_1.__assign({ size: 1 }, { children: rightLabel }))] })), (0, jsx_runtime_1.jsx)(exports.ValuesRow, tslib_1.__assign({ justify: "space-between", align: "center" }, { children: publicKey && ((0, jsx_runtime_1.jsxs)(jsx_runtime_1.Fragment, { children: [(0, jsx_runtime_1.jsxs)(flex_row_1.FlexRow, tslib_1.__assign({ align: "center" }, { children: [(0, jsx_runtime_1.jsx)(tooltip_1.Tooltip, tslib_1.__assign({ title: publicKey }, { children: (0, jsx_runtime_1.jsx)(body_text_1.BodyText, tslib_1.__assign({ size: 3, monotype: true }, { children: (0, formatters_1.formatHash)(publicKey, responsiveHashSize) })) })), (0, jsx_runtime_1.jsx)(StyledIconContainer, { children: (0, jsx_runtime_1.jsx)(copy_hash_1.CopyHash, { value: publicKey, minified: true, variation: "gray" }) })] })), (0, jsx_runtime_1.jsx)(AccountInfoBalance, { accountBalance: accountBalance, emptyBalance: emptyBalance, error: error, loading: loading, ticker: ticker, cep18Config: cep18Config })] })) }))] })));
}
exports.AccountInfoRow = AccountInfoRow;
exports.default = AccountInfoRow;
var templateObject_1;
//# sourceMappingURL=data:application/json;base64,