"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.FlexBox = void 0;
var tslib_1 = require("tslib");
var jsx_runtime_1 = require("react/jsx-runtime");
var react_1 = tslib_1.__importDefault(require("react"));
var styled_components_1 = tslib_1.__importDefault(require("styled-components"));
var StyledFlexBox = (0, styled_components_1.default)('div')(function (_a) {
    var _b;
    var itemsSpacing = _a.itemsSpacing, flexDirection = _a.direction, justifyContent = _a.justify, flexWrap = _a.wrap, alignItems = _a.align, flexGrow = _a.grow, flexShrink = _a.shrink, _c = _a.basis, flexBasis = _c === void 0 ? 'auto' : _c, gap = _a.gap, onClick = _a.onClick;
    return (tslib_1.__assign(tslib_1.__assign({ display: 'flex', gap: gap, flexDirection: flexDirection, flexWrap: flexWrap, justifyContent: justifyContent, alignItems: alignItems, flexGrow: flexGrow, flexShrink: flexShrink, flexBasis: flexBasis }, (itemsSpacing != null && {
        '> * + *': (_b = {},
            _b[flexDirection === 'row' ? 'marginLeft' : 'marginTop'] = itemsSpacing,
            _b),
    })), (onClick && {
        cursor: 'pointer',
    })));
});
exports.FlexBox = react_1.default.forwardRef(function (props, ref) { return (0, jsx_runtime_1.jsx)(StyledFlexBox, tslib_1.__assign({ ref: ref }, props)); });
exports.default = exports.FlexBox;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmxleC1ib3guanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvbGliL2NvbXBvbmVudHMvZmxleC1ib3gvZmxleC1ib3gudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsd0RBQTBCO0FBQzFCLGdGQUF1QztBQW1CdkMsSUFBTSxhQUFhLEdBQUcsSUFBQSwyQkFBTSxFQUFDLEtBQUssQ0FBQyxDQUNqQyxVQUFDLEVBV0E7O1FBVkMsWUFBWSxrQkFBQSxFQUNELGFBQWEsZUFBQSxFQUNmLGNBQWMsYUFBQSxFQUNqQixRQUFRLFVBQUEsRUFDUCxVQUFVLFdBQUEsRUFDWCxRQUFRLFVBQUEsRUFDTixVQUFVLFlBQUEsRUFDbEIsYUFBeUIsRUFBbEIsU0FBUyxtQkFBRyxNQUFNLEtBQUEsRUFDekIsR0FBRyxTQUFBLEVBQ0gsT0FBTyxhQUFBO0lBQ0gsT0FBQSxxQ0FDSixPQUFPLEVBQUUsTUFBTSxFQUNmLEdBQUcsS0FBQSxFQUNILGFBQWEsZUFBQSxFQUNiLFFBQVEsVUFBQSxFQUNSLGNBQWMsZ0JBQUEsRUFDZCxVQUFVLFlBQUEsRUFDVixRQUFRLFVBQUEsRUFDUixVQUFVLFlBQUEsRUFDVixTQUFTLFdBQUEsSUFDTixDQUFDLFlBQVksSUFBSSxJQUFJLElBQUk7UUFDMUIsU0FBUztZQUNQLEdBQUMsYUFBYSxLQUFLLEtBQUssQ0FBQyxDQUFDLENBQUMsWUFBWSxDQUFDLENBQUMsQ0FBQyxXQUFXLElBQUcsWUFBWTtlQUNyRTtLQUNGLENBQUMsR0FDQyxDQUFDLE9BQU8sSUFBSTtRQUNiLE1BQU0sRUFBRSxTQUFTO0tBQ2xCLENBQUMsRUFDRjtBQWxCSSxDQWtCSixDQUNILENBQUM7QUFFVyxRQUFBLE9BQU8sR0FBRyxlQUFLLENBQUMsVUFBVSxDQUNyQyxVQUFDLEtBQUssRUFBRSxHQUFHLElBQUssT0FBQSx1QkFBQyxhQUFhLHFCQUFDLEdBQUcsRUFBRSxHQUFHLElBQU0sS0FBSyxFQUFJLEVBQXRDLENBQXNDLENBQ3ZELENBQUM7QUFFRixrQkFBZSxlQUFPLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgc3R5bGVkIGZyb20gJ3N0eWxlZC1jb21wb25lbnRzJztcclxuXHJcbmltcG9ydCB7IEJhc2VQcm9wcyB9IGZyb20gJy4uLy4uL3R5cGVzJztcclxuXHJcbi8qIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSAqL1xyXG5leHBvcnQgaW50ZXJmYWNlIEZsZXhCb3hQcm9wcyBleHRlbmRzIEJhc2VQcm9wcyB7XHJcbiAgLyogQGRlc2NyaXB0aW9uIHdpbGwgYWRkIHNwYWNpbmcgYmV0d2VlbiBjaGlsZHJlbiwgd29yayBkZXBlbmRpbmcgb24gcm93L2NvbHVtbiBsYXlvdXQgKi9cclxuICBpdGVtc1NwYWNpbmc/OiBudW1iZXI7XHJcbiAgaW5uZXJSZWY/OiBSZWFjdC5SZWY8SFRNTERpdkVsZW1lbnQ+O1xyXG4gIGdhcD86IFJlYWN0LkNTU1Byb3BlcnRpZXNbJ2dhcCddO1xyXG4gIGRpcmVjdGlvbj86IFJlYWN0LkNTU1Byb3BlcnRpZXNbJ2ZsZXhEaXJlY3Rpb24nXTtcclxuICB3cmFwPzogUmVhY3QuQ1NTUHJvcGVydGllc1snZmxleFdyYXAnXTtcclxuICBqdXN0aWZ5PzogUmVhY3QuQ1NTUHJvcGVydGllc1snanVzdGlmeUNvbnRlbnQnXTtcclxuICBhbGlnbj86IFJlYWN0LkNTU1Byb3BlcnRpZXNbJ2FsaWduSXRlbXMnXTtcclxuICBncm93PzogUmVhY3QuQ1NTUHJvcGVydGllc1snZmxleEdyb3cnXTtcclxuICBzaHJpbms/OiBSZWFjdC5DU1NQcm9wZXJ0aWVzWydmbGV4U2hyaW5rJ107XHJcbiAgYmFzaXM/OiBSZWFjdC5DU1NQcm9wZXJ0aWVzWydmbGV4QmFzaXMnXTtcclxufVxyXG5cclxuY29uc3QgU3R5bGVkRmxleEJveCA9IHN0eWxlZCgnZGl2Jyk8RmxleEJveFByb3BzPihcclxuICAoe1xyXG4gICAgaXRlbXNTcGFjaW5nLFxyXG4gICAgZGlyZWN0aW9uOiBmbGV4RGlyZWN0aW9uLFxyXG4gICAganVzdGlmeToganVzdGlmeUNvbnRlbnQsXHJcbiAgICB3cmFwOiBmbGV4V3JhcCxcclxuICAgIGFsaWduOiBhbGlnbkl0ZW1zLFxyXG4gICAgZ3JvdzogZmxleEdyb3csXHJcbiAgICBzaHJpbms6IGZsZXhTaHJpbmssXHJcbiAgICBiYXNpczogZmxleEJhc2lzID0gJ2F1dG8nLFxyXG4gICAgZ2FwLFxyXG4gICAgb25DbGljayxcclxuICB9KSA9PiAoe1xyXG4gICAgZGlzcGxheTogJ2ZsZXgnLFxyXG4gICAgZ2FwLFxyXG4gICAgZmxleERpcmVjdGlvbixcclxuICAgIGZsZXhXcmFwLFxyXG4gICAganVzdGlmeUNvbnRlbnQsXHJcbiAgICBhbGlnbkl0ZW1zLFxyXG4gICAgZmxleEdyb3csXHJcbiAgICBmbGV4U2hyaW5rLFxyXG4gICAgZmxleEJhc2lzLFxyXG4gICAgLi4uKGl0ZW1zU3BhY2luZyAhPSBudWxsICYmIHtcclxuICAgICAgJz4gKiArIConOiB7XHJcbiAgICAgICAgW2ZsZXhEaXJlY3Rpb24gPT09ICdyb3cnID8gJ21hcmdpbkxlZnQnIDogJ21hcmdpblRvcCddOiBpdGVtc1NwYWNpbmcsXHJcbiAgICAgIH0sXHJcbiAgICB9KSxcclxuICAgIC4uLihvbkNsaWNrICYmIHtcclxuICAgICAgY3Vyc29yOiAncG9pbnRlcicsXHJcbiAgICB9KSxcclxuICB9KVxyXG4pO1xyXG5cclxuZXhwb3J0IGNvbnN0IEZsZXhCb3ggPSBSZWFjdC5mb3J3YXJkUmVmPEhUTUxEaXZFbGVtZW50LCBGbGV4Qm94UHJvcHM+KFxyXG4gIChwcm9wcywgcmVmKSA9PiA8U3R5bGVkRmxleEJveCByZWY9e3JlZn0gey4uLnByb3BzfSAvPlxyXG4pO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgRmxleEJveDtcclxuIl19