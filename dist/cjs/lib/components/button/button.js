"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Button = void 0;
var tslib_1 = require("tslib");
var jsx_runtime_1 = require("react/jsx-runtime");
var react_1 = tslib_1.__importDefault(require("react"));
var styled_components_1 = tslib_1.__importDefault(require("styled-components"));
var match_size_1 = require("../../utils/match-size");
var BaseButton = styled_components_1.default.button(function (_a) {
    var theme = _a.theme, disabled = _a.disabled, _b = _a.height, height = _b === void 0 ? '36' : _b, _c = _a.width, width = _c === void 0 ? '100%' : _c;
    return (tslib_1.__assign({ display: 'flex', alignItems: 'center', justifyContent: 'center', border: 'none', borderRadius: theme.borderRadius.base, fontFamily: theme.typography.fontFamily.primary, fontWeight: (0, match_size_1.matchSize)({
            '24': theme.typography.fontWeight.medium,
            '36': theme.typography.fontWeight.medium,
            '40': theme.typography.fontWeight.semiBold,
        }, height), fontSize: (0, match_size_1.matchSize)({ '24': theme.scale('1.1rem'), '36': theme.scale('1.4rem'), '40': theme.scale('1.4rem') }, height), minHeight: (0, match_size_1.matchSize)({ '24': 24, '36': 36, '40': 40 }, height), lineHeight: (0, match_size_1.matchSize)({ '24': theme.scale('2rem'), '36': theme.scale('2rem'), '40': theme.scale('2rem') }, height), padding: (0, match_size_1.matchSize)({ '24': '2px 10px', '36': '8px 25px', '40': '10px 30px' }, height), width: (0, match_size_1.matchSize)({ '100': '100px', '120': '120px', '176': '176px', '100%': '100%' }, width), ':focus': {
            outline: 'none',
        } }, (disabled && {
        pointerEvents: 'none',
    })));
});
var PrimaryBlueButton = (0, styled_components_1.default)(BaseButton)(function (_a) {
    var theme = _a.theme, disabled = _a.disabled;
    return (tslib_1.__assign({ color: theme.styleguideColors.contentOnFill, background: theme.styleguideColors.contentBlue, ': hover': {
            background: theme.styleguideColors.fillPrimaryBlueHover,
        }, ': active': {
            background: theme.styleguideColors.fillPrimaryBlueClick,
        } }, (disabled && {
        color: theme.styleguideColors.contentTertiary,
        background: theme.styleguideColors.backgroundSecondary,
    })));
});
var PrimaryRedButton = (0, styled_components_1.default)(BaseButton)(function (_a) {
    var theme = _a.theme, disabled = _a.disabled;
    return (tslib_1.__assign({ color: theme.styleguideColors.contentOnFill, background: theme.styleguideColors.fillPrimaryRed, ': hover': {
            background: theme.styleguideColors.fillPrimaryRedHover,
        }, ': active': {
            background: theme.styleguideColors.fillPrimaryRedClick,
        } }, (disabled && {
        color: theme.styleguideColors.contentTertiary,
        background: theme.styleguideColors.fillSecondary,
    })));
});
var SecondaryBlueButton = (0, styled_components_1.default)(BaseButton)(function (_a) {
    var theme = _a.theme, disabled = _a.disabled;
    return (tslib_1.__assign({ color: theme.styleguideColors.contentBlue, background: theme.styleguideColors.backgroundSecondary, ': hover': {
            background: theme.styleguideColors.fillSecondaryBlueHover,
            borderColor: 'transparent',
        }, ': active': {
            background: theme.styleguideColors.fillSecondaryBlueClick,
            borderColor: 'transparent',
        } }, (disabled && {
        color: theme.styleguideColors.contentTertiary,
        background: theme.styleguideColors.backgroundPrimary,
    })));
});
var SecondaryRedButton = (0, styled_components_1.default)(BaseButton)(function (_a) {
    var theme = _a.theme, disabled = _a.disabled;
    return (tslib_1.__assign({ color: theme.styleguideColors.contentRed, background: theme.styleguideColors.fillSecondary, ': hover': {
            background: theme.styleguideColors.fillSecondaryRedHover,
        }, ': active': {
            background: theme.styleguideColors.fillSecondaryRedClick,
        } }, (disabled && {
        color: theme.styleguideColors.contentTertiary,
        background: theme.styleguideColors.fillSecondary,
    })));
});
var UtilityButton = (0, styled_components_1.default)(BaseButton)(function (_a) {
    var theme = _a.theme, disabled = _a.disabled;
    return (tslib_1.__assign({ color: theme.styleguideColors.fillPrimaryRed, background: theme.styleguideColors.backgroundSecondary, ': hover': {
            background: theme.styleguideColors.fillSecondaryRedHover,
        }, ': active': {
            background: theme.styleguideColors.fillSecondaryRedClick,
        } }, (disabled && {
        color: theme.styleguideColors.contentTertiary,
        background: theme.styleguideColors.backgroundPrimary,
    })));
});
var COMPONENT_MAP_BY_COLOR = {
    primaryBlue: PrimaryBlueButton,
    primaryRed: PrimaryRedButton,
    secondaryBlue: SecondaryBlueButton,
    secondaryRed: SecondaryRedButton,
    utility: UtilityButton,
};
exports.Button = react_1.default.forwardRef(function Button(_a, ref) {
    var _b = _a.color, color = _b === void 0 ? 'primaryBlue' : _b, props = tslib_1.__rest(_a, ["color"]);
    var ButtonComponent = COMPONENT_MAP_BY_COLOR[color] || PrimaryBlueButton;
    return (0, jsx_runtime_1.jsx)(ButtonComponent, tslib_1.__assign({ ref: ref, color: color }, props));
});
exports.default = exports.Button;
//# sourceMappingURL=data:application/json;base64,