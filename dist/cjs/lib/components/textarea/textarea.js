"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Textarea = void 0;
var tslib_1 = require("tslib");
var jsx_runtime_1 = require("react/jsx-runtime");
var styled_components_1 = tslib_1.__importDefault(require("styled-components"));
var form_field_1 = tslib_1.__importStar(require("../form-field/form-field"));
var svg_icon_1 = tslib_1.__importDefault(require("../svg-icon/svg-icon"));
var input_1 = require("../input/input");
var getThemeColorByError = function (error) {
    if (!error) {
        return 'fillSecondary';
    }
    return 'contentRed';
};
var StyledTextarea = styled_components_1.default.textarea(function (_a) {
    var theme = _a.theme;
    return ({
        height: 124,
        borderRadius: theme.borderRadius.base,
        width: '100%',
        padding: 0,
        color: 'inherit',
        background: 'inherit',
        fontFamily: 'inherit',
        fontSize: 'inherit',
        border: 'none',
        '&::placeholder': {
            color: theme.styleguideColors.contentSecondary,
        },
        resize: 'none'
    });
});
var TextareaContainer = (0, styled_components_1.default)('div')(function (_a) {
    var theme = _a.theme, disabled = _a.disabled, error = _a.error;
    return (tslib_1.__assign(tslib_1.__assign({ display: 'flex', flexDirection: 'row', justifyContent: 'space-between', alignItems: 'center', padding: '16px', borderRadius: theme.borderRadius.base, color: theme.styleguideColors.contentPrimary, background: theme.styleguideColors.fillSecondary, fontFamily: theme.typography.fontFamily.primary, fontSize: '0.875rem', path: {
            fill: theme.styleguideColors[getThemeColorByError(error)],
        } }, (error && {
        border: "1px solid ".concat(theme.styleguideColors.borderRed),
    })), (disabled && {
        opacity: 0.5,
        color: theme.styleguideColors.contentTertiary,
    })));
});
var SuffixContainer = (0, styled_components_1.default)('div')(function (_a) {
    var theme = _a.theme;
    return ({
        marginLeft: 16,
    });
});
function Textarea(_a) {
    var id = _a.id, className = _a.className, style = _a.style, disabled = _a.disabled, label = _a.label, rightLabel = _a.rightLabel, suffixIcon = _a.suffixIcon, error = _a.error, validationText = _a.validationText, onFocus = _a.onFocus, _b = _a.labelFontSize, labelFontSize = _b === void 0 ? input_1.LabelFontSize.default : _b, restProps = tslib_1.__rest(_a, ["id", "className", "style", "disabled", "label", "rightLabel", "suffixIcon", "error", "validationText", "onFocus", "labelFontSize"]);
    var handleFocus = function (event) {
        event.target.select();
        onFocus && onFocus(event);
    };
    if (error) {
        suffixIcon = (0, jsx_runtime_1.jsx)(svg_icon_1.default, { src: "assets/icons/ic-error.svg" });
    }
    return ((0, jsx_runtime_1.jsx)(form_field_1.default, tslib_1.__assign({ id: id, className: className, style: style, label: label, rightLabel: rightLabel, status: error ? form_field_1.FormFieldStatus.Error : undefined, statusText: validationText, disabled: disabled, labelFontSize: labelFontSize }, { children: (0, jsx_runtime_1.jsxs)(TextareaContainer, tslib_1.__assign({ error: error }, { children: [(0, jsx_runtime_1.jsx)(StyledTextarea, tslib_1.__assign({ title: "", disabled: disabled, onFocus: handleFocus }, restProps)), suffixIcon && (0, jsx_runtime_1.jsx)(SuffixContainer, { children: suffixIcon })] })) })));
}
exports.Textarea = Textarea;
exports.default = Textarea;
//# sourceMappingURL=data:application/json;base64,