"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TextRow = exports.TextRowType = void 0;
var tslib_1 = require("tslib");
var jsx_runtime_1 = require("react/jsx-runtime");
var styled_components_1 = tslib_1.__importDefault(require("styled-components"));
var body_text_1 = require("../body-text/body-text");
var flex_row_1 = require("../flex-row/flex-row");
var subtitle_text_1 = require("../subtitle-text/subtitle-text");
var truncate_box_1 = require("../truncate-box/truncate-box");
var formatters_1 = require("../../utils/formatters");
var tooltip_1 = require("../tooltip/tooltip");
var match_media_1 = require("../../utils/match-media");
var copy_hash_1 = require("../copy-hash/copy-hash");
var formatters_2 = require("../../utils/formatters");
var StyledWrapper = (0, styled_components_1.default)('div')(function (_a) { return ({
    display: 'flex',
    flexDirection: 'column',
}); });
var LabelContainer = (0, styled_components_1.default)('div')(function (_a) { return ({
    display: 'flex',
    flexDirection: 'row',
    alignItems: 'center',
    justifyContent: 'space-between',
    marginBottom: 4,
}); });
var InputContainer = (0, styled_components_1.default)('div')(function (_a) {
    var theme = _a.theme;
    return ({
        display: 'flex',
        flexDirection: 'row',
        justifyContent: 'space-between',
        alignItems: 'center',
        padding: '0 16px',
        height: 36,
        backgroundColor: theme.styleguideColors.backgroundPrimary,
        border: theme.border.base,
        borderRadius: theme.borderRadius.base,
    });
});
var SuffixContainer = (0, styled_components_1.default)('div')(function (_a) { return ({
    marginLeft: 16,
}); });
var SuffixTextContainer = (0, styled_components_1.default)(SuffixContainer)(function (_a) {
    var theme = _a.theme;
    return ({
        color: theme.styleguideColors.contentSecondary,
    });
});
var PrefixContainer = (0, styled_components_1.default)('div')(function (_a) { return ({
    marginRight: 16,
}); });
var TextRowType;
(function (TextRowType) {
    TextRowType["Text"] = "text";
    TextRowType["Hash"] = "hash";
    TextRowType["Number"] = "number";
})(TextRowType = exports.TextRowType || (exports.TextRowType = {}));
function TextRow(props) {
    var label = props.label, rightLabel = props.rightLabel, text = props.text, prefixIcon = props.prefixIcon, suffixText = props.suffixText, suffixIcon = props.suffixIcon, type = props.type, labelIcon = props.labelIcon, labelTooltipText = props.labelTooltipText;
    var responsiveHashSize = (0, match_media_1.useMatchMedia)([formatters_2.HashLength.SMALL, formatters_2.HashLength.MEDIUM, formatters_2.HashLength.LARGE, formatters_2.HashLength.FULL], []);
    var responsiveTruncateSize = (0, match_media_1.useMatchMedia)([2, 3, 4, 5], []);
    return ((0, jsx_runtime_1.jsxs)(StyledWrapper, { children: [(0, jsx_runtime_1.jsxs)(LabelContainer, { children: [label && ((0, jsx_runtime_1.jsx)(tooltip_1.Tooltip, tslib_1.__assign({ title: labelTooltipText, limitWidth: true }, { children: (0, jsx_runtime_1.jsxs)(flex_row_1.FlexRow, tslib_1.__assign({ gap: 3, align: 'center' }, { children: [(0, jsx_runtime_1.jsx)(subtitle_text_1.SubtitleText, tslib_1.__assign({ size: 1 }, { children: label })), labelIcon] })) }))), rightLabel && (0, jsx_runtime_1.jsx)(subtitle_text_1.SubtitleText, tslib_1.__assign({ size: 1 }, { children: rightLabel }))] }), (0, jsx_runtime_1.jsxs)(InputContainer, { children: [prefixIcon && (0, jsx_runtime_1.jsx)(PrefixContainer, { children: prefixIcon }), (0, jsx_runtime_1.jsxs)(flex_row_1.FlexRow, tslib_1.__assign({ itemsSpacing: 4 }, { children: [type === TextRowType.Hash ? ((0, jsx_runtime_1.jsx)(tooltip_1.Tooltip, tslib_1.__assign({ title: text }, { children: (0, jsx_runtime_1.jsx)(body_text_1.BodyText, tslib_1.__assign({ size: 3, monotype: true }, { children: (0, formatters_1.formatHash)(text || '', responsiveHashSize) })) }))) : ((0, jsx_runtime_1.jsx)(truncate_box_1.TruncateBox, tslib_1.__assign({ size: responsiveTruncateSize }, { children: (0, jsx_runtime_1.jsx)(tooltip_1.Tooltip, tslib_1.__assign({ title: text }, { children: (0, jsx_runtime_1.jsx)(body_text_1.BodyText, tslib_1.__assign({ size: 3, monotype: type === TextRowType.Number }, { children: text })) })) }))), (0, jsx_runtime_1.jsx)(copy_hash_1.CopyHash, { value: text ? text : '', minified: true, variation: "gray" })] })), suffixIcon && (0, jsx_runtime_1.jsx)(SuffixContainer, { children: suffixIcon }), suffixText && ((0, jsx_runtime_1.jsx)(SuffixTextContainer, { children: (0, jsx_runtime_1.jsx)(body_text_1.BodyText, tslib_1.__assign({ size: 3 }, { children: suffixText })) }))] })] }));
}
exports.TextRow = TextRow;
exports.default = TextRow;
//# sourceMappingURL=data:application/json;base64,